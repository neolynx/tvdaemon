From 6c36e12ffa2c7c1f6071fb9ea1e52ed70de51288 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Thu, 3 Jan 2013 00:37:07 +0100
Subject: [PATCH 05/11] libdvbv5: fix deadlock on missing table sections

---
 lib/libdvbv5/dvb-scan.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/lib/libdvbv5/dvb-scan.c b/lib/libdvbv5/dvb-scan.c
index 172d208..427ca05 100755
--- a/lib/libdvbv5/dvb-scan.c
+++ b/lib/libdvbv5/dvb-scan.c
@@ -315,7 +315,10 @@ int dvb_read_section_with_id(struct dvb_v5_fe_parms *parms, int dmx_fd, unsigned
 
 	*table = NULL;
 	ssize_t table_length = 0;
+	int start_id = -1;
+	int start_section = -1;
 
+	// handle sections
 	int first_section = -1;
 	int last_section = -1;
 	int table_id = -1;
@@ -382,6 +385,17 @@ int dvb_read_section_with_id(struct dvb_v5_fe_parms *parms, int dmx_fd, unsigned
 
 		struct dvb_table_header *h = (struct dvb_table_header *) buf;
 		dvb_table_header_init(h);
+
+		dvb_logdbg( "dvb_read_section: id %d, section %d/%d", h->id, h->section_id, h->last_section );
+		if (start_id == h->id && start_section == h->section_id) {
+			dvb_logwarn( "dvb_read_section: section repeated, reading done" );
+			free(buf);
+			ret = -5;
+			goto exit;
+		}
+		if (start_id == -1) start_id = h->id;
+		if (start_section == -1) start_section = h->section_id;
+
 		if (id != -1 && h->id != id) { /* search for a specific table id */
 			free(buf);
 			continue;
-- 
1.8.3.2

