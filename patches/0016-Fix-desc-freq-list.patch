From b2e60f7cbb0dcd2de8c09feebffdb95190abfbe3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Sat, 9 Jun 2012 13:15:36 +0200
Subject: [PATCH] Fix desc freq list

---
 lib/include/descriptors/desc_frequency_list.h  |   14 +++++++++---
 lib/libdvbv5/descriptors/desc_frequency_list.c |   26 +++++++++++------------
 2 files changed, 22 insertions(+), 18 deletions(-)

diff --git a/lib/include/descriptors/desc_frequency_list.h b/lib/include/descriptors/desc_frequency_list.h
index ffeae32..6f9b6ab 100644
--- a/lib/include/descriptors/desc_frequency_list.h
+++ b/lib/include/descriptors/desc_frequency_list.h
@@ -30,8 +30,14 @@ struct dvb_desc_frequency_list {
 	struct dvb_desc *next;
 
 	uint8_t length;
-	uint8_t coding_type:2;
-	uint8_t reserved_future_use:6;
+	union {
+		uint8_t bitfield;
+		struct {
+			uint8_t freq_type:2;
+			uint8_t reserved:6;
+		};
+	};
+	uint8_t frequencies;
 	uint32_t frequency[];
 } __attribute__((packed));
 
@@ -41,8 +47,8 @@ struct dvb_v5_fe_parms;
 extern "C" {
 #endif
 
-	ssize_t dvb_desc_frequency_list_init(const uint8_t **buf, struct dvb_desc *desc);
-	void dvb_desc_frequency_list_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+ssize_t dvb_desc_frequency_list_init(const uint8_t **buf, struct dvb_desc *desc);
+void dvb_desc_frequency_list_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
 
 #ifdef __cplusplus
 }
diff --git a/lib/libdvbv5/descriptors/desc_frequency_list.c b/lib/libdvbv5/descriptors/desc_frequency_list.c
index 46176b4..c1d3ac1 100644
--- a/lib/libdvbv5/descriptors/desc_frequency_list.c
+++ b/lib/libdvbv5/descriptors/desc_frequency_list.c
@@ -28,30 +28,28 @@ ssize_t dvb_desc_frequency_list_init(const uint8_t **buf, struct dvb_desc *desc)
 	dvb_desc_init(buf, desc);
 	struct dvb_desc_frequency_list *flist = (struct dvb_desc_frequency_list *) desc;
 
-	memcpy(((uint8_t *) flist ) + sizeof(flist->type) + sizeof(flist->next),
-			(*buf) + sizeof(flist->type),
-			sizeof(struct dvb_desc_frequency_list) - sizeof(flist->type) - sizeof(flist->next));
-	/* close the list */
-	flist->frequency[(flist->length - 1) / sizeof(*(flist->frequency))] = 0;
-	/* swap the data*/
+	flist->length   = (*buf)[1];
+	flist->bitfield = (*buf)[2];
+	*buf += 3;
+
+	flist->frequencies = (flist->length - 1) / sizeof(uint32_t);
 	int i = 0;
-	while(flist->frequency[i] != 0) {
+	for (i = 0; i < flist->frequencies; i++) {
+		flist->frequency[i] = ((uint32_t *) *buf)[i];
 		bswap32(flist->frequency[i]);
-		++i;
 	}
-	*buf += flist->length + 1;
 
-	return sizeof(struct dvb_desc_frequency_list) + flist->length + 3;
+	*buf += flist->length + 1;
+	return sizeof(struct dvb_desc_frequency_list) + flist->length + 3; // FIXME: why 3 ?
 }
 
 void dvb_desc_frequency_list_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc)
 {
 	const struct dvb_desc_frequency_list *flist = (const struct dvb_desc_frequency_list *) desc;
+	dvb_log("|       frequency list type: %d", flist->freq_type);
 	int i = 0;
-	dvb_log("|       frequency list");
-	while(flist->frequency[i] != 0) {
-		dvb_log("|           service type : '%d'", flist->frequency[i]);
-		++i;
+	for (i = 0; i < flist->frequencies; i++) {
+		dvb_log("|       frequency : %d", flist->frequency[i]);
 	}
 }
 
-- 
1.7.2.5

