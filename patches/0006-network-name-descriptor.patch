From 785ffe231007656bef619a527f3d002228dc61e4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Thu, 7 Jun 2012 22:21:26 +0200
Subject: [PATCH 06/12] network name descriptor

---
 lib/include/descriptors/desc_network_name.h  |   48 ++++++++++++++++++++++++++
 lib/include/descriptors/nit.h                |    1 +
 lib/include/descriptors/pmt.h                |    2 +-
 lib/libdvbv5/Makefile.am                     |    1 +
 lib/libdvbv5/descriptors.c                   |    3 +-
 lib/libdvbv5/descriptors/desc_network_name.c |   42 ++++++++++++++++++++++
 lib/libdvbv5/descriptors/language.c          |    2 +-
 lib/libdvbv5/descriptors/nit.c               |   16 ++++++---
 lib/libdvbv5/descriptors/pmt.c               |   15 ++++----
 9 files changed, 116 insertions(+), 14 deletions(-)
 create mode 100644 lib/include/descriptors/desc_network_name.h
 create mode 100644 lib/libdvbv5/descriptors/desc_network_name.c

diff --git a/lib/include/descriptors/desc_network_name.h b/lib/include/descriptors/desc_network_name.h
new file mode 100644
index 0000000..bbfbc2f
--- /dev/null
+++ b/lib/include/descriptors/desc_network_name.h
@@ -0,0 +1,48 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _NETWORK_NAME_H
+#define _NETWORK_NAME_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_network_name {
+	uint8_t type;
+	struct dvb_desc *next;
+
+	unsigned char network_name[];
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+ssize_t dvb_desc_network_name_init(const uint8_t **buf, struct dvb_desc *desc);
+void dvb_desc_network_name_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/descriptors/nit.h b/lib/include/descriptors/nit.h
index e094551..4ccafe9 100644
--- a/lib/include/descriptors/nit.h
+++ b/lib/include/descriptors/nit.h
@@ -62,6 +62,7 @@ struct dvb_table_nit {
 			uint16_t reserved:4;
 		};
 	};
+	struct dvb_desc *descriptor;
 	struct dvb_table_nit_transport *transport;
 } __attribute__((packed));
 
diff --git a/lib/include/descriptors/pmt.h b/lib/include/descriptors/pmt.h
index b5f32c6..6f87dd3 100644
--- a/lib/include/descriptors/pmt.h
+++ b/lib/include/descriptors/pmt.h
@@ -26,7 +26,7 @@
 #include <unistd.h> /* ssize_t */
 
 #include "descriptors/header.h"
-#include "descriptors.h"
+//#include "descriptors.h"
 
 #define DVB_TABLE_PMT      2
 
diff --git a/lib/libdvbv5/Makefile.am b/lib/libdvbv5/Makefile.am
index aff7895..f95d322 100644
--- a/lib/libdvbv5/Makefile.am
+++ b/lib/libdvbv5/Makefile.am
@@ -27,6 +27,7 @@ libdvbv5_la_SOURCES = \
   descriptors/pat.c  ../include/descriptors/pat.h \
   descriptors/pmt.c  ../include/descriptors/pmt.h \
   descriptors/language.c  ../include/descriptors/language.h \
+  descriptors/desc_network_name.c  ../include/descriptors/desc_network_name.h \
   descriptors/nit.c  ../include/descriptors/nit.h
 
 libdvbv5_la_CPPFLAGS = $(ENFORCE_LIBDVBV5_STATIC)
diff --git a/lib/libdvbv5/descriptors.c b/lib/libdvbv5/descriptors.c
index 3c9edef..c333c7b 100644
--- a/lib/libdvbv5/descriptors.c
+++ b/lib/libdvbv5/descriptors.c
@@ -32,6 +32,7 @@
 #include "descriptors/pat.h"
 #include "descriptors/pmt.h"
 #include "descriptors/language.h"
+#include "descriptors/desc_network_name.h"
 #include "descriptors/nit.h"
 
 void dvb_desc_init(const uint8_t **buf, struct dvb_desc *desc)
@@ -113,7 +114,7 @@ const struct dvb_descriptor dvb_descriptors[] = {
 	[AVC_timing_and_HRD_descriptor] = { "AVC_timing_and_HRD_descriptor", NULL, NULL },
 	[mpeg2_aac_audio_descriptor] = { "mpeg2_aac_audio_descriptor", NULL, NULL },
 	[flexmux_timing_descriptor] = { "flexmux_timing_descriptor", NULL, NULL },
-	[network_name_descriptor] = { "network_name_descriptor", NULL, NULL },
+	[network_name_descriptor] = { "network_name_descriptor", dvb_desc_network_name_init, dvb_desc_network_name_print },
 	[service_list_descriptor] = { "service_list_descriptor", NULL, NULL },
 	[stuffing_descriptor] = { "stuffing_descriptor", NULL, NULL },
 	[satellite_delivery_system_descriptor] = { "satellite_delivery_system_descriptor", NULL, NULL },
diff --git a/lib/libdvbv5/descriptors/desc_network_name.c b/lib/libdvbv5/descriptors/desc_network_name.c
new file mode 100644
index 0000000..55876ce
--- /dev/null
+++ b/lib/libdvbv5/descriptors/desc_network_name.c
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#include "descriptors/desc_network_name.h"
+#include "descriptors.h"
+#include "dvb-fe.h"
+
+ssize_t dvb_desc_network_name_init(const uint8_t **buf, struct dvb_desc *desc)
+{
+	dvb_desc_init(buf, desc);
+	struct dvb_desc_network_name *net = (struct dvb_desc_network_name *) desc;
+	uint8_t length = (*buf)[1];
+	memcpy(net->network_name, (*buf) + 2, length);
+	net->network_name[length] = '\0';
+	*buf += length + 2;
+	return sizeof(struct dvb_desc_network_name) + length + 1;
+}
+
+void dvb_desc_network_name_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc)
+{
+	const struct dvb_desc_network_name *net = (const struct dvb_desc_network_name *) desc;
+	dvb_log("|           network name: '%s'", net->network_name);
+}
+
diff --git a/lib/libdvbv5/descriptors/language.c b/lib/libdvbv5/descriptors/language.c
index cb99aa2..1823a96 100644
--- a/lib/libdvbv5/descriptors/language.c
+++ b/lib/libdvbv5/descriptors/language.c
@@ -32,7 +32,7 @@ ssize_t dvb_desc_language_init(const uint8_t **buf, struct dvb_desc *desc)
 	lang->language[2] = (*buf)[4];
 	lang->language[3] = '\0';
 	lang->audio_type  = (*buf)[5];
-	*buf += 5;
+	*buf += 6;
 	return sizeof(struct dvb_desc_language);
 }
 
diff --git a/lib/libdvbv5/descriptors/nit.c b/lib/libdvbv5/descriptors/nit.c
index e36cbd3..8d1e431 100644
--- a/lib/libdvbv5/descriptors/nit.c
+++ b/lib/libdvbv5/descriptors/nit.c
@@ -28,15 +28,17 @@ void *dvb_table_nit_init(const uint8_t *buf, ssize_t size)
 	const uint8_t *p = buf;
 	struct dvb_table_nit *nit = (struct dvb_table_nit *) d;
 
-	memcpy(nit, p, sizeof(struct dvb_table_nit) - sizeof(nit->transport));
-	p += sizeof(struct dvb_table_nit) - sizeof(nit->transport);
+	memcpy(nit, p, sizeof(struct dvb_table_nit) - sizeof(nit->descriptor) - sizeof(nit->transport));
+	p += sizeof(struct dvb_table_nit) - sizeof(nit->descriptor) - sizeof(nit->transport);
 	d += sizeof(struct dvb_table_nit);
 
 	dvb_table_header_init(&nit->header);
 	bswap16(nit->bitfield);
+	nit->descriptor = NULL;
 	nit->transport = NULL;
 
-	/* skip desc section */
+	d += dvb_parse_descriptor(p, d, nit->desc_length, &nit->descriptor);
+
 	p += nit->desc_length;
 
 	/*union dvb_table_nit_transport_header *h = (union dvb_table_nit_transport_header *)*/
@@ -82,12 +84,18 @@ void dvb_table_nit_print(struct dvb_v5_fe_parms *parms, struct dvb_table_nit *ni
 	dvb_log("NIT");
 	dvb_table_header_print(parms, &nit->header);
 	dvb_log("| desc_length   %d", nit->desc_length);
+	struct dvb_desc *desc = nit->descriptor;
+	while (desc) {
+		if (dvb_descriptors[desc->type].print)
+			dvb_descriptors[desc->type].print(parms, desc);
+		desc = desc->next;
+	}
 	dvb_log("|\\  transport_id  network_id");
 	const struct dvb_table_nit_transport *transport = nit->transport;
 	uint16_t transports = 0;
 	while(transport) {
 		dvb_log("|- %7d %7d", transport->transport_id, transport->network_id);
-		struct dvb_desc *desc = transport->descriptor;
+		desc = transport->descriptor;
 		while (desc) {
 			if (dvb_descriptors[desc->type].print)
 				dvb_descriptors[desc->type].print(parms, desc);
diff --git a/lib/libdvbv5/descriptors/pmt.c b/lib/libdvbv5/descriptors/pmt.c
index 379dd86..eda0f45 100644
--- a/lib/libdvbv5/descriptors/pmt.c
+++ b/lib/libdvbv5/descriptors/pmt.c
@@ -20,6 +20,7 @@
  */
 
 #include "descriptors/pmt.h"
+#include "descriptors.h"
 #include "dvb-fe.h"
 
 #include <string.h> /* memcpy */
@@ -43,8 +44,8 @@ void *dvb_table_pmt_init(const uint8_t *buf, ssize_t size)
 	p += pmt->prog_length;
 
 	/* get the stream entries */
-	struct dvb_table_pmt_stream *last_stream = NULL;
-	struct dvb_table_pmt_stream **head_stream = &pmt->stream;
+	struct dvb_table_pmt_stream *last = NULL;
+	struct dvb_table_pmt_stream **head = &pmt->stream;
 	while (p < buf + size - 4) {
 		struct dvb_table_pmt_stream *stream = (struct dvb_table_pmt_stream *) d;
 		memcpy(d, p, sizeof(struct dvb_table_pmt_stream) - sizeof(stream->descriptor) - sizeof(stream->next));
@@ -56,17 +57,17 @@ void *dvb_table_pmt_init(const uint8_t *buf, ssize_t size)
 		stream->descriptor = NULL;
 		stream->next = NULL;
 
-		if(!*head_stream)
-			*head_stream = stream;
-		if(last_stream)
-			last_stream->next = stream;
+		if(!*head)
+			*head = stream;
+		if(last)
+			last->next = stream;
 
 		/* get the descriptors for each program */
 		struct dvb_desc **head_desc = &stream->descriptor;
 		d += dvb_parse_descriptor(p, d, stream->section_length, head_desc);
 
 		p += stream->section_length;
-		last_stream = stream;
+		last = stream;
 	}
 
 	// FIXME: realloc
-- 
1.7.9.5

