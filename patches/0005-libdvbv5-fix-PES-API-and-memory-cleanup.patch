From 2976c472e83e858d42467a0751ad48df84c5a96d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Tue, 14 Oct 2014 17:32:29 +0200
Subject: [PATCH 5/8] libdvbv5: fix PES API and memory cleanup

---
 lib/include/libdvbv5/mpeg_pes.h |  2 +-
 lib/libdvbv5/tables/mpeg_pes.c  | 23 ++++++++++++++++++-----
 2 files changed, 19 insertions(+), 6 deletions(-)

diff --git a/lib/include/libdvbv5/mpeg_pes.h b/lib/include/libdvbv5/mpeg_pes.h
index 9f214b26..55537166 100644
--- a/lib/include/libdvbv5/mpeg_pes.h
+++ b/lib/include/libdvbv5/mpeg_pes.h
@@ -217,7 +217,7 @@ extern "C" {
  * allocated on stack or dynamically.
  */
 ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen,
-		uint8_t *table);
+		struct dvb_mpeg_pes **table);
 
 /**
  * @brief Deallocate memory associated with a struct dvb_mpeg_pes
diff --git a/lib/libdvbv5/tables/mpeg_pes.c b/lib/libdvbv5/tables/mpeg_pes.c
index 5a2a582e..3d06d915 100644
--- a/lib/libdvbv5/tables/mpeg_pes.c
+++ b/lib/libdvbv5/tables/mpeg_pes.c
@@ -22,13 +22,22 @@
 #include <libdvbv5/dvb-fe.h>
 #include <inttypes.h>
 
-ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table)
+ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_pes **table)
 {
-	struct dvb_mpeg_pes *pes = (struct dvb_mpeg_pes *) table;
 	const uint8_t *p = buf;
+	struct dvb_mpeg_pes *pes;
 	ssize_t bytes_read = 0;
 
-	memcpy(table, p, sizeof(struct dvb_mpeg_pes));
+	if (!*table) {
+		*table = calloc(sizeof(struct dvb_mpeg_pes), 1);
+		if (!*table) {
+			dvb_logerr("%s: out of memory", __func__);
+			return -1;
+		}
+	}
+
+	pes = *table;
+	memcpy(pes, p, sizeof(struct dvb_mpeg_pes));
 	p += sizeof(struct dvb_mpeg_pes);
 	bytes_read += sizeof(struct dvb_mpeg_pes);
 
@@ -37,7 +46,9 @@ ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssi
 
 	if (pes->sync != 0x000001) {
 		dvb_logerr("mpeg pes invalid, sync 0x%06x should be 0x000001", pes->sync);
-		return -1;
+		free( pes );
+		*table = NULL;
+		return -2;
 	}
 
 	if (pes->stream_id == DVB_MPEG_STREAM_PADDING) {
@@ -50,7 +61,9 @@ ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssi
 		   pes->stream_id == DVB_MPEG_STREAM_DSMCC ||
 		   pes->stream_id == DVB_MPEG_STREAM_H222E ) {
 		dvb_logerr("mpeg pes: unsupported stream type 0x%04x", pes->stream_id);
-		return -2;
+		free( pes );
+		*table = NULL;
+		return -3;
 	} else {
 		memcpy(pes->optional, p, sizeof(struct dvb_mpeg_pes_optional) -
 					 sizeof(pes->optional->pts) -
-- 
2.11.0

