From 20369236ec3e9b08052955c85d016a909610334f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Sun, 9 Feb 2014 15:07:08 +0100
Subject: [PATCH 33/40] fix mpeg ts

---
 lib/include/libdvbv5/mpeg_ts.h     |    5 +--
 lib/libdvbv5/descriptors/mpeg_ts.c |   65 ++++++++++++++++++------------------
 2 files changed, 35 insertions(+), 35 deletions(-)

diff --git a/lib/include/libdvbv5/mpeg_ts.h b/lib/include/libdvbv5/mpeg_ts.h
index a877f42..3eab029 100644
--- a/lib/include/libdvbv5/mpeg_ts.h
+++ b/lib/include/libdvbv5/mpeg_ts.h
@@ -25,6 +25,7 @@
 #include <unistd.h> /* ssize_t */
 
 #define DVB_MPEG_TS  0x47
+#define DVB_MPEG_TS_PACKET_SIZE  188
 
 struct dvb_mpeg_ts_adaption {
 	uint8_t length;
@@ -54,11 +55,11 @@ struct dvb_mpeg_ts {
 	} __attribute__((packed));
 	struct {
 		uint8_t continuity_counter:4;
-		uint8_t adaptation_field:2;
+		uint8_t payload:1;
+		uint8_t adaptation_field:1;
 		uint8_t scrambling:2;
 	} __attribute__((packed));
 	struct dvb_mpeg_ts_adaption adaption[];
-
 } __attribute__((packed));
 
 struct dvb_v5_fe_parms;
diff --git a/lib/libdvbv5/descriptors/mpeg_ts.c b/lib/libdvbv5/descriptors/mpeg_ts.c
index c2154af..5e405fc 100644
--- a/lib/libdvbv5/descriptors/mpeg_ts.c
+++ b/lib/libdvbv5/descriptors/mpeg_ts.c
@@ -24,30 +24,28 @@
 
 ssize_t dvb_mpeg_ts_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length)
 {
+	struct dvb_mpeg_ts *ts = (struct dvb_mpeg_ts *) table;
+	const uint8_t *p = buf;
+
 	if (buf[0] != DVB_MPEG_TS) {
 		dvb_logerr("mpeg ts invalid marker 0x%02x, sould be 0x%02x", buf[0], DVB_MPEG_TS);
 		*table_length = 0;
-		return 0;
+		return -1;
 	}
-	ssize_t bytes_read = 0;
-	struct dvb_mpeg_ts *ts = (struct dvb_mpeg_ts *) table;
-	const uint8_t *p = buf;
+
 	memcpy(table, p, sizeof(struct dvb_mpeg_ts));
 	p += sizeof(struct dvb_mpeg_ts);
-	bytes_read += sizeof(struct dvb_mpeg_ts);
-	*table_length = sizeof(struct dvb_mpeg_ts);
 
 	bswap16(ts->bitfield);
 
-	if (ts->adaptation_field & 0x2) {
-		memcpy(table + *table_length, p, sizeof(struct dvb_mpeg_ts_adaption));
-		p += sizeof(struct dvb_mpeg_ts_adaption);
-		bytes_read += sizeof(struct dvb_mpeg_ts_adaption);
-		*table_length += ts->adaption->length + 1;
+	if (ts->adaptation_field) {
+		memcpy(ts->adaption, p, sizeof(struct dvb_mpeg_ts_adaption));
+		p += ts->adaption->length + 1;
 		/* FIXME: copy adaption->lenght bytes */
 	}
-	/*hexdump(parms, "TS: ", buf, buflen);*/
-	return bytes_read;
+
+	*table_length = p - buf;
+	return p - buf;
 }
 
 void dvb_mpeg_ts_free(struct dvb_mpeg_ts *ts)
@@ -57,26 +55,27 @@ void dvb_mpeg_ts_free(struct dvb_mpeg_ts *ts)
 
 void dvb_mpeg_ts_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_ts *ts)
 {
-	dvb_log("MPEG TS");
-	dvb_log(" - sync byte        0x%02x", ts->sync_byte);
-	dvb_log(" - tei                %d", ts->tei);
-	dvb_log(" - payload_start      %d", ts->payload_start);
-	dvb_log(" - priority           %d", ts->priority);
-	dvb_log(" - pid              0x%04x", ts->pid);
-	dvb_log(" - scrambling         %d", ts->scrambling);
-	dvb_log(" - adaptation_field   %d", ts->adaptation_field);
-	dvb_log(" - continuity_counter %d", ts->continuity_counter);
-	if (ts->adaptation_field & 0x2) {
-		dvb_log(" Adaption Field");
-                dvb_log("   - length         %d", ts->adaption->length);
-                dvb_log("   - discontinued   %d", ts->adaption->discontinued);
-                dvb_log("   - random_access  %d", ts->adaption->random_access);
-                dvb_log("   - priority       %d", ts->adaption->priority);
-                dvb_log("   - PCR            %d", ts->adaption->PCR);
-                dvb_log("   - OPCR           %d", ts->adaption->OPCR);
-                dvb_log("   - splicing_point %d", ts->adaption->splicing_point);
-                dvb_log("   - private_data   %d", ts->adaption->private_data);
-                dvb_log("   - extension      %d", ts->adaption->extension);
+	dvb_loginfo("MPEG TS");
+	dvb_loginfo(" - sync byte       0x%02x", ts->sync_byte);
+	dvb_loginfo(" - tei                %d", ts->tei);
+	dvb_loginfo(" - payload_start      %d", ts->payload_start);
+	dvb_loginfo(" - priority           %d", ts->priority);
+	dvb_loginfo(" - pid           0x%04x", ts->pid);
+	dvb_loginfo(" - scrambling         %d", ts->scrambling);
+	dvb_loginfo(" - adaptation_field   %d", ts->adaptation_field);
+	dvb_loginfo(" - payload present    %d", ts->payload);
+	dvb_loginfo(" - continuity_counter %d", ts->continuity_counter);
+	if (ts->adaptation_field) {
+		dvb_loginfo(" Adaption Field");
+                dvb_loginfo("   - length         %d", ts->adaption->length);
+                dvb_loginfo("   - discontinued   %d", ts->adaption->discontinued);
+                dvb_loginfo("   - random_access  %d", ts->adaption->random_access);
+                dvb_loginfo("   - priority       %d", ts->adaption->priority);
+                dvb_loginfo("   - PCR            %d", ts->adaption->PCR);
+                dvb_loginfo("   - OPCR           %d", ts->adaption->OPCR);
+                dvb_loginfo("   - splicing_point %d", ts->adaption->splicing_point);
+                dvb_loginfo("   - private_data   %d", ts->adaption->private_data);
+                dvb_loginfo("   - extension      %d", ts->adaption->extension);
 	}
 }
 
-- 
1.7.10.4

