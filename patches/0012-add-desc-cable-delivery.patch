From 78a6b4ab9aa03654f0e023c767d5e11c67eb9ba9 Mon Sep 17 00:00:00 2001
From: Lars Schmohl <lars.schmohl@gmail.com>
Date: Fri, 8 Jun 2012 19:46:13 +0200
Subject: [PATCH 12/15] add desc cable delivery

---
 lib/include/descriptors/desc_cable_delivery.h  |   64 ++++++++++++++++++++++++
 lib/libdvbv5/Makefile.am                       |    1 +
 lib/libdvbv5/descriptors.c                     |    3 +-
 lib/libdvbv5/descriptors/desc_cable_delivery.c |   55 ++++++++++++++++++++
 4 files changed, 122 insertions(+), 1 deletion(-)
 create mode 100644 lib/include/descriptors/desc_cable_delivery.h
 create mode 100644 lib/libdvbv5/descriptors/desc_cable_delivery.c

diff --git a/lib/include/descriptors/desc_cable_delivery.h b/lib/include/descriptors/desc_cable_delivery.h
new file mode 100644
index 0000000..50f1aab
--- /dev/null
+++ b/lib/include/descriptors/desc_cable_delivery.h
@@ -0,0 +1,64 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _CABLE_DELIVERY_H
+#define _CABLE_DELIVERY_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_cable_delivery {
+	uint8_t type;
+	struct dvb_desc *next;
+
+	uint8_t length;
+	uint32_t frequency;
+	union {
+		uint16_t bitfield1;
+		struct {
+			uint16_t fec_outer:4;
+			uint16_t reserved_future_use:12;
+		};
+	};
+	uint8_t modulation;
+	union {
+		uint32_t bitfield2;
+		struct {
+			uint32_t fec_inner:4;
+			uint32_t symbol_rate:28;
+		};
+	};
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+	ssize_t dvb_desc_cable_delivery_init(const uint8_t **buf, struct dvb_desc *desc);
+	void dvb_desc_cable_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/libdvbv5/Makefile.am b/lib/libdvbv5/Makefile.am
index dbea9b5..e18b161 100644
--- a/lib/libdvbv5/Makefile.am
+++ b/lib/libdvbv5/Makefile.am
@@ -28,6 +28,7 @@ libdvbv5_la_SOURCES = \
   descriptors/pmt.c  ../include/descriptors/pmt.h \
   descriptors/desc_language.c  ../include/descriptors/desc_language.h \
   descriptors/desc_network_name.c  ../include/descriptors/desc_network_name.h \
+  descriptors/desc_cable_delivery.c  ../include/descriptors/desc_cable_delivery.h \
   descriptors/desc_sat.c  ../include/descriptors/desc_sat.h \
   descriptors/desc_service.c  ../include/descriptors/desc_service.h \
   descriptors/desc_service_list.c  ../include/descriptors/desc_service_list.h \
diff --git a/lib/libdvbv5/descriptors.c b/lib/libdvbv5/descriptors.c
index 7fb6554..1151de6 100644
--- a/lib/libdvbv5/descriptors.c
+++ b/lib/libdvbv5/descriptors.c
@@ -33,6 +33,7 @@
 #include "descriptors/pmt.h"
 #include "descriptors/desc_language.h"
 #include "descriptors/desc_network_name.h"
+#include "descriptors/desc_cable_delivery.h"
 #include "descriptors/desc_sat.h"
 #include "descriptors/desc_service.h"
 #include "descriptors/desc_service_list.h"
@@ -129,7 +130,7 @@ const struct dvb_descriptor dvb_descriptors[] = {
 	[service_list_descriptor] = { "service_list_descriptor", dvb_desc_service_list_init, dvb_desc_service_list_print },
 	[stuffing_descriptor] = { "stuffing_descriptor", NULL, NULL },
 	[satellite_delivery_system_descriptor] = { "satellite_delivery_system_descriptor", dvb_desc_sat_init, dvb_desc_sat_print },
-	[cable_delivery_system_descriptor] = { "cable_delivery_system_descriptor", NULL, NULL },
+	[cable_delivery_system_descriptor] = { "cable_delivery_system_descriptor", dvb_desc_cable_delivery_init, dvb_desc_cable_delivery_print },
 	[VBI_data_descriptor] = { "VBI_data_descriptor", NULL, NULL },
 	[VBI_teletext_descriptor] = { "VBI_teletext_descriptor", NULL, NULL },
 	[bouquet_name_descriptor] = { "bouquet_name_descriptor", NULL, NULL },
diff --git a/lib/libdvbv5/descriptors/desc_cable_delivery.c b/lib/libdvbv5/descriptors/desc_cable_delivery.c
new file mode 100644
index 0000000..1bb9158
--- /dev/null
+++ b/lib/libdvbv5/descriptors/desc_cable_delivery.c
@@ -0,0 +1,55 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#include "descriptors/desc_cable_delivery.h"
+#include "descriptors.h"
+#include "dvb-fe.h"
+
+ssize_t dvb_desc_cable_delivery_init(const uint8_t **buf, struct dvb_desc *desc)
+{
+	dvb_desc_init(buf, desc);
+	struct dvb_desc_cable_delivery *cable = (struct dvb_desc_cable_delivery *) desc;
+	/* copy from .length */
+	memcpy(((uint8_t *) cable ) + sizeof(cable->type) + sizeof(cable->next),
+			(*buf) + sizeof(cable->type),
+			sizeof(struct dvb_desc_cable_delivery) - sizeof(cable->type) - sizeof(cable->next));
+	bswap32(cable->frequency);
+	bswap16(cable->bitfield1);
+	bswap32(cable->bitfield2);
+	cable->frequency   = bcd(cable->frequency) * 100;
+	cable->symbol_rate = bcd(cable->symbol_rate) * 100;
+
+	*buf += sizeof(struct dvb_desc_cable_delivery) - sizeof(cable->next);
+	return sizeof(struct dvb_desc_cable_delivery);
+}
+
+void dvb_desc_cable_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc)
+{
+	const struct dvb_desc_cable_delivery *cable = (const struct dvb_desc_cable_delivery *) desc;
+	dvb_log("|        cable delivery");
+	dvb_log("|           length            %d", cable->length);
+	dvb_log("|           frequency         %d", cable->frequency);
+	dvb_log("|           fec outer         %d", cable->fec_outer);
+	dvb_log("|           modulation        %d", cable->modulation);
+	dvb_log("|           symbol_rate       %d", cable->symbol_rate);
+	dvb_log("|           fec inner         %d", cable->fec_inner);
+}
+
-- 
1.7.9.5

