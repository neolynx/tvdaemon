From d5f81bfb72c036cea17a530c1643687b936e4d05 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Mon, 30 Dec 2013 01:45:07 +0100
Subject: [PATCH 17/19] libdvbv5: shared lib and installing headers
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Andr√© Roth <neolynx@gmail.com>
---
 lib/include/descriptors.h                          | 297 -----------
 lib/include/descriptors/atsc_eit.h                 |  90 ----
 lib/include/descriptors/atsc_header.h              |  63 ---
 .../descriptors/desc_atsc_service_location.h       |  71 ---
 lib/include/descriptors/desc_cable_delivery.h      |  69 ---
 lib/include/descriptors/desc_event_extended.h      |  60 ---
 lib/include/descriptors/desc_event_short.h         |  54 --
 lib/include/descriptors/desc_extension.h           |  86 ---
 lib/include/descriptors/desc_frequency_list.h      |  58 --
 lib/include/descriptors/desc_hierarchy.h           |  58 --
 lib/include/descriptors/desc_isdbt_delivery.h      |  62 ---
 lib/include/descriptors/desc_language.h            |  50 --
 lib/include/descriptors/desc_logical_channel.h     |  65 ---
 lib/include/descriptors/desc_network_name.h        |  51 --
 lib/include/descriptors/desc_partial_reception.h   |  57 --
 lib/include/descriptors/desc_sat.h                 |  67 ---
 lib/include/descriptors/desc_service.h             |  54 --
 lib/include/descriptors/desc_service_list.h        |  54 --
 lib/include/descriptors/desc_service_location.h    |  69 ---
 lib/include/descriptors/desc_t2_delivery.h         |  78 ---
 .../descriptors/desc_terrestrial_delivery.h        |  70 ---
 lib/include/descriptors/desc_ts_info.h             |  66 ---
 lib/include/descriptors/eit.h                      |  91 ----
 lib/include/descriptors/header.h                   |  81 ---
 lib/include/descriptors/mgt.h                      |  80 ---
 lib/include/descriptors/mpeg_es.h                  | 109 ----
 lib/include/descriptors/mpeg_pes.h                 | 111 ----
 lib/include/descriptors/mpeg_ts.h                  |  78 ---
 lib/include/descriptors/nit.h                      | 103 ----
 lib/include/descriptors/pat.h                      |  68 ---
 lib/include/descriptors/pmt.h                      | 119 -----
 lib/include/descriptors/sdt.h                      |  76 ---
 lib/include/descriptors/vct.h                      | 127 -----
 lib/include/dvb-demux.h                            |  50 --
 lib/include/dvb-fe.h                               | 231 --------
 lib/include/dvb-file.h                             | 161 ------
 lib/include/dvb-frontend.h                         | 593 ---------------------
 lib/include/dvb-log.h                              |  49 --
 lib/include/dvb-sat.h                              |  57 --
 lib/include/dvb-scan.h                             | 113 ----
 lib/include/dvb-v5-std.h                           |  96 ----
 lib/include/libdvbv5/atsc_eit.h                    |  90 ++++
 lib/include/libdvbv5/atsc_header.h                 |  63 +++
 lib/include/libdvbv5/desc_atsc_service_location.h  |  71 +++
 lib/include/libdvbv5/desc_cable_delivery.h         |  69 +++
 lib/include/libdvbv5/desc_event_extended.h         |  60 +++
 lib/include/libdvbv5/desc_event_short.h            |  54 ++
 lib/include/libdvbv5/desc_extension.h              |  86 +++
 lib/include/libdvbv5/desc_frequency_list.h         |  58 ++
 lib/include/libdvbv5/desc_hierarchy.h              |  58 ++
 lib/include/libdvbv5/desc_isdbt_delivery.h         |  62 +++
 lib/include/libdvbv5/desc_language.h               |  50 ++
 lib/include/libdvbv5/desc_logical_channel.h        |  65 +++
 lib/include/libdvbv5/desc_network_name.h           |  51 ++
 lib/include/libdvbv5/desc_partial_reception.h      |  57 ++
 lib/include/libdvbv5/desc_sat.h                    |  67 +++
 lib/include/libdvbv5/desc_service.h                |  54 ++
 lib/include/libdvbv5/desc_service_list.h           |  54 ++
 lib/include/libdvbv5/desc_service_location.h       |  69 +++
 lib/include/libdvbv5/desc_t2_delivery.h            |  78 +++
 lib/include/libdvbv5/desc_terrestrial_delivery.h   |  70 +++
 lib/include/libdvbv5/desc_ts_info.h                |  66 +++
 lib/include/libdvbv5/descriptors.h                 | 297 +++++++++++
 lib/include/libdvbv5/dvb-demux.h                   |  50 ++
 lib/include/libdvbv5/dvb-fe.h                      | 231 ++++++++
 lib/include/libdvbv5/dvb-file.h                    | 161 ++++++
 lib/include/libdvbv5/dvb-frontend.h                | 593 +++++++++++++++++++++
 lib/include/libdvbv5/dvb-log.h                     |  49 ++
 lib/include/libdvbv5/dvb-sat.h                     |  57 ++
 lib/include/libdvbv5/dvb-scan.h                    | 113 ++++
 lib/include/libdvbv5/dvb-v5-std.h                  |  96 ++++
 lib/include/libdvbv5/eit.h                         |  91 ++++
 lib/include/libdvbv5/header.h                      |  81 +++
 lib/include/libdvbv5/mgt.h                         |  80 +++
 lib/include/libdvbv5/mpeg_es.h                     | 109 ++++
 lib/include/libdvbv5/mpeg_pes.h                    | 111 ++++
 lib/include/libdvbv5/mpeg_ts.h                     |  78 +++
 lib/include/libdvbv5/nit.h                         | 103 ++++
 lib/include/libdvbv5/pat.h                         |  68 +++
 lib/include/libdvbv5/pmt.h                         | 119 +++++
 lib/include/libdvbv5/sdt.h                         |  76 +++
 lib/include/libdvbv5/vct.h                         | 127 +++++
 lib/libdvbv5/Makefile.am                           | 142 +++--
 lib/libdvbv5/descriptors.c                         |  62 +--
 lib/libdvbv5/descriptors/atsc_eit.c                |   4 +-
 lib/libdvbv5/descriptors/atsc_header.c             |   6 +-
 .../descriptors/desc_atsc_service_location.c       |   8 +-
 lib/libdvbv5/descriptors/desc_cable_delivery.c     |   6 +-
 lib/libdvbv5/descriptors/desc_event_extended.c     |   8 +-
 lib/libdvbv5/descriptors/desc_event_short.c        |   8 +-
 lib/libdvbv5/descriptors/desc_extension.c          |   8 +-
 lib/libdvbv5/descriptors/desc_frequency_list.c     |   6 +-
 lib/libdvbv5/descriptors/desc_hierarchy.c          |   6 +-
 lib/libdvbv5/descriptors/desc_isdbt_delivery.c     |   8 +-
 lib/libdvbv5/descriptors/desc_language.c           |   6 +-
 lib/libdvbv5/descriptors/desc_logical_channel.c    |   8 +-
 lib/libdvbv5/descriptors/desc_network_name.c       |   6 +-
 lib/libdvbv5/descriptors/desc_partial_reception.c  |   8 +-
 lib/libdvbv5/descriptors/desc_sat.c                |   6 +-
 lib/libdvbv5/descriptors/desc_service.c            |   8 +-
 lib/libdvbv5/descriptors/desc_service_list.c       |   6 +-
 lib/libdvbv5/descriptors/desc_service_location.c   |   6 +-
 lib/libdvbv5/descriptors/desc_t2_delivery.c        |   8 +-
 .../descriptors/desc_terrestrial_delivery.c        |   6 +-
 lib/libdvbv5/descriptors/desc_ts_info.c            |   8 +-
 lib/libdvbv5/descriptors/eit.c                     |   4 +-
 lib/libdvbv5/descriptors/header.c                  |   6 +-
 lib/libdvbv5/descriptors/mgt.c                     |   4 +-
 lib/libdvbv5/descriptors/mpeg_es.c                 |   6 +-
 lib/libdvbv5/descriptors/mpeg_pes.c                |   6 +-
 lib/libdvbv5/descriptors/mpeg_ts.c                 |   6 +-
 lib/libdvbv5/descriptors/nit.c                     |   4 +-
 lib/libdvbv5/descriptors/pat.c                     |   6 +-
 lib/libdvbv5/descriptors/pmt.c                     |   6 +-
 lib/libdvbv5/descriptors/sdt.c                     |   4 +-
 lib/libdvbv5/descriptors/vct.c                     |   6 +-
 lib/libdvbv5/dvb-demux.c                           |   2 +-
 lib/libdvbv5/dvb-fe.c                              |   4 +-
 lib/libdvbv5/dvb-file.c                            |  48 +-
 lib/libdvbv5/dvb-legacy-channel-format.c           |   4 +-
 lib/libdvbv5/dvb-log.c                             |   2 +-
 lib/libdvbv5/dvb-sat.c                             |   4 +-
 lib/libdvbv5/dvb-scan.c                            |  44 +-
 lib/libdvbv5/dvb-v5-std.c                          |   2 +-
 lib/libdvbv5/dvb-v5.h                              |   2 +-
 lib/libdvbv5/dvb-zap-format.c                      |   4 +-
 lib/libdvbv5/gen_dvb_structs.pl                    |   4 +-
 lib/libdvbv5/parse_string.c                        |   4 +-
 utils/dvb/dvb-fe-tool.c                            |   2 +-
 utils/dvb/dvb-format-convert.c                     |   6 +-
 utils/dvb/dvbv5-scan.c                             |   8 +-
 utils/dvb/dvbv5-zap.c                              |   8 +-
 132 files changed, 4340 insertions(+), 4298 deletions(-)
 delete mode 100644 lib/include/descriptors.h
 delete mode 100644 lib/include/descriptors/atsc_eit.h
 delete mode 100644 lib/include/descriptors/atsc_header.h
 delete mode 100644 lib/include/descriptors/desc_atsc_service_location.h
 delete mode 100644 lib/include/descriptors/desc_cable_delivery.h
 delete mode 100644 lib/include/descriptors/desc_event_extended.h
 delete mode 100644 lib/include/descriptors/desc_event_short.h
 delete mode 100644 lib/include/descriptors/desc_extension.h
 delete mode 100644 lib/include/descriptors/desc_frequency_list.h
 delete mode 100644 lib/include/descriptors/desc_hierarchy.h
 delete mode 100644 lib/include/descriptors/desc_isdbt_delivery.h
 delete mode 100644 lib/include/descriptors/desc_language.h
 delete mode 100644 lib/include/descriptors/desc_logical_channel.h
 delete mode 100644 lib/include/descriptors/desc_network_name.h
 delete mode 100644 lib/include/descriptors/desc_partial_reception.h
 delete mode 100644 lib/include/descriptors/desc_sat.h
 delete mode 100644 lib/include/descriptors/desc_service.h
 delete mode 100644 lib/include/descriptors/desc_service_list.h
 delete mode 100644 lib/include/descriptors/desc_service_location.h
 delete mode 100644 lib/include/descriptors/desc_t2_delivery.h
 delete mode 100644 lib/include/descriptors/desc_terrestrial_delivery.h
 delete mode 100644 lib/include/descriptors/desc_ts_info.h
 delete mode 100644 lib/include/descriptors/eit.h
 delete mode 100644 lib/include/descriptors/header.h
 delete mode 100644 lib/include/descriptors/mgt.h
 delete mode 100644 lib/include/descriptors/mpeg_es.h
 delete mode 100644 lib/include/descriptors/mpeg_pes.h
 delete mode 100644 lib/include/descriptors/mpeg_ts.h
 delete mode 100644 lib/include/descriptors/nit.h
 delete mode 100644 lib/include/descriptors/pat.h
 delete mode 100644 lib/include/descriptors/pmt.h
 delete mode 100644 lib/include/descriptors/sdt.h
 delete mode 100644 lib/include/descriptors/vct.h
 delete mode 100644 lib/include/dvb-demux.h
 delete mode 100644 lib/include/dvb-fe.h
 delete mode 100644 lib/include/dvb-file.h
 delete mode 100644 lib/include/dvb-frontend.h
 delete mode 100644 lib/include/dvb-log.h
 delete mode 100644 lib/include/dvb-sat.h
 delete mode 100644 lib/include/dvb-scan.h
 delete mode 100644 lib/include/dvb-v5-std.h
 create mode 100644 lib/include/libdvbv5/atsc_eit.h
 create mode 100644 lib/include/libdvbv5/atsc_header.h
 create mode 100644 lib/include/libdvbv5/desc_atsc_service_location.h
 create mode 100644 lib/include/libdvbv5/desc_cable_delivery.h
 create mode 100644 lib/include/libdvbv5/desc_event_extended.h
 create mode 100644 lib/include/libdvbv5/desc_event_short.h
 create mode 100644 lib/include/libdvbv5/desc_extension.h
 create mode 100644 lib/include/libdvbv5/desc_frequency_list.h
 create mode 100644 lib/include/libdvbv5/desc_hierarchy.h
 create mode 100644 lib/include/libdvbv5/desc_isdbt_delivery.h
 create mode 100644 lib/include/libdvbv5/desc_language.h
 create mode 100644 lib/include/libdvbv5/desc_logical_channel.h
 create mode 100644 lib/include/libdvbv5/desc_network_name.h
 create mode 100644 lib/include/libdvbv5/desc_partial_reception.h
 create mode 100644 lib/include/libdvbv5/desc_sat.h
 create mode 100644 lib/include/libdvbv5/desc_service.h
 create mode 100644 lib/include/libdvbv5/desc_service_list.h
 create mode 100644 lib/include/libdvbv5/desc_service_location.h
 create mode 100644 lib/include/libdvbv5/desc_t2_delivery.h
 create mode 100644 lib/include/libdvbv5/desc_terrestrial_delivery.h
 create mode 100644 lib/include/libdvbv5/desc_ts_info.h
 create mode 100644 lib/include/libdvbv5/descriptors.h
 create mode 100644 lib/include/libdvbv5/dvb-demux.h
 create mode 100644 lib/include/libdvbv5/dvb-fe.h
 create mode 100644 lib/include/libdvbv5/dvb-file.h
 create mode 100644 lib/include/libdvbv5/dvb-frontend.h
 create mode 100644 lib/include/libdvbv5/dvb-log.h
 create mode 100644 lib/include/libdvbv5/dvb-sat.h
 create mode 100644 lib/include/libdvbv5/dvb-scan.h
 create mode 100644 lib/include/libdvbv5/dvb-v5-std.h
 create mode 100644 lib/include/libdvbv5/eit.h
 create mode 100644 lib/include/libdvbv5/header.h
 create mode 100644 lib/include/libdvbv5/mgt.h
 create mode 100644 lib/include/libdvbv5/mpeg_es.h
 create mode 100644 lib/include/libdvbv5/mpeg_pes.h
 create mode 100644 lib/include/libdvbv5/mpeg_ts.h
 create mode 100644 lib/include/libdvbv5/nit.h
 create mode 100644 lib/include/libdvbv5/pat.h
 create mode 100644 lib/include/libdvbv5/pmt.h
 create mode 100644 lib/include/libdvbv5/sdt.h
 create mode 100644 lib/include/libdvbv5/vct.h

diff --git a/lib/include/descriptors.h b/lib/include/descriptors.h
deleted file mode 100644
index 6f89aeb..0000000
--- a/lib/include/descriptors.h
+++ /dev/null
@@ -1,297 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- */
-
-/*
- * Descriptors, as defined on ETSI EN 300 468 V1.11.1 (2010-04)
- */
-
-
-#ifndef _DESCRIPTORS_H
-#define _DESCRIPTORS_H
-
-#include <arpa/inet.h>
-#include <unistd.h>
-#include <stdint.h>
-
-#define DVB_MAX_PAYLOAD_PACKET_SIZE 4096
-#define DVB_PID_SDT      17
-#define DVB_PMT_TABLE_ID 2
-
-struct dvb_v5_fe_parms;
-
-typedef void (*dvb_table_init_func)(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-
-struct dvb_table_init {
-	dvb_table_init_func init;
-	ssize_t size;
-};
-
-extern const struct dvb_table_init dvb_table_initializers[];
-extern char *default_charset;
-extern char *output_charset;
-
-#define bswap16(b) do {\
-	b = ntohs(b); \
-} while (0)
-
-#define bswap32(b) do {\
-	b = ntohl(b); \
-} while (0)
-
-struct dvb_desc {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint8_t data[];
-} __attribute__((packed));
-
-void dvb_desc_default_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-#ifdef __cplusplus
-extern "C" {
-#endif
-void dvb_desc_default_print  (struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-#ifdef __cplusplus
-}
-#endif
-
-#define dvb_desc_foreach( _desc, _tbl ) \
-	for( struct dvb_desc *_desc = _tbl->descriptor; _desc; _desc = _desc->next ) \
-
-#define dvb_desc_find(_struct, _desc, _tbl, _type) \
-	for( _struct *_desc = (_struct *) _tbl->descriptor; _desc; _desc = (_struct *) _desc->next ) \
-		if(_desc->type == _type) \
-
-ssize_t dvb_desc_init(const uint8_t *buf, struct dvb_desc *desc);
-
-uint32_t bcd(uint32_t bcd);
-
-void hexdump(struct dvb_v5_fe_parms *parms, const char *prefix, const unsigned char *buf, int len);
-
-void dvb_parse_descriptors(struct dvb_v5_fe_parms *parms, const uint8_t *buf, uint16_t section_length, struct dvb_desc **head_desc);
-void dvb_free_descriptors(struct dvb_desc **list);
-void dvb_print_descriptors(struct dvb_v5_fe_parms *parms, struct dvb_desc *desc);
-
-struct dvb_v5_fe_parms;
-
-typedef void (*dvb_desc_init_func) (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-typedef void (*dvb_desc_print_func)(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-typedef void (*dvb_desc_free_func) (struct dvb_desc *desc);
-
-struct dvb_descriptor {
-	const char *name;
-	dvb_desc_init_func init;
-	dvb_desc_print_func print;
-	dvb_desc_free_func free;
-	ssize_t size;
-};
-
-extern const struct dvb_descriptor dvb_descriptors[];
-
-enum dvb_tables {
-	PAT,
-	PMT,
-	NIT,
-	SDT,
-	TVCT,
-	CVCT,
-};
-
-enum descriptors {
-	/* ISO/IEC 13818-1 */
-	video_stream_descriptor				= 0x02,
-	audio_stream_descriptor				= 0x03,
-	hierarchy_descriptor				= 0x04,
-	registration_descriptor				= 0x05,
-	ds_alignment_descriptor				= 0x06,
-	target_background_grid_descriptor		= 0x07,
-	video_window_descriptor				= 0x08,
-	conditional_access_descriptor			= 0x09,
-	iso639_language_descriptor			= 0x0a,
-	system_clock_descriptor				= 0x0b,
-	multiplex_buffer_utilization_descriptor		= 0x0c,
-	copyright_descriptor				= 0x0d,
-	maximum_bitrate_descriptor			= 0x0e,
-	private_data_indicator_descriptor		= 0x0f,
-	smoothing_buffer_descriptor			= 0x10,
-	std_descriptor					= 0x11,
-	ibp_descriptor					= 0x12,
-
-	mpeg4_video_descriptor				= 0x1b,
-	mpeg4_audio_descriptor				= 0x1c,
-	iod_descriptor					= 0x1d,
-	sl_descriptor					= 0x1e,
-	fmc_descriptor					= 0x1f,
-	external_es_id_descriptor			= 0x20,
-	muxcode_descriptor				= 0x21,
-	fmxbuffersize_descriptor			= 0x22,
-	multiplexbuffer_descriptor			= 0x23,
-	content_labeling_descriptor			= 0x24,
-	metadata_pointer_descriptor			= 0x25,
-	metadata_descriptor				= 0x26,
-	metadata_std_descriptor				= 0x27,
-	AVC_video_descriptor				= 0x28,
-	ipmp_descriptor					= 0x29,
-	AVC_timing_and_HRD_descriptor			= 0x2a,
-	mpeg2_aac_audio_descriptor			= 0x2b,
-	flexmux_timing_descriptor			= 0x2c,
-
-	/* ETSI EN 300 468 V1.11.1 (2010-04) */
-
-	network_name_descriptor				= 0x40,
-	service_list_descriptor				= 0x41,
-	stuffing_descriptor				= 0x42,
-	satellite_delivery_system_descriptor		= 0x43,
-	cable_delivery_system_descriptor		= 0x44,
-	VBI_data_descriptor				= 0x45,
-	VBI_teletext_descriptor				= 0x46,
-	bouquet_name_descriptor				= 0x47,
-	service_descriptor				= 0x48,
-	country_availability_descriptor			= 0x49,
-	linkage_descriptor				= 0x4a,
-	NVOD_reference_descriptor			= 0x4b,
-	time_shifted_service_descriptor			= 0x4c,
-	short_event_descriptor				= 0x4d,
-	extended_event_descriptor			= 0x4e,
-	time_shifted_event_descriptor			= 0x4f,
-	component_descriptor				= 0x50,
-	mosaic_descriptor				= 0x51,
-	stream_identifier_descriptor			= 0x52,
-	CA_identifier_descriptor			= 0x53,
-	content_descriptor				= 0x54,
-	parental_rating_descriptor			= 0x55,
-	teletext_descriptor				= 0x56,
-	telephone_descriptor				= 0x57,
-	local_time_offset_descriptor			= 0x58,
-	subtitling_descriptor				= 0x59,
-	terrestrial_delivery_system_descriptor		= 0x5a,
-	multilingual_network_name_descriptor		= 0x5b,
-	multilingual_bouquet_name_descriptor		= 0x5c,
-	multilingual_service_name_descriptor		= 0x5d,
-	multilingual_component_descriptor		= 0x5e,
-	private_data_specifier_descriptor		= 0x5f,
-	service_move_descriptor				= 0x60,
-	short_smoothing_buffer_descriptor		= 0x61,
-	frequency_list_descriptor			= 0x62,
-	partial_transport_stream_descriptor		= 0x63,
-	data_broadcast_descriptor			= 0x64,
-	scrambling_descriptor				= 0x65,
-	data_broadcast_id_descriptor			= 0x66,
-	transport_stream_descriptor			= 0x67,
-	DSNG_descriptor					= 0x68,
-	PDC_descriptor					= 0x69,
-	AC_3_descriptor					= 0x6a,
-	ancillary_data_descriptor			= 0x6b,
-	cell_list_descriptor				= 0x6c,
-	cell_frequency_link_descriptor			= 0x6d,
-	announcement_support_descriptor			= 0x6e,
-	application_signalling_descriptor		= 0x6f,
-	adaptation_field_data_descriptor		= 0x70,
-	service_identifier_descriptor			= 0x71,
-	service_availability_descriptor			= 0x72,
-	default_authority_descriptor			= 0x73,
-	related_content_descriptor			= 0x74,
-	TVA_id_descriptor				= 0x75,
-	content_identifier_descriptor			= 0x76,
-	time_slice_fec_identifier_descriptor		= 0x77,
-	ECM_repetition_rate_descriptor			= 0x78,
-	S2_satellite_delivery_system_descriptor		= 0x79,
-	enhanced_AC_3_descriptor			= 0x7a,
-	DTS_descriptor					= 0x7b,
-	AAC_descriptor					= 0x7c,
-	XAIT_location_descriptor			= 0x7d,
-	FTA_content_management_descriptor		= 0x7e,
-	extension_descriptor				= 0x7f,
-
-	/* SCTE 35 2004 */
-	CUE_identifier_descriptor			= 0x8a,
-
-	extended_channel_name				= 0xa0,
-	service_location				= 0xa1,
-	/* From http://www.etherguidesystems.com/Help/SDOs/ATSC/Semantics/Descriptors/Default.aspx */
-	component_name_descriptor			= 0xa3,
-
-	/* From http://www.coolstf.com/tsreader/descriptors.html */
-	logical_channel_number_descriptor		= 0x83,
-
-	/* ISDB Descriptors, as defined on ABNT NBR 15603-1 2007 */
-
-	carousel_id_descriptor				= 0x13,
-	association_tag_descriptor			= 0x14,
-	deferred_association_tags_descriptor		= 0x15,
-
-	hierarchical_transmission_descriptor		= 0xc0,
-	digital_copy_control_descriptor			= 0xc1,
-	network_identifier_descriptor			= 0xc2,
-	partial_transport_stream_time_descriptor	= 0xc3,
-	audio_component_descriptor			= 0xc4,
-	hyperlink_descriptor				= 0xc5,
-	target_area_descriptor				= 0xc6,
-	data_contents_descriptor			= 0xc7,
-	video_decode_control_descriptor			= 0xc8,
-	download_content_descriptor			= 0xc9,
-	CA_EMM_TS_descriptor				= 0xca,
-	CA_contract_information_descriptor		= 0xcb,
-	CA_service_descriptor				= 0xcc,
-	TS_Information_descriptior			= 0xcd,
-	extended_broadcaster_descriptor			= 0xce,
-	logo_transmission_descriptor			= 0xcf,
-	basic_local_event_descriptor			= 0xd0,
-	reference_descriptor				= 0xd1,
-	node_relation_descriptor			= 0xd2,
-	short_node_information_descriptor		= 0xd3,
-	STC_reference_descriptor			= 0xd4,
-	series_descriptor				= 0xd5,
-	event_group_descriptor				= 0xd6,
-	SI_parameter_descriptor				= 0xd7,
-	broadcaster_Name_Descriptor			= 0xd8,
-	component_group_descriptor			= 0xd9,
-	SI_prime_TS_descriptor				= 0xda,
-	board_information_descriptor			= 0xdb,
-	LDT_linkage_descriptor				= 0xdc,
-	connected_transmission_descriptor		= 0xdd,
-	content_availability_descriptor			= 0xde,
-	service_group_descriptor			= 0xe0,
-	carousel_compatible_composite_descriptor	= 0xf7,
-	conditional_playback_descriptor			= 0xf8,
-	ISDBT_delivery_system_descriptor		= 0xfa,
-	partial_reception_descriptor			= 0xfb,
-	emergency_information_descriptor		= 0xfc,
-	data_component_descriptor			= 0xfd,
-	system_management_descriptor			= 0xfe,
-
-	/* ATSC descriptors - ATSC A/65:2009 spec */
-	atsc_stuffing_descriptor			= 0x80,
-	atsc_ac3_audio_descriptor			= 0x81,
-	atsc_caption_service_descriptor			= 0x86,
-	atsc_content_advisory_descriptor		= 0x87,
-	atsc_extended_channel_descriptor		= 0xa0,
-	atsc_service_location_descriptor		= 0xa1,
-	atsc_time_shifted_service_descriptor		= 0xa2,
-	atsc_component_name_descriptor			= 0xa3,
-	atsc_DCC_departing_request_descriptor		= 0xa8,
-	atsc_DCC_arriving_request_descriptor		= 0xa9,
-	atsc_redistribution_control_descriptor		= 0xaa,
-	atsc_ATSC_private_information_descriptor	= 0xad,
-	atsc_genre_descriptor				= 0xab,
-};
-
-/* Please see desc_extension.h for extension_descriptor types */
-
-#endif
diff --git a/lib/include/descriptors/atsc_eit.h b/lib/include/descriptors/atsc_eit.h
deleted file mode 100644
index 3bc5df6..0000000
--- a/lib/include/descriptors/atsc_eit.h
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _ATSC_EIT_H
-#define _ATSC_EIT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-#include <time.h>
-
-#include "descriptors/atsc_header.h"
-#include "descriptors.h"
-
-#define ATSC_TABLE_EIT        0xCB
-
-struct atsc_table_eit_event {
-	union {
-		uint16_t bitfield;
-		struct {
-	          uint16_t event_id:14;
-	          uint16_t one:2;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	uint32_t start_time;
-	union {
-		uint32_t bitfield2;
-		struct {
-			uint32_t title_length:8;
-			uint32_t duration:20;
-			uint32_t etm:2;
-			uint32_t one2:2;
-			uint32_t :2;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	struct dvb_desc *descriptor;
-	struct atsc_table_eit_event *next;
-	struct tm start;
-	uint16_t source_id;
-} __attribute__((packed));
-
-union atsc_table_eit_desc_length {
-	uint16_t bitfield;
-	struct {
-		uint16_t desc_length:12;
-		uint16_t reserved:4;
-	} __attribute__((packed));
-} __attribute__((packed));
-
-struct atsc_table_eit {
-	struct atsc_table_header header;
-	uint8_t events;
-	struct atsc_table_eit_event *event;
-} __attribute__((packed));
-
-#define atsc_eit_event_foreach(_event, _eit) \
-	for( struct atsc_table_eit_event *_event = _eit->event; _event; _event = _event->next ) \
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void atsc_table_eit_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void atsc_table_eit_free(struct atsc_table_eit *eit);
-void atsc_table_eit_print(struct dvb_v5_fe_parms *parms, struct atsc_table_eit *eit);
-void atsc_time(const uint32_t start_time, struct tm *tm);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/atsc_header.h b/lib/include/descriptors/atsc_header.h
deleted file mode 100644
index 1e7148e..0000000
--- a/lib/include/descriptors/atsc_header.h
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _ATSC_HEADER_H
-#define _ATSC_HEADER_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#define ATSC_BASE_PID  0x1FFB
-
-struct atsc_table_header {
-	uint8_t  table_id;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t section_length:12;
-			uint16_t one:2;
-			uint16_t priv:1;
-			uint16_t syntax:1;
-		} __attribute__((packed));
-	};
-	uint16_t id;
-	uint8_t  current_next:1;
-	uint8_t  version:5;
-	uint8_t  one2:2;
-
-	uint8_t  section_id;
-	uint8_t  last_section;
-	uint8_t  protocol_version;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-int  atsc_table_header_init (struct atsc_table_header *t);
-void atsc_table_header_print(struct dvb_v5_fe_parms *parms, const struct atsc_table_header *t);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_atsc_service_location.h b/lib/include/descriptors/desc_atsc_service_location.h
deleted file mode 100644
index 47113f2..0000000
--- a/lib/include/descriptors/desc_atsc_service_location.h
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _ATSC_SERVICE_LOCATION_H
-#define _ATSC_SERVICE_LOCATION_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct atsc_desc_service_location_elementary {
-	uint8_t stream_type;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t elementary_pid:13;
-			uint16_t reserved:3;
-		} __attribute__((packed));
-	};
-	char ISO_639_language_code[3];
-} __attribute__((packed));
-
-struct atsc_desc_service_location {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	struct atsc_desc_service_location_elementary *elementary;
-
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t pcr_pid:13;
-			uint16_t reserved:3;
-		} __attribute__((packed));
-	};
-
-	uint8_t number_elements;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void atsc_desc_service_location_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void atsc_desc_service_location_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void atsc_desc_service_location_free(struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_cable_delivery.h b/lib/include/descriptors/desc_cable_delivery.h
deleted file mode 100644
index 70f5a5b..0000000
--- a/lib/include/descriptors/desc_cable_delivery.h
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Described at ETSI EN 300 468 V1.11.1 (2010-04)
- */
-
-#ifndef _CABLE_DELIVERY_H
-#define _CABLE_DELIVERY_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_cable_delivery {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint32_t frequency;
-	union {
-		uint16_t bitfield1;
-		struct {
-			uint16_t fec_outer:4;
-			uint16_t reserved_future_use:12;
-		};
-	};
-	uint8_t modulation;
-	union {
-		uint32_t bitfield2;
-		struct {
-			uint32_t fec_inner:4;
-			uint32_t symbol_rate:28;
-		};
-	};
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_cable_delivery_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_cable_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-extern const unsigned dvbc_modulation_table[];
-extern const unsigned dvbc_fec_table[];
-
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_event_extended.h b/lib/include/descriptors/desc_event_extended.h
deleted file mode 100644
index a543590..0000000
--- a/lib/include/descriptors/desc_event_extended.h
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _DESC_EVENT_EXTENDED_H
-#define _DESC_EVENT_EXTENDED_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_event_extended {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	union {
-		struct {
-			uint8_t last_id:4;
-			uint8_t id:4;
-		};
-		uint8_t ids;
-	};
-
-	unsigned char language[4];
-	char *text;
-	char *text_emph;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_event_extended_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_event_extended_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void dvb_desc_event_extended_free (struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_event_short.h b/lib/include/descriptors/desc_event_short.h
deleted file mode 100644
index 521fbca..0000000
--- a/lib/include/descriptors/desc_event_short.h
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _DESC_EVENT_SHORT_H
-#define _DESC_EVENT_SHORT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_event_short {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	unsigned char language[4];
-	char *name;
-	char *name_emph;
-	char *text;
-	char *text_emph;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_event_short_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_event_short_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void dvb_desc_event_short_free (struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_extension.h b/lib/include/descriptors/desc_extension.h
deleted file mode 100644
index 5921cba..0000000
--- a/lib/include/descriptors/desc_extension.h
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _EXTENSION_DESC_H
-#define _EXTENSION_DESC_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_v5_fe_parms;
-
-enum extension_descriptors {
-	image_icon_descriptor				= 0x00,
-	cpcm_delivery_signalling_descriptor		= 0x01,
-	CP_descriptor					= 0x02,
-	CP_identifier_descriptor			= 0x03,
-	T2_delivery_system_descriptor			= 0x04,
-	SH_delivery_system_descriptor			= 0x05,
-	supplementary_audio_descriptor			= 0x06,
-	network_change_notify_descriptor		= 0x07,
-	message_descriptor				= 0x08,
-	target_region_descriptor			= 0x09,
-	target_region_name_descriptor			= 0x0a,
-	service_relocated_descriptor			= 0x0b,
-};
-
-struct dvb_extension_descriptor {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint8_t extension_code;
-
-	struct dvb_desc *descriptor;
-} __attribute__((packed));
-
-
-typedef void (*dvb_desc_ext_init_func) (struct dvb_v5_fe_parms *parms,
-					const uint8_t *buf,
-					struct dvb_extension_descriptor *ext,
-					void *desc);
-typedef void (*dvb_desc_ext_print_func)(struct dvb_v5_fe_parms *parms,
-					const struct dvb_extension_descriptor *ext,
-					const void *desc);
-typedef void (*dvb_desc_ext_free_func) (const void *desc);
-
-struct dvb_ext_descriptor {
-	const char *name;
-	dvb_desc_ext_init_func init;
-	dvb_desc_ext_print_func print;
-	dvb_desc_ext_free_func free;
-	ssize_t size;
-};
-
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void extension_descriptor_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void extension_descriptor_free(struct dvb_desc *descriptor);
-void extension_descriptor_print(struct dvb_v5_fe_parms *parms,
-				const struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_frequency_list.h b/lib/include/descriptors/desc_frequency_list.h
deleted file mode 100644
index e6e7945..0000000
--- a/lib/include/descriptors/desc_frequency_list.h
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _DESC_FREQUENCY_LIST_H
-#define _DESC_FREQUENCY_LIST_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_frequency_list {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint8_t frequencies;
-	uint32_t *frequency;
-
-	union {
-		uint8_t bitfield;
-		struct {
-			uint8_t freq_type:2;
-			uint8_t reserved:6;
-		};
-	};
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_frequency_list_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_frequency_list_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_hierarchy.h b/lib/include/descriptors/desc_hierarchy.h
deleted file mode 100644
index 9dd44c2..0000000
--- a/lib/include/descriptors/desc_hierarchy.h
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _HIERARCHY_H
-#define _HIERARCHY_H
-
-#include <stdint.h>
-
-struct dvb_desc_hierarchy {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint8_t hierarchy_type:4;
-	uint8_t reserved:4;
-
-	uint8_t layer:6;
-	uint8_t reserved2:2;
-
-	uint8_t embedded_layer:6;
-	uint8_t reserved3:2;
-
-	uint8_t channel:6;
-	uint8_t reserved4:2;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_hierarchy_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_hierarchy_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_isdbt_delivery.h b/lib/include/descriptors/desc_isdbt_delivery.h
deleted file mode 100644
index 4df30df..0000000
--- a/lib/include/descriptors/desc_isdbt_delivery.h
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Described on ARIB STD-B10 as Terrestrial delivery system descriptor
- */
-
-#ifndef _ISDBT_DELIVERY_H
-#define _ISDBT_DELIVERY_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct isdbt_desc_terrestrial_delivery_system {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-	uint16_t *frequency;
-	unsigned num_freqs;
-
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t transmission_mode:2;
-			uint16_t guard_interval:2;
-			uint16_t area_code:6;
-		};
-	};
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void isdbt_desc_delivery_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void isdbt_desc_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void isdbt_desc_delivery_free(struct dvb_desc *desc);
-
-extern const uint32_t isdbt_interval[];
-extern const uint32_t isdbt_mode[];
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_language.h b/lib/include/descriptors/desc_language.h
deleted file mode 100644
index 44fe1a4..0000000
--- a/lib/include/descriptors/desc_language.h
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _DESC_LANGUAGE_H
-#define _DESC_LANGUAGE_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_language {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	unsigned char language[4];
-	uint8_t audio_type;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_language_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_language_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_logical_channel.h b/lib/include/descriptors/desc_logical_channel.h
deleted file mode 100644
index ce1206c..0000000
--- a/lib/include/descriptors/desc_logical_channel.h
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Described on IEC/CENELEC DS/EN 62216-1:2011
- *
- * I couldn't find the original version, so I used what's there at:
- *	http://tdt.telecom.pt/recursos/apresentacoes/Signalling Specifications for DTT deployment in Portugal.pdf
- */
-
-#ifndef _LCN_DESC_H
-#define _LCN_DESC_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_logical_channel_number {
-	uint16_t service_id;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t logical_channel_number:10;
-			uint16_t reserved:5;
-			uint16_t visible_service_flag:1;
-		};
-	};
-} __attribute__((packed));
-
-struct dvb_desc_logical_channel {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	struct dvb_desc_logical_channel_number *lcn;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_logical_channel_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_logical_channel_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void dvb_desc_logical_channel_free(struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_network_name.h b/lib/include/descriptors/desc_network_name.h
deleted file mode 100644
index 060b2e8..0000000
--- a/lib/include/descriptors/desc_network_name.h
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _DESC_NETWORK_NAME_H
-#define _DESC_NETWORK_NAME_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_network_name {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	char *network_name;
-	char *network_name_emph;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_network_name_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_network_name_free (struct dvb_desc *desc);
-void dvb_desc_network_name_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_partial_reception.h b/lib/include/descriptors/desc_partial_reception.h
deleted file mode 100644
index c6c45f7..0000000
--- a/lib/include/descriptors/desc_partial_reception.h
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Described on IEC/CENELEC DS/EN 62216-1:2011
- *
- * I couldn't find the original version, so I used what's there at:
- *	http://tdt.telecom.pt/recursos/apresentacoes/Signalling Specifications for DTT deployment in Portugal.pdf
- */
-
-#ifndef _PARTIAL_RECEPTION_H
-#define _PARTIAL_RECEPTION_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct isdb_partial_reception_service_id {
-	uint16_t service_id;
-} __attribute__((packed));
-
-struct isdb_desc_partial_reception {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	struct isdb_partial_reception_service_id *partial_reception;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void isdb_desc_partial_reception_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void isdb_desc_partial_reception_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void isdb_desc_partial_reception_free(struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_sat.h b/lib/include/descriptors/desc_sat.h
deleted file mode 100644
index bb55319..0000000
--- a/lib/include/descriptors/desc_sat.h
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _SAT_H
-#define _SAT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_sat {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint32_t frequency;
-	uint16_t orbit;
-	uint8_t modulation_type:2;
-	uint8_t modulation_system:1;
-	uint8_t roll_off:2;
-	uint8_t polarization:2;
-	uint8_t west_east:1;
-	union {
-		uint32_t bitfield;
-		struct {
-			uint32_t fec:4;
-			uint32_t symbol_rate:28;
-		};
-	};
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_sat_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_sat_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-extern const unsigned dvbs_dvbc_dvbs_freq_inner[];
-extern const unsigned dvbs_polarization[];
-extern const unsigned dvbs_rolloff[];
-extern const unsigned dvbs_modulation[];
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_service.h b/lib/include/descriptors/desc_service.h
deleted file mode 100644
index 8f269aa..0000000
--- a/lib/include/descriptors/desc_service.h
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _DESC_SERVICE_H
-#define _DESC_SERVICE_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_service {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint8_t service_type;
-	char *name;
-	char *name_emph;
-	char *provider;
-	char *provider_emph;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_service_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_service_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void dvb_desc_service_free (struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_service_list.h b/lib/include/descriptors/desc_service_list.h
deleted file mode 100644
index 8e7d73f..0000000
--- a/lib/include/descriptors/desc_service_list.h
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _DESC_SERVICE_LIST_H
-#define _DESC_SERVICE_LIST_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_service_list_table {
-	uint16_t service_id;
-	uint8_t service_type;
-} __attribute__((packed));
-
-struct dvb_desc_service_list {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	//struct dvb_desc_service_list_table services[];
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_service_list_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_service_list_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_service_location.h b/lib/include/descriptors/desc_service_location.h
deleted file mode 100644
index 89ed055..0000000
--- a/lib/include/descriptors/desc_service_location.h
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _SERVICE_LOCATION_H
-#define _SERVICE_LOCATION_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_service_location_element {
-	uint8_t stream_type;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t elementary_pid:13;
-			uint16_t reserved:3;
-		};
-	};
-	uint8_t language[4];
-} __attribute__((packed));
-
-struct dvb_desc_service_location {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t pcr_pid:13;
-			uint16_t reserved:3;
-		};
-	};
-	uint8_t elements;
-	struct dvb_desc_service_location_element *element;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_service_location_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_service_location_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void dvb_desc_service_location_free (struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_t2_delivery.h b/lib/include/descriptors/desc_t2_delivery.h
deleted file mode 100644
index a36f6c1..0000000
--- a/lib/include/descriptors/desc_t2_delivery.h
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Based on ETSI EN 300 468 V1.11.1 (2010-04)
- */
-
-#ifndef _T2_DELIVERY_H
-#define _T2_DELIVERY_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_t2_delivery_subcell {
-	uint8_t cell_id_extension;
-	uint16_t transposer_frequency;
-} __attribute__((packed));
-
-struct dvb_desc_t2_delivery {
-	uint8_t plp_id;
-	uint16_t system_id;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t tfs_flag:1;
-			uint16_t other_frequency_flag:1;
-			uint16_t transmission_mode:3;
-			uint16_t guard_interval:3;
-			uint16_t reserved:2;
-			uint16_t bandwidth:3;
-			uint16_t SISO_MISO:2;
-		};
-	};
-
-	uint32_t *centre_frequency;
-	uint8_t frequency_loop_length;
-	uint8_t subcel_info_loop_length;
-	struct dvb_desc_t2_delivery_subcell *subcell;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_t2_delivery_init(struct dvb_v5_fe_parms *parms,
-			       const uint8_t *buf,
-			       struct dvb_extension_descriptor *ext,
-			       void *desc);
-void dvb_desc_t2_delivery_print(struct dvb_v5_fe_parms *parms,
-				const struct dvb_extension_descriptor *ext,
-				const void *desc);
-void dvb_desc_t2_delivery_free(const void *desc);
-
-extern const unsigned dvbt2_bw[];
-extern const uint32_t dvbt2_interval[];
-extern const unsigned dvbt2_transmission_mode[];
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_terrestrial_delivery.h b/lib/include/descriptors/desc_terrestrial_delivery.h
deleted file mode 100644
index 9404169..0000000
--- a/lib/include/descriptors/desc_terrestrial_delivery.h
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Based on ETSI EN 300 468 V1.11.1 (2010-04)
- *
- */
-
-#ifndef _TERRESTRIAL_DELIVERY_H
-#define _TERRESTRIAL_DELIVERY_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_terrestrial_delivery {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	uint32_t centre_frequency;
-	uint8_t reserved_future_use1:2;
-	uint8_t mpe_fec_indicator:1;
-	uint8_t time_slice_indicator:1;
-	uint8_t priority:1;
-	uint8_t bandwidth:3;
-	uint8_t code_rate_hp_stream:3;
-	uint8_t hierarchy_information:3;
-	uint8_t constellation:2;
-	uint8_t other_frequency_flag:1;
-	uint8_t transmission_mode:2;
-	uint8_t guard_interval:2;
-	uint8_t code_rate_lp_stream:3;
-	uint32_t reserved_future_use2;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_terrestrial_delivery_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_terrestrial_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-extern const unsigned dvbt_bw[];
-extern const unsigned dvbt_modulation[];
-extern const unsigned dvbt_hierarchy[];
-extern const unsigned dvbt_code_rate[];
-extern const uint32_t dvbt_interval[];
-extern const unsigned dvbt_transmission_mode[];
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/desc_ts_info.h b/lib/include/descriptors/desc_ts_info.h
deleted file mode 100644
index 523aa04..0000000
--- a/lib/include/descriptors/desc_ts_info.h
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Described on ARIB STD-B10 as TS information descriptor
- */
-
-#ifndef _TS_INFO_H
-#define _TS_INFO_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_ts_info_transmission_type {
-	uint8_t transmission_type_info;
-	uint8_t num_of_service;
-} __attribute__((packed));
-
-struct dvb_desc_ts_info {
-	uint8_t type;
-	uint8_t length;
-	struct dvb_desc *next;
-
-	char *ts_name, *ts_name_emph;
-	struct dvb_desc_ts_info_transmission_type transmission_type;
-	uint16_t *service_id;
-
-	uint8_t remote_control_key_id;
-	union {
-		uint8_t bitfield;
-		struct {
-			uint8_t transmission_type_count:2;
-			uint8_t length_of_ts_name:6;
-		} __attribute__((packed));
-	};
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_desc_ts_info_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
-void dvb_desc_ts_info_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-void dvb_desc_ts_info_free(struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/eit.h b/lib/include/descriptors/eit.h
deleted file mode 100644
index ca08fd4..0000000
--- a/lib/include/descriptors/eit.h
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _EIT_H
-#define _EIT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-#include <time.h>
-
-#include "descriptors/header.h"
-#include "descriptors.h"
-
-#define DVB_TABLE_EIT        0x4E
-#define DVB_TABLE_EIT_OTHER  0x4F
-
-#define DVB_TABLE_EIT_SCHEDULE 0x50       /* - 0x5F */
-#define DVB_TABLE_EIT_SCHEDULE_OTHER 0x60 /* - 0x6F */
-
-#define DVB_TABLE_EIT_PID  0x12
-
-struct dvb_table_eit_event {
-	uint16_t event_id;
-	union {
-		uint16_t bitfield1; /* first 2 bytes are MJD, they need to be bswapped */
-		uint8_t dvbstart[5];
-	} __attribute__((packed));
-	uint8_t dvbduration[3];
-	union {
-		uint16_t bitfield2;
-		struct {
-			uint16_t section_length:12;
-			uint16_t free_CA_mode:1;
-			uint16_t running_status:3;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	struct dvb_desc *descriptor;
-	struct dvb_table_eit_event *next;
-	struct tm start;
-	uint32_t duration;
-	uint16_t service_id;
-} __attribute__((packed));
-
-struct dvb_table_eit {
-	struct dvb_table_header header;
-	uint16_t transport_id;
-	uint16_t network_id;
-	uint8_t  last_segment;
-	uint8_t  last_table_id;
-	struct dvb_table_eit_event *event;
-} __attribute__((packed));
-
-#define dvb_eit_event_foreach(_event, _eit) \
-	for( struct dvb_table_eit_event *_event = _eit->event; _event; _event = _event->next ) \
-
-struct dvb_v5_fe_parms;
-
-extern const char *dvb_eit_running_status_name[8];
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_table_eit_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void dvb_table_eit_free(struct dvb_table_eit *eit);
-void dvb_table_eit_print(struct dvb_v5_fe_parms *parms, struct dvb_table_eit *eit);
-void dvb_time(const uint8_t data[5], struct tm *tm);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/header.h b/lib/include/descriptors/header.h
deleted file mode 100644
index c8cd466..0000000
--- a/lib/include/descriptors/header.h
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _HEADER_H
-#define _HEADER_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_ts_packet_header {
-	uint8_t  sync_byte;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t pid:13;
-			uint16_t transport_priority:1;
-			uint16_t payload_unit_start_indicator:1;
-			uint16_t transport_error_indicator:1;
-		} __attribute__((packed));
-	};
-	uint8_t continuity_counter:4;
-	uint8_t adaptation_field_control:2;
-	uint8_t transport_scrambling_control:2;
-
-	/* Only if adaptation_field_control > 1 */
-	uint8_t adaptation_field_length;
-} __attribute__((packed));
-
-struct dvb_table_header {
-	uint8_t  table_id;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t section_length:10;
-			uint8_t  zero:2;
-			uint8_t  one:2;
-			uint8_t  zero2:1;
-			uint8_t  syntax:1;
-		} __attribute__((packed));
-	};
-	uint16_t id;
-	uint8_t  current_next:1;
-	uint8_t  version:5;
-	uint8_t  one2:2;
-
-	uint8_t  section_id;
-	uint8_t  last_section;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-int  dvb_table_header_init (struct dvb_table_header *t);
-void dvb_table_header_print(struct dvb_v5_fe_parms *parms, const struct dvb_table_header *t);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/mgt.h b/lib/include/descriptors/mgt.h
deleted file mode 100644
index 9eaac02..0000000
--- a/lib/include/descriptors/mgt.h
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _MGT_H
-#define _MGT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#include "descriptors/atsc_header.h"
-#include "descriptors.h"
-
-#define ATSC_TABLE_MGT 0xC7
-
-struct atsc_table_mgt_table {
-	uint16_t type;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t pid:13;
-			uint16_t one:3;
-		} __attribute__((packed));
-	} __attribute__((packed));
-        uint8_t type_version:5;
-        uint8_t one2:3;
-        uint32_t size;
-	union {
-		uint16_t bitfield2;
-		struct {
-			uint16_t desc_length:12;
-			uint16_t one3:4;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	struct dvb_desc *descriptor;
-	struct atsc_table_mgt_table *next;
-} __attribute__((packed));
-
-struct atsc_table_mgt {
-	struct atsc_table_header header;
-        uint16_t tables;
-        struct atsc_table_mgt_table *table;
-	struct dvb_desc *descriptor;
-} __attribute__((packed));
-
-
-#define atsc_mgt_table_foreach( _tran, _mgt ) \
-  for( struct atsc_table_mgt_table *_tran = _mgt->table; _tran; _tran = _tran->next ) \
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void atsc_table_mgt_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void atsc_table_mgt_free(struct atsc_table_mgt *mgt);
-void atsc_table_mgt_print(struct dvb_v5_fe_parms *parms, struct atsc_table_mgt *mgt);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/mpeg_es.h b/lib/include/descriptors/mpeg_es.h
deleted file mode 100644
index 4c6a862..0000000
--- a/lib/include/descriptors/mpeg_es.h
+++ /dev/null
@@ -1,109 +0,0 @@
-/*
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _MPEG_ES_H
-#define _MPEG_ES_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#define DVB_MPEG_ES_PIC_START  0x00
-#define DVB_MPEG_ES_USER_DATA  0xb2
-#define DVB_MPEG_ES_SEQ_START  0xb3
-#define DVB_MPEG_ES_SEQ_EXT    0xb5
-#define DVB_MPEG_ES_GOP        0xb8
-#define DVB_MPEG_ES_SLICES     0x01 ... 0xaf
-
-struct dvb_mpeg_es_seq_start {
-	union {
-		uint32_t bitfield;
-		struct {
-			uint32_t  type:8;
-			uint32_t  sync:24;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	union {
-		uint32_t bitfield2;
-		struct {
-			uint32_t framerate:4;
-			uint32_t aspect:4;
-			uint32_t height:12;
-			uint32_t width:12;
-		} __attribute__((packed));
-	};
-	union {
-		uint32_t bitfield3;
-		struct {
-			uint32_t qm_nonintra:1;
-			uint32_t qm_intra:1;
-			uint32_t constrained:1;
-			uint32_t vbv:10; // Size of video buffer verifier = 16*1024*vbv buf size
-			uint32_t one:1;
-			uint32_t bitrate:18;
-		} __attribute__((packed));
-	};
-} __attribute__((packed));
-
-struct dvb_mpeg_es_pic_start {
-	union {
-		uint32_t bitfield;
-		struct {
-			uint32_t  type:8;
-			uint32_t  sync:24;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	union {
-		uint32_t bitfield2;
-		struct {
-			uint32_t dummy:3;
-			uint32_t vbv_delay:16;
-			uint32_t coding_type:3;
-			uint32_t temporal_ref:10;
-		} __attribute__((packed));
-	};
-} __attribute__((packed));
-
-enum dvb_mpeg_es_frame_t
-{
-	DVB_MPEG_ES_FRAME_UNKNOWN,
-	DVB_MPEG_ES_FRAME_I,
-	DVB_MPEG_ES_FRAME_P,
-	DVB_MPEG_ES_FRAME_B,
-	DVB_MPEG_ES_FRAME_D
-};
-extern const char *dvb_mpeg_es_frame_names[5];
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-int  dvb_mpeg_es_seq_start_init (const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_es_seq_start *seq_start);
-void dvb_mpeg_es_seq_start_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_es_seq_start *seq_start);
-
-int  dvb_mpeg_es_pic_start_init (const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_es_pic_start *pic_start);
-void dvb_mpeg_es_pic_start_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_es_pic_start *pic_start);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/mpeg_pes.h b/lib/include/descriptors/mpeg_pes.h
deleted file mode 100644
index 3a3f8e4..0000000
--- a/lib/include/descriptors/mpeg_pes.h
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _MPEG_PES_H
-#define _MPEG_PES_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#define DVB_MPEG_PES  0x00001
-#define DVB_MPEG_PES_VIDEO  0xe0 ... 0xef
-
-#define DVB_MPEG_STREAM_MAP       0xBC
-#define DVB_MPEG_STREAM_PADDING   0xBE
-#define DVB_MPEG_STREAM_PRIVATE_2 0x5F
-#define DVB_MPEG_STREAM_ECM       0x70
-#define DVB_MPEG_STREAM_EMM       0x71
-#define DVB_MPEG_STREAM_DIRECTORY 0xFF
-#define DVB_MPEG_STREAM_DSMCC     0x7A
-#define DVB_MPEG_STREAM_H222E     0xF8
-
-struct ts_t {
-	uint8_t  one:1;
-	uint8_t  bits30:3;
-	uint8_t  tag:4;
-
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t  one1:1;
-			uint16_t  bits15:15;
-		} __attribute__((packed));
-	} __attribute__((packed));
-
-	union {
-		uint16_t bitfield2;
-		struct {
-			uint16_t  one2:1;
-			uint16_t  bits00:15;
-		} __attribute__((packed));
-	} __attribute__((packed));
-} __attribute__((packed));
-
-struct dvb_mpeg_pes_optional {
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t PES_extension:1;
-			uint16_t PES_CRC:1;
-			uint16_t additional_copy_info:1;
-			uint16_t DSM_trick_mode:1;
-			uint16_t ES_rate:1;
-			uint16_t ESCR:1;
-			uint16_t PTS_DTS:2;
-			uint16_t original_or_copy:1;
-			uint16_t copyright:1;
-			uint16_t data_alignment_indicator:1;
-			uint16_t PES_priority:1;
-			uint16_t PES_scrambling_control:2;
-			uint16_t two:2;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	uint8_t length;
-	uint64_t pts;
-	uint64_t dts;
-} __attribute__((packed));
-
-struct dvb_mpeg_pes {
-	union {
-		uint32_t bitfield;
-		struct {
-			uint32_t  stream_id:8;
-			uint32_t  sync:24;
-		} __attribute__((packed));
-	} __attribute__((packed));
-	uint16_t length;
-	struct dvb_mpeg_pes_optional optional[];
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_mpeg_pes_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void dvb_mpeg_pes_free(struct dvb_mpeg_pes *ts);
-void dvb_mpeg_pes_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_pes *ts);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/mpeg_ts.h b/lib/include/descriptors/mpeg_ts.h
deleted file mode 100644
index de4fc3f..0000000
--- a/lib/include/descriptors/mpeg_ts.h
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _MPEG_TS_H
-#define _MPEG_TS_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#define DVB_MPEG_TS  0x47
-
-struct dvb_mpeg_ts_adaption {
-	uint8_t length;
-	struct {
-		uint8_t extension:1;
-		uint8_t private_data:1;
-		uint8_t splicing_point:1;
-		uint8_t OPCR:1;
-		uint8_t PCR:1;
-		uint8_t priority:1;
-		uint8_t random_access:1;
-		uint8_t discontinued:1;
-	} __attribute__((packed));
-	uint8_t data[];
-} __attribute__((packed));
-
-struct dvb_mpeg_ts {
-	uint8_t sync_byte; // DVB_MPEG_TS
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t pid:13;
-			uint16_t priority:1;
-			uint16_t payload_start:1;
-			uint16_t tei:1;
-		} __attribute__((packed));
-	};
-	struct {
-		uint8_t continuity_counter:4;
-		uint8_t adaptation_field:2;
-		uint8_t scrambling:2;
-	} __attribute__((packed));
-	struct dvb_mpeg_ts_adaption adaption[];
-
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-ssize_t dvb_mpeg_ts_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void dvb_mpeg_ts_free(struct dvb_mpeg_ts *ts);
-void dvb_mpeg_ts_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_ts *ts);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/nit.h b/lib/include/descriptors/nit.h
deleted file mode 100644
index 4f19c5e..0000000
--- a/lib/include/descriptors/nit.h
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _NIT_H
-#define _NIT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#include "descriptors/header.h"
-#include "descriptors.h"
-
-#define DVB_TABLE_NIT      0x40
-#define DVB_TABLE_NIT2     0x41
-#define DVB_TABLE_NIT_PID  0x10
-
-union dvb_table_nit_transport_header {
-	uint16_t bitfield;
-	struct {
-		uint16_t transport_length:12;
-		uint16_t reserved:4;
-	} __attribute__((packed));
-} __attribute__((packed));
-
-struct dvb_table_nit_transport {
-	uint16_t transport_id;
-	uint16_t network_id;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t section_length:12;
-			uint16_t reserved:4;
-		} __attribute__((packed));
-	};
-	struct dvb_desc *descriptor;
-	struct dvb_table_nit_transport *next;
-} __attribute__((packed));
-
-struct dvb_table_nit {
-	struct dvb_table_header header;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t desc_length:12;
-			uint16_t reserved:4;
-		} __attribute__((packed));
-	};
-	struct dvb_desc *descriptor;
-	struct dvb_table_nit_transport *transport;
-} __attribute__((packed));
-
-typedef void nit_handler_callback_t(struct dvb_table_nit *nit,
-				    struct dvb_desc *desc,
-				    void *priv);
-
-typedef void nit_tran_handler_callback_t(struct dvb_table_nit *nit,
-					 struct dvb_table_nit_transport *tran,
-					 struct dvb_desc *desc,
-					 void *priv);
-
-#define dvb_nit_transport_foreach( _tran, _nit ) \
-  for (struct dvb_table_nit_transport *_tran = _nit->transport; _tran; _tran = _tran->next) \
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_table_nit_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void dvb_table_nit_free(struct dvb_table_nit *nit);
-void dvb_table_nit_print(struct dvb_v5_fe_parms *parms, struct dvb_table_nit *nit);
-
-void nit_descriptor_handler(struct dvb_v5_fe_parms *parms,
-			    struct dvb_table_nit *nit,
-			    enum descriptors descriptor,
-			    nit_handler_callback_t *call_nit,
-			    nit_tran_handler_callback_t *call_tran,
-			    void *priv);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/pat.h b/lib/include/descriptors/pat.h
deleted file mode 100644
index edb58c5..0000000
--- a/lib/include/descriptors/pat.h
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _PAT_H
-#define _PAT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#include "descriptors/header.h"
-
-#define DVB_TABLE_PAT      0
-#define DVB_TABLE_PAT_PID  0
-
-struct dvb_table_pat_program {
-	uint16_t service_id;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t pid:13;
-			uint8_t  reserved:3;
-		} __attribute__((packed));
-	};
-	struct dvb_table_pat_program *next;
-} __attribute__((packed));
-
-struct dvb_table_pat {
-	struct dvb_table_header header;
-	uint16_t programs;
-	struct dvb_table_pat_program *program;
-} __attribute__((packed));
-
-#define dvb_pat_program_foreach(_pgm, _pat) \
-	for (struct dvb_table_pat_program *_pgm = _pat->program; _pgm; _pgm = _pgm->next) \
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_table_pat_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void dvb_table_pat_free(struct dvb_table_pat *pat);
-void dvb_table_pat_print(struct dvb_v5_fe_parms *parms, struct dvb_table_pat *t);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/pmt.h b/lib/include/descriptors/pmt.h
deleted file mode 100644
index 79a6172..0000000
--- a/lib/include/descriptors/pmt.h
+++ /dev/null
@@ -1,119 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _PMT_H
-#define _PMT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#include "descriptors/header.h"
-
-#define DVB_TABLE_PMT      2
-
-enum dvb_streams {
-	stream_reserved0	= 0x00, // ITU-T | ISO/IEC Reserved
-	stream_video		= 0x01, // ISO/IEC 11172 Video
-	stream_video_h262	= 0x02, // ITU-T Rec. H.262 | ISO/IEC 13818-2 Video or ISO/IEC 11172-2 constrained parameter video stream
-	stream_audio		= 0x03, // ISO/IEC 11172 Audio
-	stream_audio_13818_3	= 0x04, // ISO/IEC 13818-3 Audio
-	stream_private_sections	= 0x05, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 private_sections
-	stream_private_data	= 0x06, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 PES packets containing private data
-	stream_mheg		= 0x07, // ISO/IEC 13522 MHEG
-	stream_h222		= 0x08, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 Annex A DSM-CC
-	stream_h222_1		= 0x09, // ITU-T Rec. H.222.1
-	stream_13818_6_A	= 0x0A, // ISO/IEC 13818-6 type A
-	stream_13818_6_B	= 0x0B, // ISO/IEC 13818-6 type B
-	stream_13818_6_C	= 0x0C, // ISO/IEC 13818-6 type C
-	stream_13818_6_D	= 0x0D, // ISO/IEC 13818-6 type D
-	stream_h222_aux		= 0x0E, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 auxiliary
-	stream_audio_adts	= 0x0F, // ISO/IEC 13818-7 Audio with ADTS transport syntax
-	stream_video_14496_2	= 0x10, // ISO/IEC 14496-2 Visual
-	stream_audio_latm	= 0x11, // ISO/IEC 14496-3 Audio with the LATM transport syntax as defined in ISO/IEC 14496-3 / AMD 1
-	stream_14496_1_pes	= 0x12, // ISO/IEC 14496-1 SL-packetized stream or FlexMux stream carried in PES packets
-	stream_14496_1_iso	= 0x13, // ISO/IEC 14496-1 SL-packetized stream or FlexMux stream carried in ISO/IEC14496_sections.
-	stream_download		= 0x14, // ISO/IEC 13818-6 Synchronized Download Protocol
-	stream_reserved		= 0x15, // - 0x7F, ITU-T Rec. H.222.0 | ISO/IEC 13818-1 Reserved
-	stream_private		= 0x80  // - 0xFF, User Private
-};
-
-extern const char *pmt_stream_name[];
-
-struct dvb_table_pmt_stream {
-	uint8_t type;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t elementary_pid:13;
-			uint16_t reserved:3;
-		};
-	};
-	union {
-		uint16_t bitfield2;
-		struct {
-			uint16_t section_length:10;
-			uint16_t zero:2;
-			uint16_t reserved2:4;
-		};
-	};
-	struct dvb_desc *descriptor;
-	struct dvb_table_pmt_stream *next;
-} __attribute__((packed));
-
-struct dvb_table_pmt {
-	struct dvb_table_header header;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t pcr_pid:13;
-			uint16_t reserved2:3;
-		};
-	};
-
-	union {
-		uint16_t bitfield2;
-		struct {
-			uint16_t prog_length:10;
-			uint16_t zero3:2;
-			uint16_t reserved3:4;
-		};
-	};
-	struct dvb_table_pmt_stream *stream;
-} __attribute__((packed));
-
-#define dvb_pmt_stream_foreach(_stream, _pmt) \
-  for (struct dvb_table_pmt_stream *_stream = _pmt->stream; _stream; _stream = _stream->next) \
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_table_pmt_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void dvb_table_pmt_free(struct dvb_table_pmt *pmt);
-void dvb_table_pmt_print(struct dvb_v5_fe_parms *parms, const struct dvb_table_pmt *pmt);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/sdt.h b/lib/include/descriptors/sdt.h
deleted file mode 100644
index 493b853..0000000
--- a/lib/include/descriptors/sdt.h
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _SDT_H
-#define _SDT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#include "descriptors/header.h"
-#include "descriptors.h"
-
-#define DVB_TABLE_SDT      0x42
-#define DVB_TABLE_SDT2     0x46
-#define DVB_TABLE_SDT_PID  0x11
-
-struct dvb_table_sdt_service {
-	uint16_t service_id;
-	uint8_t EIT_present_following:1;
-	uint8_t EIT_schedule:1;
-	uint8_t reserved:6;
-	union {
-		uint16_t bitfield;
-		struct {
-			uint16_t section_length:12;
-			uint16_t free_CA_mode:1;
-			uint16_t running_status:3;
-		} __attribute__((packed));
-	};
-	struct dvb_desc *descriptor;
-	struct dvb_table_sdt_service *next;
-} __attribute__((packed));
-
-struct dvb_table_sdt {
-	struct dvb_table_header header;
-	uint16_t network_id;
-	uint8_t  reserved;
-	struct dvb_table_sdt_service *service;
-} __attribute__((packed));
-
-#define dvb_sdt_service_foreach(_service, _sdt) \
-	for (struct dvb_table_sdt_service *_service = _sdt->service; _service; _service = _service->next ) \
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void dvb_table_sdt_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void dvb_table_sdt_free(struct dvb_table_sdt *sdt);
-void dvb_table_sdt_print(struct dvb_v5_fe_parms *parms, struct dvb_table_sdt *sdt);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/descriptors/vct.h b/lib/include/descriptors/vct.h
deleted file mode 100644
index f3dad6c..0000000
--- a/lib/include/descriptors/vct.h
+++ /dev/null
@@ -1,127 +0,0 @@
-/*
- * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
- * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _VCT_H
-#define _VCT_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-#include "descriptors/atsc_header.h"
-#include "descriptors.h"
-
-#define ATSC_TABLE_TVCT     0xc8
-#define ATSC_TABLE_CVCT     0xc9
-#define ATSC_TABLE_VCT_PID  0x1ffb
-
-struct atsc_table_vct_channel {
-	uint16_t	__short_name[7];
-
-	union {
-		uint32_t bitfield1;
-		struct {
-			uint32_t	modulation_mode:8;
-			uint32_t	minor_channel_number:10;
-			uint32_t	major_channel_number:10;
-			uint32_t	reserved1:4;
-		} __attribute__((packed));
-	} __attribute__((packed));
-
-	uint32_t	carrier_frequency;
-	uint16_t	channel_tsid;
-	uint16_t	program_number;
-	union {
-		uint16_t bitfield2;
-		struct {
-			uint16_t	service_type:6;
-			uint16_t	reserved2:3;
-			uint16_t	hide_guide:1;
-			uint16_t	out_of_band:1;	/* CVCT only */
-			uint16_t	path_select:1;	/* CVCT only */
-			uint16_t	hidden:1;
-			uint16_t	access_controlled:1;
-			uint16_t	ETM_location:2;
-
-		} __attribute__((packed));
-	} __attribute__((packed));
-
-	uint16_t source_id;
-	union {
-		uint16_t bitfield3;
-		struct {
-			uint16_t descriptors_length:10;
-			uint16_t reserved3:6;
-		} __attribute__((packed));
-	} __attribute__((packed));
-
-	/*
-	 * Everything after descriptor (including it) won't be bit-mapped
-	 * to the data parsed from the MPEG TS. So, metadata are added there
-	 */
-	struct dvb_desc *descriptor;
-	struct atsc_table_vct_channel *next;
-
-	/* The channel_short_name is converted to locale charset by vct.c */
-
-	char short_name[32];
-} __attribute__((packed));
-
-struct atsc_table_vct {
-	struct atsc_table_header header;
-
-	uint8_t ATSC_protocol_version;
-	uint8_t num_channels_in_section;
-
-	/*
-	 * Everything after descriptor (including it) won't be bit-mapped
-	 * to the data parsed from the MPEG TS. So, metadata are added there
-	 */
-	struct atsc_table_vct_channel *channel;
-	struct dvb_desc *descriptor;
-} __attribute__((packed));
-
-
-union atsc_table_vct_descriptor_length {
-	uint16_t bitfield;
-	struct {
-		uint16_t descriptor_length:10;
-		uint16_t reserved:6;
-	};
-};
-
-#define atsc_vct_channel_foreach(_channel, _vct) \
-	for (struct atsc_table_vct_channel *_channel = _vct->channel; _channel; _channel = _channel->next) \
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-void atsc_table_vct_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
-void atsc_table_vct_free(struct atsc_table_vct *vct);
-void atsc_table_vct_print(struct dvb_v5_fe_parms *parms, struct atsc_table_vct *vct);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/dvb-demux.h b/lib/include/dvb-demux.h
deleted file mode 100644
index 923016e..0000000
--- a/lib/include/dvb-demux.h
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * These routines were written as part of the dvb-apps, as:
- *	util functions for various ?zap implementations
- *
- *	Copyright (C) 2001 Johannes Stezenbach (js@convergence.de)
- *	for convergence integrated media
- *
- *	Originally licensed as GPLv2 or upper
- *
- * All subsequent changes are under GPLv2 only and are:
- *	Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- *
- */
-#ifndef _DVB_DEMUX_H
-#define _DVB_DEMUX_H
-
-#include <linux/dvb/dmx.h>
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-int dvb_dmx_open(int adapter, int demux);
-void dvb_dmx_close(int dmx_fd);
-void dvb_dmx_stop(int dmx_fd);
-
-int dvb_set_pesfilter(int dmxfd, int pid, dmx_pes_type_t type, dmx_output_t output, int buffersize);
-
-int get_pmt_pid(const char *dmxdev, int sid);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/dvb-fe.h b/lib/include/dvb-fe.h
deleted file mode 100644
index 8cf2697..0000000
--- a/lib/include/dvb-fe.h
+++ /dev/null
@@ -1,231 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-#ifndef _DVB_FE_H
-#define _DVB_FE_H
-
-#include <stdio.h>
-#include <errno.h>
-#include <stdint.h>
-#include <stdlib.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <fcntl.h>
-#include <sys/ioctl.h>
-#include <string.h>
-#include "dvb-frontend.h"
-#include "dvb-sat.h"
-#include "dvb-log.h"
-
-#define ARRAY_SIZE(x)	(sizeof(x)/sizeof((x)[0]))
-
-#define MAX_DELIVERY_SYSTEMS	20
-
-/*
- * Implement the stats properties as if they were defined via S2API style.
- * This simplifies the addition of newer stats, and helps to port the
- * code to v5 style, if such change gets merged upstream.
- */
-
-/*
- * Those are needed to avoid breaking apps that depend on the library
- * but shoudn't be used anymore
- */
-#define DTV_MAX_STATS			DTV_NUM_STATS_PROPS
-#define DTV_SIGNAL_STRENGTH		DTV_STAT_SIGNAL_STRENGTH
-#define DTV_SNR				DTV_STAT_CNR
-#define DTV_UNCORRECTED_BLOCKS		DTV_STAT_ERROR_BLOCK_COUNT
-
-enum dvbv3_emulation_type {
-	DVBV3_UNKNOWN = -1,
-	DVBV3_QPSK,
-	DVBV3_QAM,
-	DVBV3_OFDM,
-	DVBV3_ATSC,
-};
-
-struct dvb_v5_counters {
-	uint64_t			pre_bit_count;
-	uint64_t			pre_bit_error;
-	uint64_t			post_bit_count;
-	uint64_t			post_bit_error;
-	uint64_t			block_count;
-	uint64_t			block_error;
-};
-
-struct dvb_v5_stats {
-	struct dtv_property		prop[DTV_NUM_STATS_PROPS];
-
-	struct dvb_v5_counters		prev[MAX_DTV_STATS];
-	struct dvb_v5_counters		cur[MAX_DTV_STATS];
-
-	int				has_post_ber[MAX_DTV_STATS];
-	int				has_pre_ber[MAX_DTV_STATS];
-	int				has_per[MAX_DTV_STATS];
-
-	fe_status_t prev_status;
-
-};
-
-struct dvb_v5_fe_parms {
-	int				fd;
-	char				*fname;
-	unsigned			verbose;
-	struct dvb_frontend_info	info;
-	uint32_t			version;
-	int				has_v5_stats;
-	fe_delivery_system_t		current_sys;
-	int				num_systems;
-	fe_delivery_system_t		systems[MAX_DELIVERY_SYSTEMS];
-	int				n_props;
-	struct dtv_property		dvb_prop[DTV_MAX_COMMAND];
-	int				legacy_fe;
-	struct dvb_v5_stats		stats;
-
-	/* Satellite specific stuff, specified by the library client */
-	const struct dvb_sat_lnb       	*lnb;
-	int				sat_number;
-	unsigned			freq_bpf;
-
-	/* Satellite specific stuff, used internally */
-	int				high_band;
-	unsigned			diseqc_wait;
-	unsigned			freq_offset;
-
-	int				abort;
-	dvb_logfunc                     logfunc;
-};
-
-
-/* Open/close methods */
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-struct dvb_v5_fe_parms *dvb_fe_dummy();
-
-struct dvb_v5_fe_parms *dvb_fe_open(int adapter, int frontend,
-				    unsigned verbose, unsigned use_legacy_call);
-struct dvb_v5_fe_parms *dvb_fe_open2(int adapter, int frontend,
-				    unsigned verbose, unsigned use_legacy_call,
-				    dvb_logfunc logfunc);
-void dvb_fe_close(struct dvb_v5_fe_parms *parms);
-
-/* Get/set delivery system parameters */
-
-const char *dvb_cmd_name(int cmd);
-const char *const *dvb_attr_names(int cmd);
-
-int dvb_fe_retrieve_parm(const struct dvb_v5_fe_parms *parms,
-			unsigned cmd, uint32_t *value);
-int dvb_fe_store_parm(struct dvb_v5_fe_parms *parms,
-		      unsigned cmd, uint32_t value);
-int dvb_set_sys(struct dvb_v5_fe_parms *parms,
-		   fe_delivery_system_t sys);
-int dvb_add_parms_for_sys(struct dtv_property *dvb_prop,
-			  unsigned max_size,
-			  fe_delivery_system_t sys);
-int dvb_set_compat_delivery_system(struct dvb_v5_fe_parms *parms,
-				   uint32_t desired_system);
-
-void dvb_fe_prt_parms(const struct dvb_v5_fe_parms *parms);
-int dvb_fe_set_parms(struct dvb_v5_fe_parms *parms);
-int dvb_fe_get_parms(struct dvb_v5_fe_parms *parms);
-
-/* Get statistics */
-
-struct dtv_stats *dvb_fe_retrieve_stats_layer(struct dvb_v5_fe_parms *parms,
-                                              unsigned cmd, unsigned layer);
-int dvb_fe_retrieve_stats(struct dvb_v5_fe_parms *parms,
-			  unsigned cmd, uint32_t *value);
-int dvb_fe_get_stats(struct dvb_v5_fe_parms *parms);
-
-float dvb_fe_retrieve_ber(struct dvb_v5_fe_parms *parms, unsigned layer,
-                          enum fecap_scale_params *scale);
-float dvb_fe_retrieve_per(struct dvb_v5_fe_parms *parms, unsigned layer);
-int dvb_fe_snprintf_eng(char *buf, int len, float val);
-int dvb_fe_snprintf_stat(struct dvb_v5_fe_parms *parms, uint32_t cmd,
-			  char *display_name, int layer,
-		          char **buf, int *len, int *show_layer_name);
-
-/* Get both status statistics and dvb parameters */
-
-int dvb_fe_get_event(struct dvb_v5_fe_parms *parms);
-
-/* Ancillary functions */
-
-const char * const *dvb_attr_names(int cmd);
-
-/* Other functions, associated to SEC/LNB/DISEqC */
-
-/*
- * NOTE: It currently lacks support for two ioctl's:
- * FE_DISEQC_RESET_OVERLOAD	used only on av7110.
- * Spec says:
- *   If the bus has been automatically powered off due to power overload,
- *   this ioctl call restores the power to the bus. The call requires read/write
- *   access to the device. This call has no effect if the device is manually
- *   powered off. Not all DVB adapters support this ioctl.
- *
- * FE_DISHNETWORK_SEND_LEGACY_CMD is used on av7110, budget, gp8psk and stv0299
- * Spec says:
- *   WARNING: This is a very obscure legacy command, used only at stv0299
- *   driver. Should not be used on newer drivers.
- *   It provides a non-standard method for selecting Diseqc voltage on the
- *   frontend, for Dish Network legacy switches.
- *   As support for this ioctl were added in 2004, this means that such dishes
- *   were already legacy in 2004.
- *
- * So, it doesn't make much sense on implementing support for them.
- */
-
-int dvb_fe_sec_voltage(struct dvb_v5_fe_parms *parms, int on, int v18);
-int dvb_fe_sec_tone(struct dvb_v5_fe_parms *parms, fe_sec_tone_mode_t tone);
-int dvb_fe_lnb_high_voltage(struct dvb_v5_fe_parms *parms, int on);
-int dvb_fe_diseqc_burst(struct dvb_v5_fe_parms *parms, int mini_b);
-int dvb_fe_diseqc_cmd(struct dvb_v5_fe_parms *parms, const unsigned len,
-		      const unsigned char *buf);
-int dvb_fe_diseqc_reply(struct dvb_v5_fe_parms *parms, unsigned *len, char *buf,
-		       int timeout);
-int dvb_fe_is_satellite(uint32_t delivery_system);
-
-#ifdef __cplusplus
-}
-#endif
-
-/* Arrays from dvb-v5.h */
-
-extern const unsigned fe_bandwidth_name[8];
-extern const char *dvb_v5_name[71];
-extern const void *dvb_v5_attr_names[];
-extern const char *delivery_system_name[20];
-extern const char *fe_code_rate_name[14];
-extern const char *fe_modulation_name[15];
-extern const char *fe_transmission_mode_name[10];
-extern const unsigned fe_bandwidth_name[8];
-extern const char *fe_guard_interval_name[12];
-extern const char *fe_hierarchy_name[6];
-extern const char *fe_voltage_name[4];
-extern const char *fe_tone_name[3];
-extern const char *fe_inversion_name[4];
-extern const char *fe_pilot_name[4];
-extern const char *fe_rolloff_name[5];
-
-#endif
diff --git a/lib/include/dvb-file.h b/lib/include/dvb-file.h
deleted file mode 100644
index 5150195..0000000
--- a/lib/include/dvb-file.h
+++ /dev/null
@@ -1,161 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-#ifndef _DVB_FILE_H
-#define _DVB_FILE_H
-
-#include "dvb-fe.h"
-
-struct el_pid {
-	uint8_t  type;
-	uint16_t pid;
-};
-
-struct dvb_entry {
-	struct dtv_property props[DTV_MAX_COMMAND];
-	unsigned int n_props;
-	struct dvb_entry *next;
-	uint16_t service_id;
-	uint16_t *video_pid, *audio_pid;
-	struct el_pid *other_el_pid;
-	unsigned video_pid_len, audio_pid_len, other_el_pid_len;
-	char *channel;
-	char *vchannel;
-
-	char *location;
-
-	int sat_number;
-	unsigned freq_bpf;
-	unsigned diseqc_wait;
-	char *lnb;
-};
-
-struct dvb_file {
-	char *fname;
-	int n_entries;
-	struct dvb_entry *first_entry;
-};
-
-struct parse_table {
-	unsigned int prop;
-	const char **table;
-	unsigned int size;
-	int	mult_factor;	/* Factor to muliply from file parsing POV */
-};
-
-struct parse_struct {
-	char				*id;
-	uint32_t			delsys;
-	const struct parse_table	*table;
-	unsigned int			size;
-};
-
-struct parse_file {
-	int has_delsys_id;
-	char *delimiter;
-	struct parse_struct formats[];
-};
-
-/* Known file formats */
-enum file_formats {
-	FILE_UNKNOWN,
-	FILE_ZAP,
-	FILE_CHANNEL,
-	FILE_DVBV5,
-};
-
-#define PTABLE(a) .table = a, .size=ARRAY_SIZE(a)
-
-
-struct dvb_v5_descriptors;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-static inline void dvb_file_free(struct dvb_file *dvb_file)
-{
-	struct dvb_entry *entry = dvb_file->first_entry, *next;
-	while (entry) {
-		next = entry->next;
-		if (entry->channel)
-			free(entry->channel);
-		if (entry->vchannel)
-			free(entry->vchannel);
-		if (entry->location)
-			free(entry->location);
-		if (entry->video_pid)
-			free(entry->video_pid);
-		if (entry->audio_pid)
-			free(entry->audio_pid);
-		if (entry->other_el_pid)
-			free(entry->other_el_pid);
-		if (entry->lnb)
-			free(entry->lnb);
-		free(entry);
-		entry = next;
-	}
-	free(dvb_file);
-}
-
-/* From dvb-legacy-channel-format.c */
-extern const struct parse_file channel_file_format;
-
-/* From dvb-zap-format.c */
-extern const struct parse_file channel_file_zap_format;
-
-/* From dvb-file.c */
-struct dvb_file *parse_format_oneline(const char *fname,
-				      uint32_t delsys,
-				      const struct parse_file *parse_file);
-int write_format_oneline(const char *fname,
-			 struct dvb_file *dvb_file,
-			 uint32_t delsys,
-			 const struct parse_file *parse_file);
-
-
-
-struct dvb_file *read_dvb_file(const char *fname);
-
-int write_dvb_file(const char *fname, struct dvb_file *dvb_file);
-
-int store_entry_prop(struct dvb_entry *entry,
-		     uint32_t cmd, uint32_t value);
-int retrieve_entry_prop(struct dvb_entry *entry,
-			uint32_t cmd, uint32_t *value);
-
-int store_dvb_channel(struct dvb_file **dvb_file,
-		      struct dvb_v5_fe_parms *parms,
-		      struct dvb_v5_descriptors *dvb_desc,
-		      int get_detected, int get_nit);
-int parse_delsys(const char *name);
-enum file_formats parse_format(const char *name);
-struct dvb_file *dvb_read_file_format(const char *fname,
-					   uint32_t delsys,
-					   enum file_formats format);
-int write_file_format(const char *fname,
-		      struct dvb_file *dvb_file,
-		      uint32_t delsys,
-		      enum file_formats format);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // _DVB_FILE_H
diff --git a/lib/include/dvb-frontend.h b/lib/include/dvb-frontend.h
deleted file mode 100644
index c56d77c..0000000
--- a/lib/include/dvb-frontend.h
+++ /dev/null
@@ -1,593 +0,0 @@
-/*
- * frontend.h
- *
- * Copyright (C) 2000 Marcus Metzler <marcus@convergence.de>
- *		    Ralph  Metzler <ralph@convergence.de>
- *		    Holger Waechtler <holger@convergence.de>
- *		    Andre Draszik <ad@convergence.de>
- *		    for convergence integrated media GmbH
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public License
- * as published by the Free Software Foundation; either version 2.1
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
- *
- */
-
-#ifndef _DVBFRONTEND_H_
-#define _DVBFRONTEND_H_
-
-#include <linux/types.h>
-
-typedef enum fe_type {
-	FE_QPSK,
-	FE_QAM,
-	FE_OFDM,
-	FE_ATSC
-} fe_type_t;
-
-
-typedef enum fe_caps {
-	FE_IS_STUPID			= 0,
-	FE_CAN_INVERSION_AUTO		= 0x1,
-	FE_CAN_FEC_1_2			= 0x2,
-	FE_CAN_FEC_2_3			= 0x4,
-	FE_CAN_FEC_3_4			= 0x8,
-	FE_CAN_FEC_4_5			= 0x10,
-	FE_CAN_FEC_5_6			= 0x20,
-	FE_CAN_FEC_6_7			= 0x40,
-	FE_CAN_FEC_7_8			= 0x80,
-	FE_CAN_FEC_8_9			= 0x100,
-	FE_CAN_FEC_AUTO			= 0x200,
-	FE_CAN_QPSK			= 0x400,
-	FE_CAN_QAM_16			= 0x800,
-	FE_CAN_QAM_32			= 0x1000,
-	FE_CAN_QAM_64			= 0x2000,
-	FE_CAN_QAM_128			= 0x4000,
-	FE_CAN_QAM_256			= 0x8000,
-	FE_CAN_QAM_AUTO			= 0x10000,
-	FE_CAN_TRANSMISSION_MODE_AUTO	= 0x20000,
-	FE_CAN_BANDWIDTH_AUTO		= 0x40000,
-	FE_CAN_GUARD_INTERVAL_AUTO	= 0x80000,
-	FE_CAN_HIERARCHY_AUTO		= 0x100000,
-	FE_CAN_8VSB			= 0x200000,
-	FE_CAN_16VSB			= 0x400000,
-	FE_HAS_EXTENDED_CAPS		= 0x800000,   /* We need more bitspace for newer APIs, indicate this. */
-	FE_CAN_MULTISTREAM		= 0x4000000,  /* frontend supports multistream filtering */
-	FE_CAN_TURBO_FEC		= 0x8000000,  /* frontend supports "turbo fec modulation" */
-	FE_CAN_2G_MODULATION		= 0x10000000, /* frontend supports "2nd generation modulation" (DVB-S2) */
-	FE_NEEDS_BENDING		= 0x20000000, /* not supported anymore, don't use (frontend requires frequency bending) */
-	FE_CAN_RECOVER			= 0x40000000, /* frontend can recover from a cable unplug automatically */
-	FE_CAN_MUTE_TS			= 0x80000000  /* frontend can stop spurious TS data output */
-} fe_caps_t;
-
-
-struct dvb_frontend_info {
-	char       name[128];
-	fe_type_t  type;			/* DEPRECATED. Use DTV_ENUM_DELSYS instead */
-	__u32      frequency_min;
-	__u32      frequency_max;
-	__u32      frequency_stepsize;
-	__u32      frequency_tolerance;
-	__u32      symbol_rate_min;
-	__u32      symbol_rate_max;
-	__u32      symbol_rate_tolerance;	/* ppm */
-	__u32      notifier_delay;		/* DEPRECATED */
-	fe_caps_t  caps;
-};
-
-
-/**
- *  Check out the DiSEqC bus spec available on http://www.eutelsat.org/ for
- *  the meaning of this struct...
- */
-struct dvb_diseqc_master_cmd {
-	__u8 msg [6];	/*  { framing, address, command, data [3] } */
-	__u8 msg_len;	/*  valid values are 3...6  */
-};
-
-
-struct dvb_diseqc_slave_reply {
-	__u8 msg [4];	/*  { framing, data [3] } */
-	__u8 msg_len;	/*  valid values are 0...4, 0 means no msg  */
-	int  timeout;	/*  return from ioctl after timeout ms with */
-};			/*  errorcode when no message was received  */
-
-
-typedef enum fe_sec_voltage {
-	SEC_VOLTAGE_13,
-	SEC_VOLTAGE_18,
-	SEC_VOLTAGE_OFF
-} fe_sec_voltage_t;
-
-
-typedef enum fe_sec_tone_mode {
-	SEC_TONE_ON,
-	SEC_TONE_OFF
-} fe_sec_tone_mode_t;
-
-
-typedef enum fe_sec_mini_cmd {
-	SEC_MINI_A,
-	SEC_MINI_B
-} fe_sec_mini_cmd_t;
-
-
-/**
- * enum fe_status - enumerates the possible frontend status
- * @FE_HAS_SIGNAL:	found something above the noise level
- * @FE_HAS_CARRIER:	found a DVB signal
- * @FE_HAS_VITERBI:	FEC is stable
- * @FE_HAS_SYNC:	found sync bytes
- * @FE_HAS_LOCK:	everything's working
- * @FE_TIMEDOUT:	no lock within the last ~2 seconds
- * @FE_REINIT:		frontend was reinitialized, application is recommended
- *			to reset DiSEqC, tone and parameters
- */
-
-typedef enum fe_status {
-	FE_HAS_SIGNAL		= 0x01,
-	FE_HAS_CARRIER		= 0x02,
-	FE_HAS_VITERBI		= 0x04,
-	FE_HAS_SYNC		= 0x08,
-	FE_HAS_LOCK		= 0x10,
-	FE_TIMEDOUT		= 0x20,
-	FE_REINIT		= 0x40,
-} fe_status_t;
-
-typedef enum fe_spectral_inversion {
-	INVERSION_OFF,
-	INVERSION_ON,
-	INVERSION_AUTO
-} fe_spectral_inversion_t;
-
-
-typedef enum fe_code_rate {
-	FEC_NONE = 0,
-	FEC_1_2,
-	FEC_2_3,
-	FEC_3_4,
-	FEC_4_5,
-	FEC_5_6,
-	FEC_6_7,
-	FEC_7_8,
-	FEC_8_9,
-	FEC_AUTO,
-	FEC_3_5,
-	FEC_9_10,
-	FEC_2_5,
-} fe_code_rate_t;
-
-
-typedef enum fe_modulation {
-	QPSK,
-	QAM_16,
-	QAM_32,
-	QAM_64,
-	QAM_128,
-	QAM_256,
-	QAM_AUTO,
-	VSB_8,
-	VSB_16,
-	PSK_8,
-	APSK_16,
-	APSK_32,
-	DQPSK,
-	QAM_4_NR,
-} fe_modulation_t;
-
-typedef enum fe_transmit_mode {
-	TRANSMISSION_MODE_2K,
-	TRANSMISSION_MODE_8K,
-	TRANSMISSION_MODE_AUTO,
-	TRANSMISSION_MODE_4K,
-	TRANSMISSION_MODE_1K,
-	TRANSMISSION_MODE_16K,
-	TRANSMISSION_MODE_32K,
-	TRANSMISSION_MODE_C1,
-	TRANSMISSION_MODE_C3780,
-} fe_transmit_mode_t;
-
-#if defined(__DVB_CORE__) || !defined (__KERNEL__)
-typedef enum fe_bandwidth {
-	BANDWIDTH_8_MHZ,
-	BANDWIDTH_7_MHZ,
-	BANDWIDTH_6_MHZ,
-	BANDWIDTH_AUTO,
-	BANDWIDTH_5_MHZ,
-	BANDWIDTH_10_MHZ,
-	BANDWIDTH_1_712_MHZ,
-} fe_bandwidth_t;
-#endif
-
-typedef enum fe_guard_interval {
-	GUARD_INTERVAL_1_32,
-	GUARD_INTERVAL_1_16,
-	GUARD_INTERVAL_1_8,
-	GUARD_INTERVAL_1_4,
-	GUARD_INTERVAL_AUTO,
-	GUARD_INTERVAL_1_128,
-	GUARD_INTERVAL_19_128,
-	GUARD_INTERVAL_19_256,
-	GUARD_INTERVAL_PN420,
-	GUARD_INTERVAL_PN595,
-	GUARD_INTERVAL_PN945,
-} fe_guard_interval_t;
-
-
-typedef enum fe_hierarchy {
-	HIERARCHY_NONE,
-	HIERARCHY_1,
-	HIERARCHY_2,
-	HIERARCHY_4,
-	HIERARCHY_AUTO
-} fe_hierarchy_t;
-
-enum fe_interleaving {
-	INTERLEAVING_NONE,
-	INTERLEAVING_AUTO,
-	INTERLEAVING_240,
-	INTERLEAVING_720,
-};
-
-#if defined(__DVB_CORE__) || !defined (__KERNEL__)
-struct dvb_qpsk_parameters {
-	__u32		symbol_rate;  /* symbol rate in Symbols per second */
-	fe_code_rate_t	fec_inner;    /* forward error correction (see above) */
-};
-
-struct dvb_qam_parameters {
-	__u32		symbol_rate; /* symbol rate in Symbols per second */
-	fe_code_rate_t	fec_inner;   /* forward error correction (see above) */
-	fe_modulation_t	modulation;  /* modulation type (see above) */
-};
-
-struct dvb_vsb_parameters {
-	fe_modulation_t	modulation;  /* modulation type (see above) */
-};
-
-struct dvb_ofdm_parameters {
-	fe_bandwidth_t      bandwidth;
-	fe_code_rate_t      code_rate_HP;  /* high priority stream code rate */
-	fe_code_rate_t      code_rate_LP;  /* low priority stream code rate */
-	fe_modulation_t     constellation; /* modulation type (see above) */
-	fe_transmit_mode_t  transmission_mode;
-	fe_guard_interval_t guard_interval;
-	fe_hierarchy_t      hierarchy_information;
-};
-
-
-struct dvb_frontend_parameters {
-	__u32 frequency;     /* (absolute) frequency in Hz for QAM/OFDM/ATSC */
-			     /* intermediate frequency in kHz for QPSK */
-	fe_spectral_inversion_t inversion;
-	union {
-		struct dvb_qpsk_parameters qpsk;
-		struct dvb_qam_parameters  qam;
-		struct dvb_ofdm_parameters ofdm;
-		struct dvb_vsb_parameters vsb;
-	} u;
-};
-
-struct dvb_frontend_event {
-	fe_status_t status;
-	struct dvb_frontend_parameters parameters;
-};
-#endif
-
-/* S2API Commands */
-#define DTV_UNDEFINED		0
-#define DTV_TUNE		1
-#define DTV_CLEAR		2
-#define DTV_FREQUENCY		3
-#define DTV_MODULATION		4
-#define DTV_BANDWIDTH_HZ	5
-#define DTV_INVERSION		6
-#define DTV_DISEQC_MASTER	7
-#define DTV_SYMBOL_RATE		8
-#define DTV_INNER_FEC		9
-#define DTV_VOLTAGE		10
-#define DTV_TONE		11
-#define DTV_PILOT		12
-#define DTV_ROLLOFF		13
-#define DTV_DISEQC_SLAVE_REPLY	14
-
-/* Basic enumeration set for querying unlimited capabilities */
-#define DTV_FE_CAPABILITY_COUNT	15
-#define DTV_FE_CAPABILITY	16
-#define DTV_DELIVERY_SYSTEM	17
-
-/* ISDB-T and ISDB-Tsb */
-#define DTV_ISDBT_PARTIAL_RECEPTION	18
-#define DTV_ISDBT_SOUND_BROADCASTING	19
-
-#define DTV_ISDBT_SB_SUBCHANNEL_ID	20
-#define DTV_ISDBT_SB_SEGMENT_IDX	21
-#define DTV_ISDBT_SB_SEGMENT_COUNT	22
-
-#define DTV_ISDBT_LAYERA_FEC			23
-#define DTV_ISDBT_LAYERA_MODULATION		24
-#define DTV_ISDBT_LAYERA_SEGMENT_COUNT		25
-#define DTV_ISDBT_LAYERA_TIME_INTERLEAVING	26
-
-#define DTV_ISDBT_LAYERB_FEC			27
-#define DTV_ISDBT_LAYERB_MODULATION		28
-#define DTV_ISDBT_LAYERB_SEGMENT_COUNT		29
-#define DTV_ISDBT_LAYERB_TIME_INTERLEAVING	30
-
-#define DTV_ISDBT_LAYERC_FEC			31
-#define DTV_ISDBT_LAYERC_MODULATION		32
-#define DTV_ISDBT_LAYERC_SEGMENT_COUNT		33
-#define DTV_ISDBT_LAYERC_TIME_INTERLEAVING	34
-
-#define DTV_API_VERSION		35
-
-#define DTV_CODE_RATE_HP	36
-#define DTV_CODE_RATE_LP	37
-#define DTV_GUARD_INTERVAL	38
-#define DTV_TRANSMISSION_MODE	39
-#define DTV_HIERARCHY		40
-
-#define DTV_ISDBT_LAYER_ENABLED	41
-
-#define DTV_STREAM_ID		42
-#define DTV_ISDBS_TS_ID_LEGACY	DTV_STREAM_ID
-#define DTV_DVBT2_PLP_ID_LEGACY	43
-
-#define DTV_ENUM_DELSYS		44
-
-/* ATSC-MH */
-#define DTV_ATSCMH_FIC_VER		45
-#define DTV_ATSCMH_PARADE_ID		46
-#define DTV_ATSCMH_NOG			47
-#define DTV_ATSCMH_TNOG			48
-#define DTV_ATSCMH_SGN			49
-#define DTV_ATSCMH_PRC			50
-#define DTV_ATSCMH_RS_FRAME_MODE	51
-#define DTV_ATSCMH_RS_FRAME_ENSEMBLE	52
-#define DTV_ATSCMH_RS_CODE_MODE_PRI	53
-#define DTV_ATSCMH_RS_CODE_MODE_SEC	54
-#define DTV_ATSCMH_SCCC_BLOCK_MODE	55
-#define DTV_ATSCMH_SCCC_CODE_MODE_A	56
-#define DTV_ATSCMH_SCCC_CODE_MODE_B	57
-#define DTV_ATSCMH_SCCC_CODE_MODE_C	58
-#define DTV_ATSCMH_SCCC_CODE_MODE_D	59
-
-#define DTV_INTERLEAVING			60
-#define DTV_LNA					61
-
-/* Quality parameters */
-#define DTV_STAT_SIGNAL_STRENGTH	62
-#define DTV_STAT_CNR			63
-#define DTV_STAT_PRE_ERROR_BIT_COUNT	64
-#define DTV_STAT_PRE_TOTAL_BIT_COUNT	65
-#define DTV_STAT_POST_ERROR_BIT_COUNT	66
-#define DTV_STAT_POST_TOTAL_BIT_COUNT	67
-#define DTV_STAT_ERROR_BLOCK_COUNT	68
-#define DTV_STAT_TOTAL_BLOCK_COUNT	69
-
-#define DTV_MAX_COMMAND		DTV_STAT_TOTAL_BLOCK_COUNT
-
-typedef enum fe_pilot {
-	PILOT_ON,
-	PILOT_OFF,
-	PILOT_AUTO,
-} fe_pilot_t;
-
-typedef enum fe_rolloff {
-	ROLLOFF_35, /* Implied value in DVB-S, default for DVB-S2 */
-	ROLLOFF_20,
-	ROLLOFF_25,
-	ROLLOFF_AUTO,
-} fe_rolloff_t;
-
-typedef enum fe_delivery_system {
-	SYS_UNDEFINED,
-	SYS_DVBC_ANNEX_A,
-	SYS_DVBC_ANNEX_B,
-	SYS_DVBT,
-	SYS_DSS,
-	SYS_DVBS,
-	SYS_DVBS2,
-	SYS_DVBH,
-	SYS_ISDBT,
-	SYS_ISDBS,
-	SYS_ISDBC,
-	SYS_ATSC,
-	SYS_ATSCMH,
-	SYS_DTMB,
-	SYS_CMMB,
-	SYS_DAB,
-	SYS_DVBT2,
-	SYS_TURBO,
-	SYS_DVBC_ANNEX_C,
-} fe_delivery_system_t;
-
-/* backward compatibility */
-#define SYS_DVBC_ANNEX_AC	SYS_DVBC_ANNEX_A
-#define SYS_DMBTH SYS_DTMB /* DMB-TH is legacy name, use DTMB instead */
-
-/* ATSC-MH */
-
-enum atscmh_sccc_block_mode {
-	ATSCMH_SCCC_BLK_SEP      = 0,
-	ATSCMH_SCCC_BLK_COMB     = 1,
-	ATSCMH_SCCC_BLK_RES      = 2,
-};
-
-enum atscmh_sccc_code_mode {
-	ATSCMH_SCCC_CODE_HLF     = 0,
-	ATSCMH_SCCC_CODE_QTR     = 1,
-	ATSCMH_SCCC_CODE_RES     = 2,
-};
-
-enum atscmh_rs_frame_ensemble {
-	ATSCMH_RSFRAME_ENS_PRI   = 0,
-	ATSCMH_RSFRAME_ENS_SEC   = 1,
-};
-
-enum atscmh_rs_frame_mode {
-	ATSCMH_RSFRAME_PRI_ONLY  = 0,
-	ATSCMH_RSFRAME_PRI_SEC   = 1,
-	ATSCMH_RSFRAME_RES       = 2,
-};
-
-enum atscmh_rs_code_mode {
-	ATSCMH_RSCODE_211_187    = 0,
-	ATSCMH_RSCODE_223_187    = 1,
-	ATSCMH_RSCODE_235_187    = 2,
-	ATSCMH_RSCODE_RES        = 3,
-};
-
-#define NO_STREAM_ID_FILTER	(~0U)
-#define LNA_AUTO                (~0U)
-
-struct dtv_cmds_h {
-	char	*name;		/* A display name for debugging purposes */
-
-	__u32	cmd;		/* A unique ID */
-
-	/* Flags */
-	__u32	set:1;		/* Either a set or get property */
-	__u32	buffer:1;	/* Does this property use the buffer? */
-	__u32	reserved:30;	/* Align */
-};
-
-/**
- * Scale types for the quality parameters.
- * @FE_SCALE_NOT_AVAILABLE: That QoS measure is not available. That
- *			    could indicate a temporary or a permanent
- *			    condition.
- * @FE_SCALE_DECIBEL: The scale is measured in 0.0001 dB steps, typically
- *		  used on signal measures.
- * @FE_SCALE_RELATIVE: The scale is a relative percentual measure,
- *			ranging from 0 (0%) to 0xffff (100%).
- * @FE_SCALE_COUNTER: The scale counts the occurrence of an event, like
- *			bit error, block error, lapsed time.
- */
-enum fecap_scale_params {
-	FE_SCALE_NOT_AVAILABLE = 0,
-	FE_SCALE_DECIBEL,
-	FE_SCALE_RELATIVE,
-	FE_SCALE_COUNTER
-};
-
-/**
- * struct dtv_stats - Used for reading a DTV status property
- *
- * @value:	value of the measure. Should range from 0 to 0xffff;
- * @scale:	Filled with enum fecap_scale_params - the scale
- *		in usage for that parameter
- *
- * For most delivery systems, this will return a single value for each
- * parameter.
- * It should be noticed, however, that new OFDM delivery systems like
- * ISDB can use different modulation types for each group of carriers.
- * On such standards, up to 8 groups of statistics can be provided, one
- * for each carrier group (called "layer" on ISDB).
- * In order to be consistent with other delivery systems, the first
- * value refers to the entire set of carriers ("global").
- * dtv_status:scale should use the value FE_SCALE_NOT_AVAILABLE when
- * the value for the entire group of carriers or from one specific layer
- * is not provided by the hardware.
- * st.len should be filled with the latest filled status + 1.
- *
- * In other words, for ISDB, those values should be filled like:
- *	u.st.stat.svalue[0] = global statistics;
- *	u.st.stat.scale[0] = FE_SCALE_DECIBELS;
- *	u.st.stat.value[1] = layer A statistics;
- *	u.st.stat.scale[1] = FE_SCALE_NOT_AVAILABLE (if not available);
- *	u.st.stat.svalue[2] = layer B statistics;
- *	u.st.stat.scale[2] = FE_SCALE_DECIBELS;
- *	u.st.stat.svalue[3] = layer C statistics;
- *	u.st.stat.scale[3] = FE_SCALE_DECIBELS;
- *	u.st.len = 4;
- */
-struct dtv_stats {
-	__u8 scale;	/* enum fecap_scale_params type */
-	union {
-		__u64 uvalue;	/* for counters and relative scales */
-		__s64 svalue;	/* for 0.0001 dB measures */
-	};
-} __attribute__ ((packed));
-
-
-#define MAX_DTV_STATS   4
-
-struct dtv_fe_stats {
-	__u8 len;
-	struct dtv_stats stat[MAX_DTV_STATS];
-} __attribute__ ((packed));
-
-struct dtv_property {
-	__u32 cmd;
-	__u32 reserved[3];
-	union {
-		__u32 data;
-		struct dtv_fe_stats st;
-		struct {
-			__u8 data[32];
-			__u32 len;
-			__u32 reserved1[3];
-			void *reserved2;
-		} buffer;
-	} u;
-	int result;
-} __attribute__ ((packed));
-
-/* num of properties cannot exceed DTV_IOCTL_MAX_MSGS per ioctl */
-#define DTV_IOCTL_MAX_MSGS 64
-
-struct dtv_properties {
-	__u32 num;
-	struct dtv_property *props;
-};
-
-#define FE_SET_PROPERTY		   _IOW('o', 82, struct dtv_properties)
-#define FE_GET_PROPERTY		   _IOR('o', 83, struct dtv_properties)
-
-
-/**
- * When set, this flag will disable any zigzagging or other "normal" tuning
- * behaviour. Additionally, there will be no automatic monitoring of the lock
- * status, and hence no frontend events will be generated. If a frontend device
- * is closed, this flag will be automatically turned off when the device is
- * reopened read-write.
- */
-#define FE_TUNE_MODE_ONESHOT 0x01
-
-
-#define FE_GET_INFO		   _IOR('o', 61, struct dvb_frontend_info)
-
-#define FE_DISEQC_RESET_OVERLOAD   _IO('o', 62)
-#define FE_DISEQC_SEND_MASTER_CMD  _IOW('o', 63, struct dvb_diseqc_master_cmd)
-#define FE_DISEQC_RECV_SLAVE_REPLY _IOR('o', 64, struct dvb_diseqc_slave_reply)
-#define FE_DISEQC_SEND_BURST       _IO('o', 65)  /* fe_sec_mini_cmd_t */
-
-#define FE_SET_TONE		   _IO('o', 66)  /* fe_sec_tone_mode_t */
-#define FE_SET_VOLTAGE		   _IO('o', 67)  /* fe_sec_voltage_t */
-#define FE_ENABLE_HIGH_LNB_VOLTAGE _IO('o', 68)  /* int */
-
-#define FE_READ_STATUS		   _IOR('o', 69, fe_status_t)
-#define FE_READ_BER		   _IOR('o', 70, __u32)
-#define FE_READ_SIGNAL_STRENGTH    _IOR('o', 71, __u16)
-#define FE_READ_SNR		   _IOR('o', 72, __u16)
-#define FE_READ_UNCORRECTED_BLOCKS _IOR('o', 73, __u32)
-
-#define FE_SET_FRONTEND		   _IOW('o', 76, struct dvb_frontend_parameters)
-#define FE_GET_FRONTEND		   _IOR('o', 77, struct dvb_frontend_parameters)
-#define FE_SET_FRONTEND_TUNE_MODE  _IO('o', 81) /* unsigned int */
-#define FE_GET_EVENT		   _IOR('o', 78, struct dvb_frontend_event)
-
-#define FE_DISHNETWORK_SEND_LEGACY_CMD _IO('o', 80) /* unsigned int */
-
-#endif /*_DVBFRONTEND_H_*/
diff --git a/lib/include/dvb-log.h b/lib/include/dvb-log.h
deleted file mode 100644
index c085e82..0000000
--- a/lib/include/dvb-log.h
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _LOG_H
-#define _LOG_H
-
-#include <syslog.h>
-
-typedef void (*dvb_logfunc)(int level, const char *fmt, ...) __attribute__ (( format( printf, 2, 3 )));
-
-#define dvb_log(fmt, arg...) do {\
-	parms->logfunc(LOG_INFO, fmt, ##arg); \
-} while (0)
-#define dvb_logerr(fmt, arg...) do {\
-	parms->logfunc(LOG_ERR, fmt, ##arg); \
-} while (0)
-#define dvb_logdbg(fmt, arg...) do {\
-	parms->logfunc(LOG_DEBUG, fmt, ##arg); \
-} while (0)
-#define dvb_logwarn(fmt, arg...) do {\
-	parms->logfunc(LOG_WARNING, fmt, ##arg); \
-} while (0)
-
-
-#define dvb_perror(msg) do {\
-	parms->logfunc(LOG_ERR, "%s: %s", msg, strerror(errno)); \
-} while (0)
-
-void dvb_default_log(int level, const char *fmt, ...) __attribute__ (( format( printf, 2, 3 )));
-
-#endif
diff --git a/lib/include/dvb-sat.h b/lib/include/dvb-sat.h
deleted file mode 100644
index 8b20c9e..0000000
--- a/lib/include/dvb-sat.h
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- */
-#ifndef _LIBSAT_H
-#define _LIBSAT_H
-
-#include "dvb-v5-std.h"
-
-struct dvbsat_freqrange {
-	unsigned low, high;
-};
-
-struct dvb_sat_lnb {
-	const char *name;
-	const char *alias;
-	unsigned lowfreq, highfreq;
-
-	unsigned rangeswitch;
-
-	struct dvbsat_freqrange freqrange[2];
-};
-
-struct dvb_v5_fe_parms;
-
-extern const char *dvbsat_polarization_name[5];
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-/* From libsat.c */
-int dvb_sat_search_lnb(const char *name);
-int print_lnb(int i);
-void print_all_lnb(void);
-const struct dvb_sat_lnb *dvb_sat_get_lnb(int i);
-int dvb_sat_set_parms(struct dvb_v5_fe_parms *parms);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif // _LIBSAT_H
diff --git a/lib/include/dvb-scan.h b/lib/include/dvb-scan.h
deleted file mode 100644
index 9aef531..0000000
--- a/lib/include/dvb-scan.h
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- */
-#ifndef _LIBSCAN_H
-#define _LIBSCAN_H
-
-#include <stdint.h>
-#include <linux/dvb/dmx.h>
-
-#include "descriptors.h"
-
-#include "dvb-sat.h"
-
-/* According with ISO/IEC 13818-1:2007 */
-
-#define MAX_TABLE_SIZE 1024 * 1024
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-struct dvb_entry;
-
-struct dvb_v5_descriptors_program {
-	struct dvb_table_pat_program *pat_pgm;
-	struct dvb_table_pmt *pmt;
-};
-
-struct dvb_v5_descriptors {
-	int verbose;
-	uint32_t delivery_system;
-
-	struct dvb_entry *entry;
-	unsigned num_entry;
-
-	struct dvb_table_pat *pat;
-	struct atsc_table_vct *vct;
-	struct dvb_v5_descriptors_program *program;
-	struct dvb_table_nit *nit;
-	struct dvb_table_sdt *sdt;
-
-	unsigned num_program;
-};
-
-int dvb_read_section(struct dvb_v5_fe_parms *parms, int dmx_fd, unsigned char tid, uint16_t pid, unsigned char **table,
-		unsigned timeout);
-
-int dvb_read_section_with_id(struct dvb_v5_fe_parms *parms, int dmx_fd, unsigned char tid, uint16_t pid, int id, uint8_t **table,
-		unsigned timeout);
-
-struct dvb_v5_descriptors *dvb_scan_alloc_handler_table(uint32_t delivery_system,
-						       int verbose);
-
-void dvb_scan_free_handler_table(struct dvb_v5_descriptors *dvb_scan_handler);
-
-struct dvb_v5_descriptors *dvb_get_ts_tables(struct dvb_v5_fe_parms *parms, int dmx_fd,
-					  uint32_t delivery_system,
-					  unsigned other_nit,
-					  unsigned timeout_multiply);
-void dvb_free_ts_tables(struct dvb_v5_descriptors *dvb_desc);
-
-typedef int (check_frontend_t)(void *args, struct dvb_v5_fe_parms *parms);
-
-struct dvb_v5_descriptors *dvb_scan_transponder(struct dvb_v5_fe_parms *parms,
-						struct dvb_entry *entry,
-						int dmx_fd,
-						check_frontend_t *check_frontend,
-						void *args,
-						unsigned other_nit,
-						unsigned timeout_multiply);
-
-int estimate_freq_shift(struct dvb_v5_fe_parms *parms);
-
-int new_freq_is_needed(struct dvb_entry *entry, struct dvb_entry *last_entry,
-		       uint32_t freq, enum dvb_sat_polarization pol, int shift);
-
-struct dvb_entry *dvb_scan_add_entry(struct dvb_v5_fe_parms *parms,
-				     struct dvb_entry *first_entry,
-			             struct dvb_entry *entry,
-			             uint32_t freq, uint32_t shift,
-			             enum dvb_sat_polarization pol);
-
-void dvb_add_scaned_transponders(struct dvb_v5_fe_parms *parms,
-				 struct dvb_v5_descriptors *dvb_scan_handler,
-				 struct dvb_entry *first_entry,
-				 struct dvb_entry *entry);
-
-void dvb_update_transponders(struct dvb_v5_fe_parms *parms,
-			     struct dvb_v5_descriptors *dvb_scan_handler,
-			     struct dvb_entry *first_entry,
-			     struct dvb_entry *entry);
-
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/include/dvb-v5-std.h b/lib/include/dvb-v5-std.h
deleted file mode 100644
index 094ee12..0000000
--- a/lib/include/dvb-v5-std.h
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- * Per-delivery system properties, according with the specs:
- * 	http://linuxtv.org/downloads/v4l-dvb-apis/FE_GET_SET_PROPERTY.html
- */
-#ifndef _DVB_V5_STD_H
-#define _DVB_V5_STD_H
-
-#include <stddef.h>
-#include "dvb-frontend.h"
-
-extern const unsigned int sys_dvbt_props[];
-extern const unsigned int sys_dvbt2_props[];
-extern const unsigned int sys_isdbt_props[];
-extern const unsigned int sys_atsc_props[];
-extern const unsigned int sys_atscmh_props[];
-extern const unsigned int sys_dvbc_annex_ac_props[];
-extern const unsigned int sys_dvbc_annex_b_props[];
-extern const unsigned int sys_dvbs_props[];
-extern const unsigned int sys_dvbs2_props[];
-extern const unsigned int sys_turbo_props[];
-extern const unsigned int sys_isdbs_props[];
-extern const unsigned int *dvb_v5_delivery_system[];
-extern const void *dvb_v5_attr_names[];
-
-/* User DTV codes, for internal usage */
-
-#define DTV_USER_COMMAND_START 256
-
-#define DTV_POLARIZATION        (DTV_USER_COMMAND_START + 0)
-#define DTV_VIDEO_PID           (DTV_USER_COMMAND_START + 1)
-#define DTV_AUDIO_PID           (DTV_USER_COMMAND_START + 2)
-#define DTV_SERVICE_ID          (DTV_USER_COMMAND_START + 3)
-#define DTV_CH_NAME             (DTV_USER_COMMAND_START + 4)
-#define DTV_VCHANNEL            (DTV_USER_COMMAND_START + 5)
-#define DTV_SAT_NUMBER          (DTV_USER_COMMAND_START + 6)
-#define DTV_DISEQC_WAIT         (DTV_USER_COMMAND_START + 7)
-#define DTV_DISEQC_LNB          (DTV_USER_COMMAND_START + 8)
-#define DTV_FREQ_BPF            (DTV_USER_COMMAND_START + 9)
-
-#define DTV_MAX_USER_COMMAND    DTV_FREQ_BPF
-
-/* For status and statistics */
-
-#define DTV_STATUS              (DTV_MAX_USER_COMMAND + 1)
-#define DTV_BER                 (DTV_MAX_USER_COMMAND + 2)
-#define DTV_PER                 (DTV_MAX_USER_COMMAND + 3)
-#define DTV_QUALITY             (DTV_MAX_USER_COMMAND + 4)
-#define DTV_PRE_BER		(DTV_MAX_USER_COMMAND + 5)
-
-#define DTV_MAX_STAT_COMMAND	DTV_PRE_BER
-
-#define DTV_USER_NAME_SIZE	(1 + DTV_MAX_STAT_COMMAND - DTV_USER_COMMAND_START)
-
-/* There are currently 8 stats provided on Kernelspace */
-#define DTV_NUM_KERNEL_STATS	8
-
-#define DTV_NUM_STATS_PROPS	(DTV_NUM_KERNEL_STATS + DTV_MAX_STAT_COMMAND - DTV_MAX_USER_COMMAND)
-
-enum dvb_sat_polarization {
-	POLARIZATION_OFF	= 0,
-	POLARIZATION_H		= 1,
-	POLARIZATION_V		= 2,
-	POLARIZATION_L		= 3,
-	POLARIZATION_R		= 4,
-};
-
-enum dvb_quality {
-	DVB_QUAL_UNKNOWN = 0,
-	DVB_QUAL_POOR,
-	DVB_QUAL_OK,
-	DVB_QUAL_GOOD,
-};
-
-extern const char *dvb_sat_pol_name[6];
-extern const char *dvb_user_name[DTV_USER_NAME_SIZE];
-extern const void *dvb_user_attr_names[];
-
-#endif
-
diff --git a/lib/include/libdvbv5/atsc_eit.h b/lib/include/libdvbv5/atsc_eit.h
new file mode 100644
index 0000000..0c0d830
--- /dev/null
+++ b/lib/include/libdvbv5/atsc_eit.h
@@ -0,0 +1,90 @@
+/*
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _ATSC_EIT_H
+#define _ATSC_EIT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+#include <time.h>
+
+#include <libdvbv5/atsc_header.h>
+#include <libdvbv5/descriptors.h>
+
+#define ATSC_TABLE_EIT        0xCB
+
+struct atsc_table_eit_event {
+	union {
+		uint16_t bitfield;
+		struct {
+	          uint16_t event_id:14;
+	          uint16_t one:2;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	uint32_t start_time;
+	union {
+		uint32_t bitfield2;
+		struct {
+			uint32_t title_length:8;
+			uint32_t duration:20;
+			uint32_t etm:2;
+			uint32_t one2:2;
+			uint32_t :2;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	struct dvb_desc *descriptor;
+	struct atsc_table_eit_event *next;
+	struct tm start;
+	uint16_t source_id;
+} __attribute__((packed));
+
+union atsc_table_eit_desc_length {
+	uint16_t bitfield;
+	struct {
+		uint16_t desc_length:12;
+		uint16_t reserved:4;
+	} __attribute__((packed));
+} __attribute__((packed));
+
+struct atsc_table_eit {
+	struct atsc_table_header header;
+	uint8_t events;
+	struct atsc_table_eit_event *event;
+} __attribute__((packed));
+
+#define atsc_eit_event_foreach(_event, _eit) \
+	for( struct atsc_table_eit_event *_event = _eit->event; _event; _event = _event->next ) \
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void atsc_table_eit_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void atsc_table_eit_free(struct atsc_table_eit *eit);
+void atsc_table_eit_print(struct dvb_v5_fe_parms *parms, struct atsc_table_eit *eit);
+void atsc_time(const uint32_t start_time, struct tm *tm);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/atsc_header.h b/lib/include/libdvbv5/atsc_header.h
new file mode 100644
index 0000000..1e7148e
--- /dev/null
+++ b/lib/include/libdvbv5/atsc_header.h
@@ -0,0 +1,63 @@
+/*
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _ATSC_HEADER_H
+#define _ATSC_HEADER_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#define ATSC_BASE_PID  0x1FFB
+
+struct atsc_table_header {
+	uint8_t  table_id;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t section_length:12;
+			uint16_t one:2;
+			uint16_t priv:1;
+			uint16_t syntax:1;
+		} __attribute__((packed));
+	};
+	uint16_t id;
+	uint8_t  current_next:1;
+	uint8_t  version:5;
+	uint8_t  one2:2;
+
+	uint8_t  section_id;
+	uint8_t  last_section;
+	uint8_t  protocol_version;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+int  atsc_table_header_init (struct atsc_table_header *t);
+void atsc_table_header_print(struct dvb_v5_fe_parms *parms, const struct atsc_table_header *t);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_atsc_service_location.h b/lib/include/libdvbv5/desc_atsc_service_location.h
new file mode 100644
index 0000000..47113f2
--- /dev/null
+++ b/lib/include/libdvbv5/desc_atsc_service_location.h
@@ -0,0 +1,71 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _ATSC_SERVICE_LOCATION_H
+#define _ATSC_SERVICE_LOCATION_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct atsc_desc_service_location_elementary {
+	uint8_t stream_type;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t elementary_pid:13;
+			uint16_t reserved:3;
+		} __attribute__((packed));
+	};
+	char ISO_639_language_code[3];
+} __attribute__((packed));
+
+struct atsc_desc_service_location {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	struct atsc_desc_service_location_elementary *elementary;
+
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t pcr_pid:13;
+			uint16_t reserved:3;
+		} __attribute__((packed));
+	};
+
+	uint8_t number_elements;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void atsc_desc_service_location_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void atsc_desc_service_location_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void atsc_desc_service_location_free(struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_cable_delivery.h b/lib/include/libdvbv5/desc_cable_delivery.h
new file mode 100644
index 0000000..70f5a5b
--- /dev/null
+++ b/lib/include/libdvbv5/desc_cable_delivery.h
@@ -0,0 +1,69 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Described at ETSI EN 300 468 V1.11.1 (2010-04)
+ */
+
+#ifndef _CABLE_DELIVERY_H
+#define _CABLE_DELIVERY_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_cable_delivery {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint32_t frequency;
+	union {
+		uint16_t bitfield1;
+		struct {
+			uint16_t fec_outer:4;
+			uint16_t reserved_future_use:12;
+		};
+	};
+	uint8_t modulation;
+	union {
+		uint32_t bitfield2;
+		struct {
+			uint32_t fec_inner:4;
+			uint32_t symbol_rate:28;
+		};
+	};
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_cable_delivery_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_cable_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+extern const unsigned dvbc_modulation_table[];
+extern const unsigned dvbc_fec_table[];
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_event_extended.h b/lib/include/libdvbv5/desc_event_extended.h
new file mode 100644
index 0000000..a543590
--- /dev/null
+++ b/lib/include/libdvbv5/desc_event_extended.h
@@ -0,0 +1,60 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _DESC_EVENT_EXTENDED_H
+#define _DESC_EVENT_EXTENDED_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_event_extended {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	union {
+		struct {
+			uint8_t last_id:4;
+			uint8_t id:4;
+		};
+		uint8_t ids;
+	};
+
+	unsigned char language[4];
+	char *text;
+	char *text_emph;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_event_extended_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_event_extended_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void dvb_desc_event_extended_free (struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_event_short.h b/lib/include/libdvbv5/desc_event_short.h
new file mode 100644
index 0000000..521fbca
--- /dev/null
+++ b/lib/include/libdvbv5/desc_event_short.h
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _DESC_EVENT_SHORT_H
+#define _DESC_EVENT_SHORT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_event_short {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	unsigned char language[4];
+	char *name;
+	char *name_emph;
+	char *text;
+	char *text_emph;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_event_short_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_event_short_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void dvb_desc_event_short_free (struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_extension.h b/lib/include/libdvbv5/desc_extension.h
new file mode 100644
index 0000000..5921cba
--- /dev/null
+++ b/lib/include/libdvbv5/desc_extension.h
@@ -0,0 +1,86 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _EXTENSION_DESC_H
+#define _EXTENSION_DESC_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_v5_fe_parms;
+
+enum extension_descriptors {
+	image_icon_descriptor				= 0x00,
+	cpcm_delivery_signalling_descriptor		= 0x01,
+	CP_descriptor					= 0x02,
+	CP_identifier_descriptor			= 0x03,
+	T2_delivery_system_descriptor			= 0x04,
+	SH_delivery_system_descriptor			= 0x05,
+	supplementary_audio_descriptor			= 0x06,
+	network_change_notify_descriptor		= 0x07,
+	message_descriptor				= 0x08,
+	target_region_descriptor			= 0x09,
+	target_region_name_descriptor			= 0x0a,
+	service_relocated_descriptor			= 0x0b,
+};
+
+struct dvb_extension_descriptor {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint8_t extension_code;
+
+	struct dvb_desc *descriptor;
+} __attribute__((packed));
+
+
+typedef void (*dvb_desc_ext_init_func) (struct dvb_v5_fe_parms *parms,
+					const uint8_t *buf,
+					struct dvb_extension_descriptor *ext,
+					void *desc);
+typedef void (*dvb_desc_ext_print_func)(struct dvb_v5_fe_parms *parms,
+					const struct dvb_extension_descriptor *ext,
+					const void *desc);
+typedef void (*dvb_desc_ext_free_func) (const void *desc);
+
+struct dvb_ext_descriptor {
+	const char *name;
+	dvb_desc_ext_init_func init;
+	dvb_desc_ext_print_func print;
+	dvb_desc_ext_free_func free;
+	ssize_t size;
+};
+
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void extension_descriptor_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void extension_descriptor_free(struct dvb_desc *descriptor);
+void extension_descriptor_print(struct dvb_v5_fe_parms *parms,
+				const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_frequency_list.h b/lib/include/libdvbv5/desc_frequency_list.h
new file mode 100644
index 0000000..e6e7945
--- /dev/null
+++ b/lib/include/libdvbv5/desc_frequency_list.h
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _DESC_FREQUENCY_LIST_H
+#define _DESC_FREQUENCY_LIST_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_frequency_list {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint8_t frequencies;
+	uint32_t *frequency;
+
+	union {
+		uint8_t bitfield;
+		struct {
+			uint8_t freq_type:2;
+			uint8_t reserved:6;
+		};
+	};
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_frequency_list_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_frequency_list_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_hierarchy.h b/lib/include/libdvbv5/desc_hierarchy.h
new file mode 100644
index 0000000..9dd44c2
--- /dev/null
+++ b/lib/include/libdvbv5/desc_hierarchy.h
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _HIERARCHY_H
+#define _HIERARCHY_H
+
+#include <stdint.h>
+
+struct dvb_desc_hierarchy {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint8_t hierarchy_type:4;
+	uint8_t reserved:4;
+
+	uint8_t layer:6;
+	uint8_t reserved2:2;
+
+	uint8_t embedded_layer:6;
+	uint8_t reserved3:2;
+
+	uint8_t channel:6;
+	uint8_t reserved4:2;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_hierarchy_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_hierarchy_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_isdbt_delivery.h b/lib/include/libdvbv5/desc_isdbt_delivery.h
new file mode 100644
index 0000000..4df30df
--- /dev/null
+++ b/lib/include/libdvbv5/desc_isdbt_delivery.h
@@ -0,0 +1,62 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Described on ARIB STD-B10 as Terrestrial delivery system descriptor
+ */
+
+#ifndef _ISDBT_DELIVERY_H
+#define _ISDBT_DELIVERY_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct isdbt_desc_terrestrial_delivery_system {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+	uint16_t *frequency;
+	unsigned num_freqs;
+
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t transmission_mode:2;
+			uint16_t guard_interval:2;
+			uint16_t area_code:6;
+		};
+	};
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void isdbt_desc_delivery_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void isdbt_desc_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void isdbt_desc_delivery_free(struct dvb_desc *desc);
+
+extern const uint32_t isdbt_interval[];
+extern const uint32_t isdbt_mode[];
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_language.h b/lib/include/libdvbv5/desc_language.h
new file mode 100644
index 0000000..44fe1a4
--- /dev/null
+++ b/lib/include/libdvbv5/desc_language.h
@@ -0,0 +1,50 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _DESC_LANGUAGE_H
+#define _DESC_LANGUAGE_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_language {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	unsigned char language[4];
+	uint8_t audio_type;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_language_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_language_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_logical_channel.h b/lib/include/libdvbv5/desc_logical_channel.h
new file mode 100644
index 0000000..ce1206c
--- /dev/null
+++ b/lib/include/libdvbv5/desc_logical_channel.h
@@ -0,0 +1,65 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Described on IEC/CENELEC DS/EN 62216-1:2011
+ *
+ * I couldn't find the original version, so I used what's there at:
+ *	http://tdt.telecom.pt/recursos/apresentacoes/Signalling Specifications for DTT deployment in Portugal.pdf
+ */
+
+#ifndef _LCN_DESC_H
+#define _LCN_DESC_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_logical_channel_number {
+	uint16_t service_id;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t logical_channel_number:10;
+			uint16_t reserved:5;
+			uint16_t visible_service_flag:1;
+		};
+	};
+} __attribute__((packed));
+
+struct dvb_desc_logical_channel {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	struct dvb_desc_logical_channel_number *lcn;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_logical_channel_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_logical_channel_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void dvb_desc_logical_channel_free(struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_network_name.h b/lib/include/libdvbv5/desc_network_name.h
new file mode 100644
index 0000000..060b2e8
--- /dev/null
+++ b/lib/include/libdvbv5/desc_network_name.h
@@ -0,0 +1,51 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _DESC_NETWORK_NAME_H
+#define _DESC_NETWORK_NAME_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_network_name {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	char *network_name;
+	char *network_name_emph;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_network_name_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_network_name_free (struct dvb_desc *desc);
+void dvb_desc_network_name_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_partial_reception.h b/lib/include/libdvbv5/desc_partial_reception.h
new file mode 100644
index 0000000..c6c45f7
--- /dev/null
+++ b/lib/include/libdvbv5/desc_partial_reception.h
@@ -0,0 +1,57 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Described on IEC/CENELEC DS/EN 62216-1:2011
+ *
+ * I couldn't find the original version, so I used what's there at:
+ *	http://tdt.telecom.pt/recursos/apresentacoes/Signalling Specifications for DTT deployment in Portugal.pdf
+ */
+
+#ifndef _PARTIAL_RECEPTION_H
+#define _PARTIAL_RECEPTION_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct isdb_partial_reception_service_id {
+	uint16_t service_id;
+} __attribute__((packed));
+
+struct isdb_desc_partial_reception {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	struct isdb_partial_reception_service_id *partial_reception;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void isdb_desc_partial_reception_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void isdb_desc_partial_reception_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void isdb_desc_partial_reception_free(struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_sat.h b/lib/include/libdvbv5/desc_sat.h
new file mode 100644
index 0000000..bb55319
--- /dev/null
+++ b/lib/include/libdvbv5/desc_sat.h
@@ -0,0 +1,67 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _SAT_H
+#define _SAT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_sat {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint32_t frequency;
+	uint16_t orbit;
+	uint8_t modulation_type:2;
+	uint8_t modulation_system:1;
+	uint8_t roll_off:2;
+	uint8_t polarization:2;
+	uint8_t west_east:1;
+	union {
+		uint32_t bitfield;
+		struct {
+			uint32_t fec:4;
+			uint32_t symbol_rate:28;
+		};
+	};
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_sat_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_sat_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+extern const unsigned dvbs_dvbc_dvbs_freq_inner[];
+extern const unsigned dvbs_polarization[];
+extern const unsigned dvbs_rolloff[];
+extern const unsigned dvbs_modulation[];
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_service.h b/lib/include/libdvbv5/desc_service.h
new file mode 100644
index 0000000..8f269aa
--- /dev/null
+++ b/lib/include/libdvbv5/desc_service.h
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _DESC_SERVICE_H
+#define _DESC_SERVICE_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_service {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint8_t service_type;
+	char *name;
+	char *name_emph;
+	char *provider;
+	char *provider_emph;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_service_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_service_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void dvb_desc_service_free (struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_service_list.h b/lib/include/libdvbv5/desc_service_list.h
new file mode 100644
index 0000000..8e7d73f
--- /dev/null
+++ b/lib/include/libdvbv5/desc_service_list.h
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _DESC_SERVICE_LIST_H
+#define _DESC_SERVICE_LIST_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_service_list_table {
+	uint16_t service_id;
+	uint8_t service_type;
+} __attribute__((packed));
+
+struct dvb_desc_service_list {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	//struct dvb_desc_service_list_table services[];
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_service_list_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_service_list_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_service_location.h b/lib/include/libdvbv5/desc_service_location.h
new file mode 100644
index 0000000..89ed055
--- /dev/null
+++ b/lib/include/libdvbv5/desc_service_location.h
@@ -0,0 +1,69 @@
+/*
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _SERVICE_LOCATION_H
+#define _SERVICE_LOCATION_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_service_location_element {
+	uint8_t stream_type;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t elementary_pid:13;
+			uint16_t reserved:3;
+		};
+	};
+	uint8_t language[4];
+} __attribute__((packed));
+
+struct dvb_desc_service_location {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t pcr_pid:13;
+			uint16_t reserved:3;
+		};
+	};
+	uint8_t elements;
+	struct dvb_desc_service_location_element *element;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_service_location_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_service_location_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void dvb_desc_service_location_free (struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_t2_delivery.h b/lib/include/libdvbv5/desc_t2_delivery.h
new file mode 100644
index 0000000..a36f6c1
--- /dev/null
+++ b/lib/include/libdvbv5/desc_t2_delivery.h
@@ -0,0 +1,78 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Based on ETSI EN 300 468 V1.11.1 (2010-04)
+ */
+
+#ifndef _T2_DELIVERY_H
+#define _T2_DELIVERY_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_t2_delivery_subcell {
+	uint8_t cell_id_extension;
+	uint16_t transposer_frequency;
+} __attribute__((packed));
+
+struct dvb_desc_t2_delivery {
+	uint8_t plp_id;
+	uint16_t system_id;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t tfs_flag:1;
+			uint16_t other_frequency_flag:1;
+			uint16_t transmission_mode:3;
+			uint16_t guard_interval:3;
+			uint16_t reserved:2;
+			uint16_t bandwidth:3;
+			uint16_t SISO_MISO:2;
+		};
+	};
+
+	uint32_t *centre_frequency;
+	uint8_t frequency_loop_length;
+	uint8_t subcel_info_loop_length;
+	struct dvb_desc_t2_delivery_subcell *subcell;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_t2_delivery_init(struct dvb_v5_fe_parms *parms,
+			       const uint8_t *buf,
+			       struct dvb_extension_descriptor *ext,
+			       void *desc);
+void dvb_desc_t2_delivery_print(struct dvb_v5_fe_parms *parms,
+				const struct dvb_extension_descriptor *ext,
+				const void *desc);
+void dvb_desc_t2_delivery_free(const void *desc);
+
+extern const unsigned dvbt2_bw[];
+extern const uint32_t dvbt2_interval[];
+extern const unsigned dvbt2_transmission_mode[];
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_terrestrial_delivery.h b/lib/include/libdvbv5/desc_terrestrial_delivery.h
new file mode 100644
index 0000000..9404169
--- /dev/null
+++ b/lib/include/libdvbv5/desc_terrestrial_delivery.h
@@ -0,0 +1,70 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Based on ETSI EN 300 468 V1.11.1 (2010-04)
+ *
+ */
+
+#ifndef _TERRESTRIAL_DELIVERY_H
+#define _TERRESTRIAL_DELIVERY_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_terrestrial_delivery {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint32_t centre_frequency;
+	uint8_t reserved_future_use1:2;
+	uint8_t mpe_fec_indicator:1;
+	uint8_t time_slice_indicator:1;
+	uint8_t priority:1;
+	uint8_t bandwidth:3;
+	uint8_t code_rate_hp_stream:3;
+	uint8_t hierarchy_information:3;
+	uint8_t constellation:2;
+	uint8_t other_frequency_flag:1;
+	uint8_t transmission_mode:2;
+	uint8_t guard_interval:2;
+	uint8_t code_rate_lp_stream:3;
+	uint32_t reserved_future_use2;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_terrestrial_delivery_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_terrestrial_delivery_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+extern const unsigned dvbt_bw[];
+extern const unsigned dvbt_modulation[];
+extern const unsigned dvbt_hierarchy[];
+extern const unsigned dvbt_code_rate[];
+extern const uint32_t dvbt_interval[];
+extern const unsigned dvbt_transmission_mode[];
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/desc_ts_info.h b/lib/include/libdvbv5/desc_ts_info.h
new file mode 100644
index 0000000..523aa04
--- /dev/null
+++ b/lib/include/libdvbv5/desc_ts_info.h
@@ -0,0 +1,66 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Described on ARIB STD-B10 as TS information descriptor
+ */
+
+#ifndef _TS_INFO_H
+#define _TS_INFO_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_ts_info_transmission_type {
+	uint8_t transmission_type_info;
+	uint8_t num_of_service;
+} __attribute__((packed));
+
+struct dvb_desc_ts_info {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	char *ts_name, *ts_name_emph;
+	struct dvb_desc_ts_info_transmission_type transmission_type;
+	uint16_t *service_id;
+
+	uint8_t remote_control_key_id;
+	union {
+		uint8_t bitfield;
+		struct {
+			uint8_t transmission_type_count:2;
+			uint8_t length_of_ts_name:6;
+		} __attribute__((packed));
+	};
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_desc_ts_info_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+void dvb_desc_ts_info_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+void dvb_desc_ts_info_free(struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/descriptors.h b/lib/include/libdvbv5/descriptors.h
new file mode 100644
index 0000000..6f89aeb
--- /dev/null
+++ b/lib/include/libdvbv5/descriptors.h
@@ -0,0 +1,297 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ */
+
+/*
+ * Descriptors, as defined on ETSI EN 300 468 V1.11.1 (2010-04)
+ */
+
+
+#ifndef _DESCRIPTORS_H
+#define _DESCRIPTORS_H
+
+#include <arpa/inet.h>
+#include <unistd.h>
+#include <stdint.h>
+
+#define DVB_MAX_PAYLOAD_PACKET_SIZE 4096
+#define DVB_PID_SDT      17
+#define DVB_PMT_TABLE_ID 2
+
+struct dvb_v5_fe_parms;
+
+typedef void (*dvb_table_init_func)(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+
+struct dvb_table_init {
+	dvb_table_init_func init;
+	ssize_t size;
+};
+
+extern const struct dvb_table_init dvb_table_initializers[];
+extern char *default_charset;
+extern char *output_charset;
+
+#define bswap16(b) do {\
+	b = ntohs(b); \
+} while (0)
+
+#define bswap32(b) do {\
+	b = ntohl(b); \
+} while (0)
+
+struct dvb_desc {
+	uint8_t type;
+	uint8_t length;
+	struct dvb_desc *next;
+
+	uint8_t data[];
+} __attribute__((packed));
+
+void dvb_desc_default_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+#ifdef __cplusplus
+extern "C" {
+#endif
+void dvb_desc_default_print  (struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+#ifdef __cplusplus
+}
+#endif
+
+#define dvb_desc_foreach( _desc, _tbl ) \
+	for( struct dvb_desc *_desc = _tbl->descriptor; _desc; _desc = _desc->next ) \
+
+#define dvb_desc_find(_struct, _desc, _tbl, _type) \
+	for( _struct *_desc = (_struct *) _tbl->descriptor; _desc; _desc = (_struct *) _desc->next ) \
+		if(_desc->type == _type) \
+
+ssize_t dvb_desc_init(const uint8_t *buf, struct dvb_desc *desc);
+
+uint32_t bcd(uint32_t bcd);
+
+void hexdump(struct dvb_v5_fe_parms *parms, const char *prefix, const unsigned char *buf, int len);
+
+void dvb_parse_descriptors(struct dvb_v5_fe_parms *parms, const uint8_t *buf, uint16_t section_length, struct dvb_desc **head_desc);
+void dvb_free_descriptors(struct dvb_desc **list);
+void dvb_print_descriptors(struct dvb_v5_fe_parms *parms, struct dvb_desc *desc);
+
+struct dvb_v5_fe_parms;
+
+typedef void (*dvb_desc_init_func) (struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc);
+typedef void (*dvb_desc_print_func)(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+typedef void (*dvb_desc_free_func) (struct dvb_desc *desc);
+
+struct dvb_descriptor {
+	const char *name;
+	dvb_desc_init_func init;
+	dvb_desc_print_func print;
+	dvb_desc_free_func free;
+	ssize_t size;
+};
+
+extern const struct dvb_descriptor dvb_descriptors[];
+
+enum dvb_tables {
+	PAT,
+	PMT,
+	NIT,
+	SDT,
+	TVCT,
+	CVCT,
+};
+
+enum descriptors {
+	/* ISO/IEC 13818-1 */
+	video_stream_descriptor				= 0x02,
+	audio_stream_descriptor				= 0x03,
+	hierarchy_descriptor				= 0x04,
+	registration_descriptor				= 0x05,
+	ds_alignment_descriptor				= 0x06,
+	target_background_grid_descriptor		= 0x07,
+	video_window_descriptor				= 0x08,
+	conditional_access_descriptor			= 0x09,
+	iso639_language_descriptor			= 0x0a,
+	system_clock_descriptor				= 0x0b,
+	multiplex_buffer_utilization_descriptor		= 0x0c,
+	copyright_descriptor				= 0x0d,
+	maximum_bitrate_descriptor			= 0x0e,
+	private_data_indicator_descriptor		= 0x0f,
+	smoothing_buffer_descriptor			= 0x10,
+	std_descriptor					= 0x11,
+	ibp_descriptor					= 0x12,
+
+	mpeg4_video_descriptor				= 0x1b,
+	mpeg4_audio_descriptor				= 0x1c,
+	iod_descriptor					= 0x1d,
+	sl_descriptor					= 0x1e,
+	fmc_descriptor					= 0x1f,
+	external_es_id_descriptor			= 0x20,
+	muxcode_descriptor				= 0x21,
+	fmxbuffersize_descriptor			= 0x22,
+	multiplexbuffer_descriptor			= 0x23,
+	content_labeling_descriptor			= 0x24,
+	metadata_pointer_descriptor			= 0x25,
+	metadata_descriptor				= 0x26,
+	metadata_std_descriptor				= 0x27,
+	AVC_video_descriptor				= 0x28,
+	ipmp_descriptor					= 0x29,
+	AVC_timing_and_HRD_descriptor			= 0x2a,
+	mpeg2_aac_audio_descriptor			= 0x2b,
+	flexmux_timing_descriptor			= 0x2c,
+
+	/* ETSI EN 300 468 V1.11.1 (2010-04) */
+
+	network_name_descriptor				= 0x40,
+	service_list_descriptor				= 0x41,
+	stuffing_descriptor				= 0x42,
+	satellite_delivery_system_descriptor		= 0x43,
+	cable_delivery_system_descriptor		= 0x44,
+	VBI_data_descriptor				= 0x45,
+	VBI_teletext_descriptor				= 0x46,
+	bouquet_name_descriptor				= 0x47,
+	service_descriptor				= 0x48,
+	country_availability_descriptor			= 0x49,
+	linkage_descriptor				= 0x4a,
+	NVOD_reference_descriptor			= 0x4b,
+	time_shifted_service_descriptor			= 0x4c,
+	short_event_descriptor				= 0x4d,
+	extended_event_descriptor			= 0x4e,
+	time_shifted_event_descriptor			= 0x4f,
+	component_descriptor				= 0x50,
+	mosaic_descriptor				= 0x51,
+	stream_identifier_descriptor			= 0x52,
+	CA_identifier_descriptor			= 0x53,
+	content_descriptor				= 0x54,
+	parental_rating_descriptor			= 0x55,
+	teletext_descriptor				= 0x56,
+	telephone_descriptor				= 0x57,
+	local_time_offset_descriptor			= 0x58,
+	subtitling_descriptor				= 0x59,
+	terrestrial_delivery_system_descriptor		= 0x5a,
+	multilingual_network_name_descriptor		= 0x5b,
+	multilingual_bouquet_name_descriptor		= 0x5c,
+	multilingual_service_name_descriptor		= 0x5d,
+	multilingual_component_descriptor		= 0x5e,
+	private_data_specifier_descriptor		= 0x5f,
+	service_move_descriptor				= 0x60,
+	short_smoothing_buffer_descriptor		= 0x61,
+	frequency_list_descriptor			= 0x62,
+	partial_transport_stream_descriptor		= 0x63,
+	data_broadcast_descriptor			= 0x64,
+	scrambling_descriptor				= 0x65,
+	data_broadcast_id_descriptor			= 0x66,
+	transport_stream_descriptor			= 0x67,
+	DSNG_descriptor					= 0x68,
+	PDC_descriptor					= 0x69,
+	AC_3_descriptor					= 0x6a,
+	ancillary_data_descriptor			= 0x6b,
+	cell_list_descriptor				= 0x6c,
+	cell_frequency_link_descriptor			= 0x6d,
+	announcement_support_descriptor			= 0x6e,
+	application_signalling_descriptor		= 0x6f,
+	adaptation_field_data_descriptor		= 0x70,
+	service_identifier_descriptor			= 0x71,
+	service_availability_descriptor			= 0x72,
+	default_authority_descriptor			= 0x73,
+	related_content_descriptor			= 0x74,
+	TVA_id_descriptor				= 0x75,
+	content_identifier_descriptor			= 0x76,
+	time_slice_fec_identifier_descriptor		= 0x77,
+	ECM_repetition_rate_descriptor			= 0x78,
+	S2_satellite_delivery_system_descriptor		= 0x79,
+	enhanced_AC_3_descriptor			= 0x7a,
+	DTS_descriptor					= 0x7b,
+	AAC_descriptor					= 0x7c,
+	XAIT_location_descriptor			= 0x7d,
+	FTA_content_management_descriptor		= 0x7e,
+	extension_descriptor				= 0x7f,
+
+	/* SCTE 35 2004 */
+	CUE_identifier_descriptor			= 0x8a,
+
+	extended_channel_name				= 0xa0,
+	service_location				= 0xa1,
+	/* From http://www.etherguidesystems.com/Help/SDOs/ATSC/Semantics/Descriptors/Default.aspx */
+	component_name_descriptor			= 0xa3,
+
+	/* From http://www.coolstf.com/tsreader/descriptors.html */
+	logical_channel_number_descriptor		= 0x83,
+
+	/* ISDB Descriptors, as defined on ABNT NBR 15603-1 2007 */
+
+	carousel_id_descriptor				= 0x13,
+	association_tag_descriptor			= 0x14,
+	deferred_association_tags_descriptor		= 0x15,
+
+	hierarchical_transmission_descriptor		= 0xc0,
+	digital_copy_control_descriptor			= 0xc1,
+	network_identifier_descriptor			= 0xc2,
+	partial_transport_stream_time_descriptor	= 0xc3,
+	audio_component_descriptor			= 0xc4,
+	hyperlink_descriptor				= 0xc5,
+	target_area_descriptor				= 0xc6,
+	data_contents_descriptor			= 0xc7,
+	video_decode_control_descriptor			= 0xc8,
+	download_content_descriptor			= 0xc9,
+	CA_EMM_TS_descriptor				= 0xca,
+	CA_contract_information_descriptor		= 0xcb,
+	CA_service_descriptor				= 0xcc,
+	TS_Information_descriptior			= 0xcd,
+	extended_broadcaster_descriptor			= 0xce,
+	logo_transmission_descriptor			= 0xcf,
+	basic_local_event_descriptor			= 0xd0,
+	reference_descriptor				= 0xd1,
+	node_relation_descriptor			= 0xd2,
+	short_node_information_descriptor		= 0xd3,
+	STC_reference_descriptor			= 0xd4,
+	series_descriptor				= 0xd5,
+	event_group_descriptor				= 0xd6,
+	SI_parameter_descriptor				= 0xd7,
+	broadcaster_Name_Descriptor			= 0xd8,
+	component_group_descriptor			= 0xd9,
+	SI_prime_TS_descriptor				= 0xda,
+	board_information_descriptor			= 0xdb,
+	LDT_linkage_descriptor				= 0xdc,
+	connected_transmission_descriptor		= 0xdd,
+	content_availability_descriptor			= 0xde,
+	service_group_descriptor			= 0xe0,
+	carousel_compatible_composite_descriptor	= 0xf7,
+	conditional_playback_descriptor			= 0xf8,
+	ISDBT_delivery_system_descriptor		= 0xfa,
+	partial_reception_descriptor			= 0xfb,
+	emergency_information_descriptor		= 0xfc,
+	data_component_descriptor			= 0xfd,
+	system_management_descriptor			= 0xfe,
+
+	/* ATSC descriptors - ATSC A/65:2009 spec */
+	atsc_stuffing_descriptor			= 0x80,
+	atsc_ac3_audio_descriptor			= 0x81,
+	atsc_caption_service_descriptor			= 0x86,
+	atsc_content_advisory_descriptor		= 0x87,
+	atsc_extended_channel_descriptor		= 0xa0,
+	atsc_service_location_descriptor		= 0xa1,
+	atsc_time_shifted_service_descriptor		= 0xa2,
+	atsc_component_name_descriptor			= 0xa3,
+	atsc_DCC_departing_request_descriptor		= 0xa8,
+	atsc_DCC_arriving_request_descriptor		= 0xa9,
+	atsc_redistribution_control_descriptor		= 0xaa,
+	atsc_ATSC_private_information_descriptor	= 0xad,
+	atsc_genre_descriptor				= 0xab,
+};
+
+/* Please see desc_extension.h for extension_descriptor types */
+
+#endif
diff --git a/lib/include/libdvbv5/dvb-demux.h b/lib/include/libdvbv5/dvb-demux.h
new file mode 100644
index 0000000..923016e
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-demux.h
@@ -0,0 +1,50 @@
+/*
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * These routines were written as part of the dvb-apps, as:
+ *	util functions for various ?zap implementations
+ *
+ *	Copyright (C) 2001 Johannes Stezenbach (js@convergence.de)
+ *	for convergence integrated media
+ *
+ *	Originally licensed as GPLv2 or upper
+ *
+ * All subsequent changes are under GPLv2 only and are:
+ *	Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ *
+ */
+#ifndef _DVB_DEMUX_H
+#define _DVB_DEMUX_H
+
+#include <linux/dvb/dmx.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+int dvb_dmx_open(int adapter, int demux);
+void dvb_dmx_close(int dmx_fd);
+void dvb_dmx_stop(int dmx_fd);
+
+int dvb_set_pesfilter(int dmxfd, int pid, dmx_pes_type_t type, dmx_output_t output, int buffersize);
+
+int get_pmt_pid(const char *dmxdev, int sid);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/dvb-fe.h b/lib/include/libdvbv5/dvb-fe.h
new file mode 100644
index 0000000..8cf2697
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-fe.h
@@ -0,0 +1,231 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+#ifndef _DVB_FE_H
+#define _DVB_FE_H
+
+#include <stdio.h>
+#include <errno.h>
+#include <stdint.h>
+#include <stdlib.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include <sys/ioctl.h>
+#include <string.h>
+#include "dvb-frontend.h"
+#include "dvb-sat.h"
+#include "dvb-log.h"
+
+#define ARRAY_SIZE(x)	(sizeof(x)/sizeof((x)[0]))
+
+#define MAX_DELIVERY_SYSTEMS	20
+
+/*
+ * Implement the stats properties as if they were defined via S2API style.
+ * This simplifies the addition of newer stats, and helps to port the
+ * code to v5 style, if such change gets merged upstream.
+ */
+
+/*
+ * Those are needed to avoid breaking apps that depend on the library
+ * but shoudn't be used anymore
+ */
+#define DTV_MAX_STATS			DTV_NUM_STATS_PROPS
+#define DTV_SIGNAL_STRENGTH		DTV_STAT_SIGNAL_STRENGTH
+#define DTV_SNR				DTV_STAT_CNR
+#define DTV_UNCORRECTED_BLOCKS		DTV_STAT_ERROR_BLOCK_COUNT
+
+enum dvbv3_emulation_type {
+	DVBV3_UNKNOWN = -1,
+	DVBV3_QPSK,
+	DVBV3_QAM,
+	DVBV3_OFDM,
+	DVBV3_ATSC,
+};
+
+struct dvb_v5_counters {
+	uint64_t			pre_bit_count;
+	uint64_t			pre_bit_error;
+	uint64_t			post_bit_count;
+	uint64_t			post_bit_error;
+	uint64_t			block_count;
+	uint64_t			block_error;
+};
+
+struct dvb_v5_stats {
+	struct dtv_property		prop[DTV_NUM_STATS_PROPS];
+
+	struct dvb_v5_counters		prev[MAX_DTV_STATS];
+	struct dvb_v5_counters		cur[MAX_DTV_STATS];
+
+	int				has_post_ber[MAX_DTV_STATS];
+	int				has_pre_ber[MAX_DTV_STATS];
+	int				has_per[MAX_DTV_STATS];
+
+	fe_status_t prev_status;
+
+};
+
+struct dvb_v5_fe_parms {
+	int				fd;
+	char				*fname;
+	unsigned			verbose;
+	struct dvb_frontend_info	info;
+	uint32_t			version;
+	int				has_v5_stats;
+	fe_delivery_system_t		current_sys;
+	int				num_systems;
+	fe_delivery_system_t		systems[MAX_DELIVERY_SYSTEMS];
+	int				n_props;
+	struct dtv_property		dvb_prop[DTV_MAX_COMMAND];
+	int				legacy_fe;
+	struct dvb_v5_stats		stats;
+
+	/* Satellite specific stuff, specified by the library client */
+	const struct dvb_sat_lnb       	*lnb;
+	int				sat_number;
+	unsigned			freq_bpf;
+
+	/* Satellite specific stuff, used internally */
+	int				high_band;
+	unsigned			diseqc_wait;
+	unsigned			freq_offset;
+
+	int				abort;
+	dvb_logfunc                     logfunc;
+};
+
+
+/* Open/close methods */
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+struct dvb_v5_fe_parms *dvb_fe_dummy();
+
+struct dvb_v5_fe_parms *dvb_fe_open(int adapter, int frontend,
+				    unsigned verbose, unsigned use_legacy_call);
+struct dvb_v5_fe_parms *dvb_fe_open2(int adapter, int frontend,
+				    unsigned verbose, unsigned use_legacy_call,
+				    dvb_logfunc logfunc);
+void dvb_fe_close(struct dvb_v5_fe_parms *parms);
+
+/* Get/set delivery system parameters */
+
+const char *dvb_cmd_name(int cmd);
+const char *const *dvb_attr_names(int cmd);
+
+int dvb_fe_retrieve_parm(const struct dvb_v5_fe_parms *parms,
+			unsigned cmd, uint32_t *value);
+int dvb_fe_store_parm(struct dvb_v5_fe_parms *parms,
+		      unsigned cmd, uint32_t value);
+int dvb_set_sys(struct dvb_v5_fe_parms *parms,
+		   fe_delivery_system_t sys);
+int dvb_add_parms_for_sys(struct dtv_property *dvb_prop,
+			  unsigned max_size,
+			  fe_delivery_system_t sys);
+int dvb_set_compat_delivery_system(struct dvb_v5_fe_parms *parms,
+				   uint32_t desired_system);
+
+void dvb_fe_prt_parms(const struct dvb_v5_fe_parms *parms);
+int dvb_fe_set_parms(struct dvb_v5_fe_parms *parms);
+int dvb_fe_get_parms(struct dvb_v5_fe_parms *parms);
+
+/* Get statistics */
+
+struct dtv_stats *dvb_fe_retrieve_stats_layer(struct dvb_v5_fe_parms *parms,
+                                              unsigned cmd, unsigned layer);
+int dvb_fe_retrieve_stats(struct dvb_v5_fe_parms *parms,
+			  unsigned cmd, uint32_t *value);
+int dvb_fe_get_stats(struct dvb_v5_fe_parms *parms);
+
+float dvb_fe_retrieve_ber(struct dvb_v5_fe_parms *parms, unsigned layer,
+                          enum fecap_scale_params *scale);
+float dvb_fe_retrieve_per(struct dvb_v5_fe_parms *parms, unsigned layer);
+int dvb_fe_snprintf_eng(char *buf, int len, float val);
+int dvb_fe_snprintf_stat(struct dvb_v5_fe_parms *parms, uint32_t cmd,
+			  char *display_name, int layer,
+		          char **buf, int *len, int *show_layer_name);
+
+/* Get both status statistics and dvb parameters */
+
+int dvb_fe_get_event(struct dvb_v5_fe_parms *parms);
+
+/* Ancillary functions */
+
+const char * const *dvb_attr_names(int cmd);
+
+/* Other functions, associated to SEC/LNB/DISEqC */
+
+/*
+ * NOTE: It currently lacks support for two ioctl's:
+ * FE_DISEQC_RESET_OVERLOAD	used only on av7110.
+ * Spec says:
+ *   If the bus has been automatically powered off due to power overload,
+ *   this ioctl call restores the power to the bus. The call requires read/write
+ *   access to the device. This call has no effect if the device is manually
+ *   powered off. Not all DVB adapters support this ioctl.
+ *
+ * FE_DISHNETWORK_SEND_LEGACY_CMD is used on av7110, budget, gp8psk and stv0299
+ * Spec says:
+ *   WARNING: This is a very obscure legacy command, used only at stv0299
+ *   driver. Should not be used on newer drivers.
+ *   It provides a non-standard method for selecting Diseqc voltage on the
+ *   frontend, for Dish Network legacy switches.
+ *   As support for this ioctl were added in 2004, this means that such dishes
+ *   were already legacy in 2004.
+ *
+ * So, it doesn't make much sense on implementing support for them.
+ */
+
+int dvb_fe_sec_voltage(struct dvb_v5_fe_parms *parms, int on, int v18);
+int dvb_fe_sec_tone(struct dvb_v5_fe_parms *parms, fe_sec_tone_mode_t tone);
+int dvb_fe_lnb_high_voltage(struct dvb_v5_fe_parms *parms, int on);
+int dvb_fe_diseqc_burst(struct dvb_v5_fe_parms *parms, int mini_b);
+int dvb_fe_diseqc_cmd(struct dvb_v5_fe_parms *parms, const unsigned len,
+		      const unsigned char *buf);
+int dvb_fe_diseqc_reply(struct dvb_v5_fe_parms *parms, unsigned *len, char *buf,
+		       int timeout);
+int dvb_fe_is_satellite(uint32_t delivery_system);
+
+#ifdef __cplusplus
+}
+#endif
+
+/* Arrays from dvb-v5.h */
+
+extern const unsigned fe_bandwidth_name[8];
+extern const char *dvb_v5_name[71];
+extern const void *dvb_v5_attr_names[];
+extern const char *delivery_system_name[20];
+extern const char *fe_code_rate_name[14];
+extern const char *fe_modulation_name[15];
+extern const char *fe_transmission_mode_name[10];
+extern const unsigned fe_bandwidth_name[8];
+extern const char *fe_guard_interval_name[12];
+extern const char *fe_hierarchy_name[6];
+extern const char *fe_voltage_name[4];
+extern const char *fe_tone_name[3];
+extern const char *fe_inversion_name[4];
+extern const char *fe_pilot_name[4];
+extern const char *fe_rolloff_name[5];
+
+#endif
diff --git a/lib/include/libdvbv5/dvb-file.h b/lib/include/libdvbv5/dvb-file.h
new file mode 100644
index 0000000..5150195
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-file.h
@@ -0,0 +1,161 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+#ifndef _DVB_FILE_H
+#define _DVB_FILE_H
+
+#include "dvb-fe.h"
+
+struct el_pid {
+	uint8_t  type;
+	uint16_t pid;
+};
+
+struct dvb_entry {
+	struct dtv_property props[DTV_MAX_COMMAND];
+	unsigned int n_props;
+	struct dvb_entry *next;
+	uint16_t service_id;
+	uint16_t *video_pid, *audio_pid;
+	struct el_pid *other_el_pid;
+	unsigned video_pid_len, audio_pid_len, other_el_pid_len;
+	char *channel;
+	char *vchannel;
+
+	char *location;
+
+	int sat_number;
+	unsigned freq_bpf;
+	unsigned diseqc_wait;
+	char *lnb;
+};
+
+struct dvb_file {
+	char *fname;
+	int n_entries;
+	struct dvb_entry *first_entry;
+};
+
+struct parse_table {
+	unsigned int prop;
+	const char **table;
+	unsigned int size;
+	int	mult_factor;	/* Factor to muliply from file parsing POV */
+};
+
+struct parse_struct {
+	char				*id;
+	uint32_t			delsys;
+	const struct parse_table	*table;
+	unsigned int			size;
+};
+
+struct parse_file {
+	int has_delsys_id;
+	char *delimiter;
+	struct parse_struct formats[];
+};
+
+/* Known file formats */
+enum file_formats {
+	FILE_UNKNOWN,
+	FILE_ZAP,
+	FILE_CHANNEL,
+	FILE_DVBV5,
+};
+
+#define PTABLE(a) .table = a, .size=ARRAY_SIZE(a)
+
+
+struct dvb_v5_descriptors;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+static inline void dvb_file_free(struct dvb_file *dvb_file)
+{
+	struct dvb_entry *entry = dvb_file->first_entry, *next;
+	while (entry) {
+		next = entry->next;
+		if (entry->channel)
+			free(entry->channel);
+		if (entry->vchannel)
+			free(entry->vchannel);
+		if (entry->location)
+			free(entry->location);
+		if (entry->video_pid)
+			free(entry->video_pid);
+		if (entry->audio_pid)
+			free(entry->audio_pid);
+		if (entry->other_el_pid)
+			free(entry->other_el_pid);
+		if (entry->lnb)
+			free(entry->lnb);
+		free(entry);
+		entry = next;
+	}
+	free(dvb_file);
+}
+
+/* From dvb-legacy-channel-format.c */
+extern const struct parse_file channel_file_format;
+
+/* From dvb-zap-format.c */
+extern const struct parse_file channel_file_zap_format;
+
+/* From dvb-file.c */
+struct dvb_file *parse_format_oneline(const char *fname,
+				      uint32_t delsys,
+				      const struct parse_file *parse_file);
+int write_format_oneline(const char *fname,
+			 struct dvb_file *dvb_file,
+			 uint32_t delsys,
+			 const struct parse_file *parse_file);
+
+
+
+struct dvb_file *read_dvb_file(const char *fname);
+
+int write_dvb_file(const char *fname, struct dvb_file *dvb_file);
+
+int store_entry_prop(struct dvb_entry *entry,
+		     uint32_t cmd, uint32_t value);
+int retrieve_entry_prop(struct dvb_entry *entry,
+			uint32_t cmd, uint32_t *value);
+
+int store_dvb_channel(struct dvb_file **dvb_file,
+		      struct dvb_v5_fe_parms *parms,
+		      struct dvb_v5_descriptors *dvb_desc,
+		      int get_detected, int get_nit);
+int parse_delsys(const char *name);
+enum file_formats parse_format(const char *name);
+struct dvb_file *dvb_read_file_format(const char *fname,
+					   uint32_t delsys,
+					   enum file_formats format);
+int write_file_format(const char *fname,
+		      struct dvb_file *dvb_file,
+		      uint32_t delsys,
+		      enum file_formats format);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif // _DVB_FILE_H
diff --git a/lib/include/libdvbv5/dvb-frontend.h b/lib/include/libdvbv5/dvb-frontend.h
new file mode 100644
index 0000000..c56d77c
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-frontend.h
@@ -0,0 +1,593 @@
+/*
+ * frontend.h
+ *
+ * Copyright (C) 2000 Marcus Metzler <marcus@convergence.de>
+ *		    Ralph  Metzler <ralph@convergence.de>
+ *		    Holger Waechtler <holger@convergence.de>
+ *		    Andre Draszik <ad@convergence.de>
+ *		    for convergence integrated media GmbH
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public License
+ * as published by the Free Software Foundation; either version 2.1
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+ *
+ */
+
+#ifndef _DVBFRONTEND_H_
+#define _DVBFRONTEND_H_
+
+#include <linux/types.h>
+
+typedef enum fe_type {
+	FE_QPSK,
+	FE_QAM,
+	FE_OFDM,
+	FE_ATSC
+} fe_type_t;
+
+
+typedef enum fe_caps {
+	FE_IS_STUPID			= 0,
+	FE_CAN_INVERSION_AUTO		= 0x1,
+	FE_CAN_FEC_1_2			= 0x2,
+	FE_CAN_FEC_2_3			= 0x4,
+	FE_CAN_FEC_3_4			= 0x8,
+	FE_CAN_FEC_4_5			= 0x10,
+	FE_CAN_FEC_5_6			= 0x20,
+	FE_CAN_FEC_6_7			= 0x40,
+	FE_CAN_FEC_7_8			= 0x80,
+	FE_CAN_FEC_8_9			= 0x100,
+	FE_CAN_FEC_AUTO			= 0x200,
+	FE_CAN_QPSK			= 0x400,
+	FE_CAN_QAM_16			= 0x800,
+	FE_CAN_QAM_32			= 0x1000,
+	FE_CAN_QAM_64			= 0x2000,
+	FE_CAN_QAM_128			= 0x4000,
+	FE_CAN_QAM_256			= 0x8000,
+	FE_CAN_QAM_AUTO			= 0x10000,
+	FE_CAN_TRANSMISSION_MODE_AUTO	= 0x20000,
+	FE_CAN_BANDWIDTH_AUTO		= 0x40000,
+	FE_CAN_GUARD_INTERVAL_AUTO	= 0x80000,
+	FE_CAN_HIERARCHY_AUTO		= 0x100000,
+	FE_CAN_8VSB			= 0x200000,
+	FE_CAN_16VSB			= 0x400000,
+	FE_HAS_EXTENDED_CAPS		= 0x800000,   /* We need more bitspace for newer APIs, indicate this. */
+	FE_CAN_MULTISTREAM		= 0x4000000,  /* frontend supports multistream filtering */
+	FE_CAN_TURBO_FEC		= 0x8000000,  /* frontend supports "turbo fec modulation" */
+	FE_CAN_2G_MODULATION		= 0x10000000, /* frontend supports "2nd generation modulation" (DVB-S2) */
+	FE_NEEDS_BENDING		= 0x20000000, /* not supported anymore, don't use (frontend requires frequency bending) */
+	FE_CAN_RECOVER			= 0x40000000, /* frontend can recover from a cable unplug automatically */
+	FE_CAN_MUTE_TS			= 0x80000000  /* frontend can stop spurious TS data output */
+} fe_caps_t;
+
+
+struct dvb_frontend_info {
+	char       name[128];
+	fe_type_t  type;			/* DEPRECATED. Use DTV_ENUM_DELSYS instead */
+	__u32      frequency_min;
+	__u32      frequency_max;
+	__u32      frequency_stepsize;
+	__u32      frequency_tolerance;
+	__u32      symbol_rate_min;
+	__u32      symbol_rate_max;
+	__u32      symbol_rate_tolerance;	/* ppm */
+	__u32      notifier_delay;		/* DEPRECATED */
+	fe_caps_t  caps;
+};
+
+
+/**
+ *  Check out the DiSEqC bus spec available on http://www.eutelsat.org/ for
+ *  the meaning of this struct...
+ */
+struct dvb_diseqc_master_cmd {
+	__u8 msg [6];	/*  { framing, address, command, data [3] } */
+	__u8 msg_len;	/*  valid values are 3...6  */
+};
+
+
+struct dvb_diseqc_slave_reply {
+	__u8 msg [4];	/*  { framing, data [3] } */
+	__u8 msg_len;	/*  valid values are 0...4, 0 means no msg  */
+	int  timeout;	/*  return from ioctl after timeout ms with */
+};			/*  errorcode when no message was received  */
+
+
+typedef enum fe_sec_voltage {
+	SEC_VOLTAGE_13,
+	SEC_VOLTAGE_18,
+	SEC_VOLTAGE_OFF
+} fe_sec_voltage_t;
+
+
+typedef enum fe_sec_tone_mode {
+	SEC_TONE_ON,
+	SEC_TONE_OFF
+} fe_sec_tone_mode_t;
+
+
+typedef enum fe_sec_mini_cmd {
+	SEC_MINI_A,
+	SEC_MINI_B
+} fe_sec_mini_cmd_t;
+
+
+/**
+ * enum fe_status - enumerates the possible frontend status
+ * @FE_HAS_SIGNAL:	found something above the noise level
+ * @FE_HAS_CARRIER:	found a DVB signal
+ * @FE_HAS_VITERBI:	FEC is stable
+ * @FE_HAS_SYNC:	found sync bytes
+ * @FE_HAS_LOCK:	everything's working
+ * @FE_TIMEDOUT:	no lock within the last ~2 seconds
+ * @FE_REINIT:		frontend was reinitialized, application is recommended
+ *			to reset DiSEqC, tone and parameters
+ */
+
+typedef enum fe_status {
+	FE_HAS_SIGNAL		= 0x01,
+	FE_HAS_CARRIER		= 0x02,
+	FE_HAS_VITERBI		= 0x04,
+	FE_HAS_SYNC		= 0x08,
+	FE_HAS_LOCK		= 0x10,
+	FE_TIMEDOUT		= 0x20,
+	FE_REINIT		= 0x40,
+} fe_status_t;
+
+typedef enum fe_spectral_inversion {
+	INVERSION_OFF,
+	INVERSION_ON,
+	INVERSION_AUTO
+} fe_spectral_inversion_t;
+
+
+typedef enum fe_code_rate {
+	FEC_NONE = 0,
+	FEC_1_2,
+	FEC_2_3,
+	FEC_3_4,
+	FEC_4_5,
+	FEC_5_6,
+	FEC_6_7,
+	FEC_7_8,
+	FEC_8_9,
+	FEC_AUTO,
+	FEC_3_5,
+	FEC_9_10,
+	FEC_2_5,
+} fe_code_rate_t;
+
+
+typedef enum fe_modulation {
+	QPSK,
+	QAM_16,
+	QAM_32,
+	QAM_64,
+	QAM_128,
+	QAM_256,
+	QAM_AUTO,
+	VSB_8,
+	VSB_16,
+	PSK_8,
+	APSK_16,
+	APSK_32,
+	DQPSK,
+	QAM_4_NR,
+} fe_modulation_t;
+
+typedef enum fe_transmit_mode {
+	TRANSMISSION_MODE_2K,
+	TRANSMISSION_MODE_8K,
+	TRANSMISSION_MODE_AUTO,
+	TRANSMISSION_MODE_4K,
+	TRANSMISSION_MODE_1K,
+	TRANSMISSION_MODE_16K,
+	TRANSMISSION_MODE_32K,
+	TRANSMISSION_MODE_C1,
+	TRANSMISSION_MODE_C3780,
+} fe_transmit_mode_t;
+
+#if defined(__DVB_CORE__) || !defined (__KERNEL__)
+typedef enum fe_bandwidth {
+	BANDWIDTH_8_MHZ,
+	BANDWIDTH_7_MHZ,
+	BANDWIDTH_6_MHZ,
+	BANDWIDTH_AUTO,
+	BANDWIDTH_5_MHZ,
+	BANDWIDTH_10_MHZ,
+	BANDWIDTH_1_712_MHZ,
+} fe_bandwidth_t;
+#endif
+
+typedef enum fe_guard_interval {
+	GUARD_INTERVAL_1_32,
+	GUARD_INTERVAL_1_16,
+	GUARD_INTERVAL_1_8,
+	GUARD_INTERVAL_1_4,
+	GUARD_INTERVAL_AUTO,
+	GUARD_INTERVAL_1_128,
+	GUARD_INTERVAL_19_128,
+	GUARD_INTERVAL_19_256,
+	GUARD_INTERVAL_PN420,
+	GUARD_INTERVAL_PN595,
+	GUARD_INTERVAL_PN945,
+} fe_guard_interval_t;
+
+
+typedef enum fe_hierarchy {
+	HIERARCHY_NONE,
+	HIERARCHY_1,
+	HIERARCHY_2,
+	HIERARCHY_4,
+	HIERARCHY_AUTO
+} fe_hierarchy_t;
+
+enum fe_interleaving {
+	INTERLEAVING_NONE,
+	INTERLEAVING_AUTO,
+	INTERLEAVING_240,
+	INTERLEAVING_720,
+};
+
+#if defined(__DVB_CORE__) || !defined (__KERNEL__)
+struct dvb_qpsk_parameters {
+	__u32		symbol_rate;  /* symbol rate in Symbols per second */
+	fe_code_rate_t	fec_inner;    /* forward error correction (see above) */
+};
+
+struct dvb_qam_parameters {
+	__u32		symbol_rate; /* symbol rate in Symbols per second */
+	fe_code_rate_t	fec_inner;   /* forward error correction (see above) */
+	fe_modulation_t	modulation;  /* modulation type (see above) */
+};
+
+struct dvb_vsb_parameters {
+	fe_modulation_t	modulation;  /* modulation type (see above) */
+};
+
+struct dvb_ofdm_parameters {
+	fe_bandwidth_t      bandwidth;
+	fe_code_rate_t      code_rate_HP;  /* high priority stream code rate */
+	fe_code_rate_t      code_rate_LP;  /* low priority stream code rate */
+	fe_modulation_t     constellation; /* modulation type (see above) */
+	fe_transmit_mode_t  transmission_mode;
+	fe_guard_interval_t guard_interval;
+	fe_hierarchy_t      hierarchy_information;
+};
+
+
+struct dvb_frontend_parameters {
+	__u32 frequency;     /* (absolute) frequency in Hz for QAM/OFDM/ATSC */
+			     /* intermediate frequency in kHz for QPSK */
+	fe_spectral_inversion_t inversion;
+	union {
+		struct dvb_qpsk_parameters qpsk;
+		struct dvb_qam_parameters  qam;
+		struct dvb_ofdm_parameters ofdm;
+		struct dvb_vsb_parameters vsb;
+	} u;
+};
+
+struct dvb_frontend_event {
+	fe_status_t status;
+	struct dvb_frontend_parameters parameters;
+};
+#endif
+
+/* S2API Commands */
+#define DTV_UNDEFINED		0
+#define DTV_TUNE		1
+#define DTV_CLEAR		2
+#define DTV_FREQUENCY		3
+#define DTV_MODULATION		4
+#define DTV_BANDWIDTH_HZ	5
+#define DTV_INVERSION		6
+#define DTV_DISEQC_MASTER	7
+#define DTV_SYMBOL_RATE		8
+#define DTV_INNER_FEC		9
+#define DTV_VOLTAGE		10
+#define DTV_TONE		11
+#define DTV_PILOT		12
+#define DTV_ROLLOFF		13
+#define DTV_DISEQC_SLAVE_REPLY	14
+
+/* Basic enumeration set for querying unlimited capabilities */
+#define DTV_FE_CAPABILITY_COUNT	15
+#define DTV_FE_CAPABILITY	16
+#define DTV_DELIVERY_SYSTEM	17
+
+/* ISDB-T and ISDB-Tsb */
+#define DTV_ISDBT_PARTIAL_RECEPTION	18
+#define DTV_ISDBT_SOUND_BROADCASTING	19
+
+#define DTV_ISDBT_SB_SUBCHANNEL_ID	20
+#define DTV_ISDBT_SB_SEGMENT_IDX	21
+#define DTV_ISDBT_SB_SEGMENT_COUNT	22
+
+#define DTV_ISDBT_LAYERA_FEC			23
+#define DTV_ISDBT_LAYERA_MODULATION		24
+#define DTV_ISDBT_LAYERA_SEGMENT_COUNT		25
+#define DTV_ISDBT_LAYERA_TIME_INTERLEAVING	26
+
+#define DTV_ISDBT_LAYERB_FEC			27
+#define DTV_ISDBT_LAYERB_MODULATION		28
+#define DTV_ISDBT_LAYERB_SEGMENT_COUNT		29
+#define DTV_ISDBT_LAYERB_TIME_INTERLEAVING	30
+
+#define DTV_ISDBT_LAYERC_FEC			31
+#define DTV_ISDBT_LAYERC_MODULATION		32
+#define DTV_ISDBT_LAYERC_SEGMENT_COUNT		33
+#define DTV_ISDBT_LAYERC_TIME_INTERLEAVING	34
+
+#define DTV_API_VERSION		35
+
+#define DTV_CODE_RATE_HP	36
+#define DTV_CODE_RATE_LP	37
+#define DTV_GUARD_INTERVAL	38
+#define DTV_TRANSMISSION_MODE	39
+#define DTV_HIERARCHY		40
+
+#define DTV_ISDBT_LAYER_ENABLED	41
+
+#define DTV_STREAM_ID		42
+#define DTV_ISDBS_TS_ID_LEGACY	DTV_STREAM_ID
+#define DTV_DVBT2_PLP_ID_LEGACY	43
+
+#define DTV_ENUM_DELSYS		44
+
+/* ATSC-MH */
+#define DTV_ATSCMH_FIC_VER		45
+#define DTV_ATSCMH_PARADE_ID		46
+#define DTV_ATSCMH_NOG			47
+#define DTV_ATSCMH_TNOG			48
+#define DTV_ATSCMH_SGN			49
+#define DTV_ATSCMH_PRC			50
+#define DTV_ATSCMH_RS_FRAME_MODE	51
+#define DTV_ATSCMH_RS_FRAME_ENSEMBLE	52
+#define DTV_ATSCMH_RS_CODE_MODE_PRI	53
+#define DTV_ATSCMH_RS_CODE_MODE_SEC	54
+#define DTV_ATSCMH_SCCC_BLOCK_MODE	55
+#define DTV_ATSCMH_SCCC_CODE_MODE_A	56
+#define DTV_ATSCMH_SCCC_CODE_MODE_B	57
+#define DTV_ATSCMH_SCCC_CODE_MODE_C	58
+#define DTV_ATSCMH_SCCC_CODE_MODE_D	59
+
+#define DTV_INTERLEAVING			60
+#define DTV_LNA					61
+
+/* Quality parameters */
+#define DTV_STAT_SIGNAL_STRENGTH	62
+#define DTV_STAT_CNR			63
+#define DTV_STAT_PRE_ERROR_BIT_COUNT	64
+#define DTV_STAT_PRE_TOTAL_BIT_COUNT	65
+#define DTV_STAT_POST_ERROR_BIT_COUNT	66
+#define DTV_STAT_POST_TOTAL_BIT_COUNT	67
+#define DTV_STAT_ERROR_BLOCK_COUNT	68
+#define DTV_STAT_TOTAL_BLOCK_COUNT	69
+
+#define DTV_MAX_COMMAND		DTV_STAT_TOTAL_BLOCK_COUNT
+
+typedef enum fe_pilot {
+	PILOT_ON,
+	PILOT_OFF,
+	PILOT_AUTO,
+} fe_pilot_t;
+
+typedef enum fe_rolloff {
+	ROLLOFF_35, /* Implied value in DVB-S, default for DVB-S2 */
+	ROLLOFF_20,
+	ROLLOFF_25,
+	ROLLOFF_AUTO,
+} fe_rolloff_t;
+
+typedef enum fe_delivery_system {
+	SYS_UNDEFINED,
+	SYS_DVBC_ANNEX_A,
+	SYS_DVBC_ANNEX_B,
+	SYS_DVBT,
+	SYS_DSS,
+	SYS_DVBS,
+	SYS_DVBS2,
+	SYS_DVBH,
+	SYS_ISDBT,
+	SYS_ISDBS,
+	SYS_ISDBC,
+	SYS_ATSC,
+	SYS_ATSCMH,
+	SYS_DTMB,
+	SYS_CMMB,
+	SYS_DAB,
+	SYS_DVBT2,
+	SYS_TURBO,
+	SYS_DVBC_ANNEX_C,
+} fe_delivery_system_t;
+
+/* backward compatibility */
+#define SYS_DVBC_ANNEX_AC	SYS_DVBC_ANNEX_A
+#define SYS_DMBTH SYS_DTMB /* DMB-TH is legacy name, use DTMB instead */
+
+/* ATSC-MH */
+
+enum atscmh_sccc_block_mode {
+	ATSCMH_SCCC_BLK_SEP      = 0,
+	ATSCMH_SCCC_BLK_COMB     = 1,
+	ATSCMH_SCCC_BLK_RES      = 2,
+};
+
+enum atscmh_sccc_code_mode {
+	ATSCMH_SCCC_CODE_HLF     = 0,
+	ATSCMH_SCCC_CODE_QTR     = 1,
+	ATSCMH_SCCC_CODE_RES     = 2,
+};
+
+enum atscmh_rs_frame_ensemble {
+	ATSCMH_RSFRAME_ENS_PRI   = 0,
+	ATSCMH_RSFRAME_ENS_SEC   = 1,
+};
+
+enum atscmh_rs_frame_mode {
+	ATSCMH_RSFRAME_PRI_ONLY  = 0,
+	ATSCMH_RSFRAME_PRI_SEC   = 1,
+	ATSCMH_RSFRAME_RES       = 2,
+};
+
+enum atscmh_rs_code_mode {
+	ATSCMH_RSCODE_211_187    = 0,
+	ATSCMH_RSCODE_223_187    = 1,
+	ATSCMH_RSCODE_235_187    = 2,
+	ATSCMH_RSCODE_RES        = 3,
+};
+
+#define NO_STREAM_ID_FILTER	(~0U)
+#define LNA_AUTO                (~0U)
+
+struct dtv_cmds_h {
+	char	*name;		/* A display name for debugging purposes */
+
+	__u32	cmd;		/* A unique ID */
+
+	/* Flags */
+	__u32	set:1;		/* Either a set or get property */
+	__u32	buffer:1;	/* Does this property use the buffer? */
+	__u32	reserved:30;	/* Align */
+};
+
+/**
+ * Scale types for the quality parameters.
+ * @FE_SCALE_NOT_AVAILABLE: That QoS measure is not available. That
+ *			    could indicate a temporary or a permanent
+ *			    condition.
+ * @FE_SCALE_DECIBEL: The scale is measured in 0.0001 dB steps, typically
+ *		  used on signal measures.
+ * @FE_SCALE_RELATIVE: The scale is a relative percentual measure,
+ *			ranging from 0 (0%) to 0xffff (100%).
+ * @FE_SCALE_COUNTER: The scale counts the occurrence of an event, like
+ *			bit error, block error, lapsed time.
+ */
+enum fecap_scale_params {
+	FE_SCALE_NOT_AVAILABLE = 0,
+	FE_SCALE_DECIBEL,
+	FE_SCALE_RELATIVE,
+	FE_SCALE_COUNTER
+};
+
+/**
+ * struct dtv_stats - Used for reading a DTV status property
+ *
+ * @value:	value of the measure. Should range from 0 to 0xffff;
+ * @scale:	Filled with enum fecap_scale_params - the scale
+ *		in usage for that parameter
+ *
+ * For most delivery systems, this will return a single value for each
+ * parameter.
+ * It should be noticed, however, that new OFDM delivery systems like
+ * ISDB can use different modulation types for each group of carriers.
+ * On such standards, up to 8 groups of statistics can be provided, one
+ * for each carrier group (called "layer" on ISDB).
+ * In order to be consistent with other delivery systems, the first
+ * value refers to the entire set of carriers ("global").
+ * dtv_status:scale should use the value FE_SCALE_NOT_AVAILABLE when
+ * the value for the entire group of carriers or from one specific layer
+ * is not provided by the hardware.
+ * st.len should be filled with the latest filled status + 1.
+ *
+ * In other words, for ISDB, those values should be filled like:
+ *	u.st.stat.svalue[0] = global statistics;
+ *	u.st.stat.scale[0] = FE_SCALE_DECIBELS;
+ *	u.st.stat.value[1] = layer A statistics;
+ *	u.st.stat.scale[1] = FE_SCALE_NOT_AVAILABLE (if not available);
+ *	u.st.stat.svalue[2] = layer B statistics;
+ *	u.st.stat.scale[2] = FE_SCALE_DECIBELS;
+ *	u.st.stat.svalue[3] = layer C statistics;
+ *	u.st.stat.scale[3] = FE_SCALE_DECIBELS;
+ *	u.st.len = 4;
+ */
+struct dtv_stats {
+	__u8 scale;	/* enum fecap_scale_params type */
+	union {
+		__u64 uvalue;	/* for counters and relative scales */
+		__s64 svalue;	/* for 0.0001 dB measures */
+	};
+} __attribute__ ((packed));
+
+
+#define MAX_DTV_STATS   4
+
+struct dtv_fe_stats {
+	__u8 len;
+	struct dtv_stats stat[MAX_DTV_STATS];
+} __attribute__ ((packed));
+
+struct dtv_property {
+	__u32 cmd;
+	__u32 reserved[3];
+	union {
+		__u32 data;
+		struct dtv_fe_stats st;
+		struct {
+			__u8 data[32];
+			__u32 len;
+			__u32 reserved1[3];
+			void *reserved2;
+		} buffer;
+	} u;
+	int result;
+} __attribute__ ((packed));
+
+/* num of properties cannot exceed DTV_IOCTL_MAX_MSGS per ioctl */
+#define DTV_IOCTL_MAX_MSGS 64
+
+struct dtv_properties {
+	__u32 num;
+	struct dtv_property *props;
+};
+
+#define FE_SET_PROPERTY		   _IOW('o', 82, struct dtv_properties)
+#define FE_GET_PROPERTY		   _IOR('o', 83, struct dtv_properties)
+
+
+/**
+ * When set, this flag will disable any zigzagging or other "normal" tuning
+ * behaviour. Additionally, there will be no automatic monitoring of the lock
+ * status, and hence no frontend events will be generated. If a frontend device
+ * is closed, this flag will be automatically turned off when the device is
+ * reopened read-write.
+ */
+#define FE_TUNE_MODE_ONESHOT 0x01
+
+
+#define FE_GET_INFO		   _IOR('o', 61, struct dvb_frontend_info)
+
+#define FE_DISEQC_RESET_OVERLOAD   _IO('o', 62)
+#define FE_DISEQC_SEND_MASTER_CMD  _IOW('o', 63, struct dvb_diseqc_master_cmd)
+#define FE_DISEQC_RECV_SLAVE_REPLY _IOR('o', 64, struct dvb_diseqc_slave_reply)
+#define FE_DISEQC_SEND_BURST       _IO('o', 65)  /* fe_sec_mini_cmd_t */
+
+#define FE_SET_TONE		   _IO('o', 66)  /* fe_sec_tone_mode_t */
+#define FE_SET_VOLTAGE		   _IO('o', 67)  /* fe_sec_voltage_t */
+#define FE_ENABLE_HIGH_LNB_VOLTAGE _IO('o', 68)  /* int */
+
+#define FE_READ_STATUS		   _IOR('o', 69, fe_status_t)
+#define FE_READ_BER		   _IOR('o', 70, __u32)
+#define FE_READ_SIGNAL_STRENGTH    _IOR('o', 71, __u16)
+#define FE_READ_SNR		   _IOR('o', 72, __u16)
+#define FE_READ_UNCORRECTED_BLOCKS _IOR('o', 73, __u32)
+
+#define FE_SET_FRONTEND		   _IOW('o', 76, struct dvb_frontend_parameters)
+#define FE_GET_FRONTEND		   _IOR('o', 77, struct dvb_frontend_parameters)
+#define FE_SET_FRONTEND_TUNE_MODE  _IO('o', 81) /* unsigned int */
+#define FE_GET_EVENT		   _IOR('o', 78, struct dvb_frontend_event)
+
+#define FE_DISHNETWORK_SEND_LEGACY_CMD _IO('o', 80) /* unsigned int */
+
+#endif /*_DVBFRONTEND_H_*/
diff --git a/lib/include/libdvbv5/dvb-log.h b/lib/include/libdvbv5/dvb-log.h
new file mode 100644
index 0000000..c085e82
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-log.h
@@ -0,0 +1,49 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _LOG_H
+#define _LOG_H
+
+#include <syslog.h>
+
+typedef void (*dvb_logfunc)(int level, const char *fmt, ...) __attribute__ (( format( printf, 2, 3 )));
+
+#define dvb_log(fmt, arg...) do {\
+	parms->logfunc(LOG_INFO, fmt, ##arg); \
+} while (0)
+#define dvb_logerr(fmt, arg...) do {\
+	parms->logfunc(LOG_ERR, fmt, ##arg); \
+} while (0)
+#define dvb_logdbg(fmt, arg...) do {\
+	parms->logfunc(LOG_DEBUG, fmt, ##arg); \
+} while (0)
+#define dvb_logwarn(fmt, arg...) do {\
+	parms->logfunc(LOG_WARNING, fmt, ##arg); \
+} while (0)
+
+
+#define dvb_perror(msg) do {\
+	parms->logfunc(LOG_ERR, "%s: %s", msg, strerror(errno)); \
+} while (0)
+
+void dvb_default_log(int level, const char *fmt, ...) __attribute__ (( format( printf, 2, 3 )));
+
+#endif
diff --git a/lib/include/libdvbv5/dvb-sat.h b/lib/include/libdvbv5/dvb-sat.h
new file mode 100644
index 0000000..8b20c9e
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-sat.h
@@ -0,0 +1,57 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ */
+#ifndef _LIBSAT_H
+#define _LIBSAT_H
+
+#include "dvb-v5-std.h"
+
+struct dvbsat_freqrange {
+	unsigned low, high;
+};
+
+struct dvb_sat_lnb {
+	const char *name;
+	const char *alias;
+	unsigned lowfreq, highfreq;
+
+	unsigned rangeswitch;
+
+	struct dvbsat_freqrange freqrange[2];
+};
+
+struct dvb_v5_fe_parms;
+
+extern const char *dvbsat_polarization_name[5];
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/* From libsat.c */
+int dvb_sat_search_lnb(const char *name);
+int print_lnb(int i);
+void print_all_lnb(void);
+const struct dvb_sat_lnb *dvb_sat_get_lnb(int i);
+int dvb_sat_set_parms(struct dvb_v5_fe_parms *parms);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif // _LIBSAT_H
diff --git a/lib/include/libdvbv5/dvb-scan.h b/lib/include/libdvbv5/dvb-scan.h
new file mode 100644
index 0000000..02bb471
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-scan.h
@@ -0,0 +1,113 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ */
+#ifndef _LIBSCAN_H
+#define _LIBSCAN_H
+
+#include <stdint.h>
+#include <linux/dvb/dmx.h>
+
+#include <libdvbv5/descriptors.h>
+
+#include <libdvbv5/dvb-sat.h>
+
+/* According with ISO/IEC 13818-1:2007 */
+
+#define MAX_TABLE_SIZE 1024 * 1024
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+struct dvb_entry;
+
+struct dvb_v5_descriptors_program {
+	struct dvb_table_pat_program *pat_pgm;
+	struct dvb_table_pmt *pmt;
+};
+
+struct dvb_v5_descriptors {
+	int verbose;
+	uint32_t delivery_system;
+
+	struct dvb_entry *entry;
+	unsigned num_entry;
+
+	struct dvb_table_pat *pat;
+	struct atsc_table_vct *vct;
+	struct dvb_v5_descriptors_program *program;
+	struct dvb_table_nit *nit;
+	struct dvb_table_sdt *sdt;
+
+	unsigned num_program;
+};
+
+int dvb_read_section(struct dvb_v5_fe_parms *parms, int dmx_fd, unsigned char tid, uint16_t pid, unsigned char **table,
+		unsigned timeout);
+
+int dvb_read_section_with_id(struct dvb_v5_fe_parms *parms, int dmx_fd, unsigned char tid, uint16_t pid, int id, uint8_t **table,
+		unsigned timeout);
+
+struct dvb_v5_descriptors *dvb_scan_alloc_handler_table(uint32_t delivery_system,
+						       int verbose);
+
+void dvb_scan_free_handler_table(struct dvb_v5_descriptors *dvb_scan_handler);
+
+struct dvb_v5_descriptors *dvb_get_ts_tables(struct dvb_v5_fe_parms *parms, int dmx_fd,
+					  uint32_t delivery_system,
+					  unsigned other_nit,
+					  unsigned timeout_multiply);
+void dvb_free_ts_tables(struct dvb_v5_descriptors *dvb_desc);
+
+typedef int (check_frontend_t)(void *args, struct dvb_v5_fe_parms *parms);
+
+struct dvb_v5_descriptors *dvb_scan_transponder(struct dvb_v5_fe_parms *parms,
+						struct dvb_entry *entry,
+						int dmx_fd,
+						check_frontend_t *check_frontend,
+						void *args,
+						unsigned other_nit,
+						unsigned timeout_multiply);
+
+int estimate_freq_shift(struct dvb_v5_fe_parms *parms);
+
+int new_freq_is_needed(struct dvb_entry *entry, struct dvb_entry *last_entry,
+		       uint32_t freq, enum dvb_sat_polarization pol, int shift);
+
+struct dvb_entry *dvb_scan_add_entry(struct dvb_v5_fe_parms *parms,
+				     struct dvb_entry *first_entry,
+			             struct dvb_entry *entry,
+			             uint32_t freq, uint32_t shift,
+			             enum dvb_sat_polarization pol);
+
+void dvb_add_scaned_transponders(struct dvb_v5_fe_parms *parms,
+				 struct dvb_v5_descriptors *dvb_scan_handler,
+				 struct dvb_entry *first_entry,
+				 struct dvb_entry *entry);
+
+void dvb_update_transponders(struct dvb_v5_fe_parms *parms,
+			     struct dvb_v5_descriptors *dvb_scan_handler,
+			     struct dvb_entry *first_entry,
+			     struct dvb_entry *entry);
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/dvb-v5-std.h b/lib/include/libdvbv5/dvb-v5-std.h
new file mode 100644
index 0000000..094ee12
--- /dev/null
+++ b/lib/include/libdvbv5/dvb-v5-std.h
@@ -0,0 +1,96 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ * Per-delivery system properties, according with the specs:
+ * 	http://linuxtv.org/downloads/v4l-dvb-apis/FE_GET_SET_PROPERTY.html
+ */
+#ifndef _DVB_V5_STD_H
+#define _DVB_V5_STD_H
+
+#include <stddef.h>
+#include "dvb-frontend.h"
+
+extern const unsigned int sys_dvbt_props[];
+extern const unsigned int sys_dvbt2_props[];
+extern const unsigned int sys_isdbt_props[];
+extern const unsigned int sys_atsc_props[];
+extern const unsigned int sys_atscmh_props[];
+extern const unsigned int sys_dvbc_annex_ac_props[];
+extern const unsigned int sys_dvbc_annex_b_props[];
+extern const unsigned int sys_dvbs_props[];
+extern const unsigned int sys_dvbs2_props[];
+extern const unsigned int sys_turbo_props[];
+extern const unsigned int sys_isdbs_props[];
+extern const unsigned int *dvb_v5_delivery_system[];
+extern const void *dvb_v5_attr_names[];
+
+/* User DTV codes, for internal usage */
+
+#define DTV_USER_COMMAND_START 256
+
+#define DTV_POLARIZATION        (DTV_USER_COMMAND_START + 0)
+#define DTV_VIDEO_PID           (DTV_USER_COMMAND_START + 1)
+#define DTV_AUDIO_PID           (DTV_USER_COMMAND_START + 2)
+#define DTV_SERVICE_ID          (DTV_USER_COMMAND_START + 3)
+#define DTV_CH_NAME             (DTV_USER_COMMAND_START + 4)
+#define DTV_VCHANNEL            (DTV_USER_COMMAND_START + 5)
+#define DTV_SAT_NUMBER          (DTV_USER_COMMAND_START + 6)
+#define DTV_DISEQC_WAIT         (DTV_USER_COMMAND_START + 7)
+#define DTV_DISEQC_LNB          (DTV_USER_COMMAND_START + 8)
+#define DTV_FREQ_BPF            (DTV_USER_COMMAND_START + 9)
+
+#define DTV_MAX_USER_COMMAND    DTV_FREQ_BPF
+
+/* For status and statistics */
+
+#define DTV_STATUS              (DTV_MAX_USER_COMMAND + 1)
+#define DTV_BER                 (DTV_MAX_USER_COMMAND + 2)
+#define DTV_PER                 (DTV_MAX_USER_COMMAND + 3)
+#define DTV_QUALITY             (DTV_MAX_USER_COMMAND + 4)
+#define DTV_PRE_BER		(DTV_MAX_USER_COMMAND + 5)
+
+#define DTV_MAX_STAT_COMMAND	DTV_PRE_BER
+
+#define DTV_USER_NAME_SIZE	(1 + DTV_MAX_STAT_COMMAND - DTV_USER_COMMAND_START)
+
+/* There are currently 8 stats provided on Kernelspace */
+#define DTV_NUM_KERNEL_STATS	8
+
+#define DTV_NUM_STATS_PROPS	(DTV_NUM_KERNEL_STATS + DTV_MAX_STAT_COMMAND - DTV_MAX_USER_COMMAND)
+
+enum dvb_sat_polarization {
+	POLARIZATION_OFF	= 0,
+	POLARIZATION_H		= 1,
+	POLARIZATION_V		= 2,
+	POLARIZATION_L		= 3,
+	POLARIZATION_R		= 4,
+};
+
+enum dvb_quality {
+	DVB_QUAL_UNKNOWN = 0,
+	DVB_QUAL_POOR,
+	DVB_QUAL_OK,
+	DVB_QUAL_GOOD,
+};
+
+extern const char *dvb_sat_pol_name[6];
+extern const char *dvb_user_name[DTV_USER_NAME_SIZE];
+extern const void *dvb_user_attr_names[];
+
+#endif
+
diff --git a/lib/include/libdvbv5/eit.h b/lib/include/libdvbv5/eit.h
new file mode 100644
index 0000000..e62ef56
--- /dev/null
+++ b/lib/include/libdvbv5/eit.h
@@ -0,0 +1,91 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _EIT_H
+#define _EIT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+#include <time.h>
+
+#include <libdvbv5/header.h>
+#include <libdvbv5/descriptors.h>
+
+#define DVB_TABLE_EIT        0x4E
+#define DVB_TABLE_EIT_OTHER  0x4F
+
+#define DVB_TABLE_EIT_SCHEDULE 0x50       /* - 0x5F */
+#define DVB_TABLE_EIT_SCHEDULE_OTHER 0x60 /* - 0x6F */
+
+#define DVB_TABLE_EIT_PID  0x12
+
+struct dvb_table_eit_event {
+	uint16_t event_id;
+	union {
+		uint16_t bitfield1; /* first 2 bytes are MJD, they need to be bswapped */
+		uint8_t dvbstart[5];
+	} __attribute__((packed));
+	uint8_t dvbduration[3];
+	union {
+		uint16_t bitfield2;
+		struct {
+			uint16_t section_length:12;
+			uint16_t free_CA_mode:1;
+			uint16_t running_status:3;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	struct dvb_desc *descriptor;
+	struct dvb_table_eit_event *next;
+	struct tm start;
+	uint32_t duration;
+	uint16_t service_id;
+} __attribute__((packed));
+
+struct dvb_table_eit {
+	struct dvb_table_header header;
+	uint16_t transport_id;
+	uint16_t network_id;
+	uint8_t  last_segment;
+	uint8_t  last_table_id;
+	struct dvb_table_eit_event *event;
+} __attribute__((packed));
+
+#define dvb_eit_event_foreach(_event, _eit) \
+	for( struct dvb_table_eit_event *_event = _eit->event; _event; _event = _event->next ) \
+
+struct dvb_v5_fe_parms;
+
+extern const char *dvb_eit_running_status_name[8];
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_table_eit_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void dvb_table_eit_free(struct dvb_table_eit *eit);
+void dvb_table_eit_print(struct dvb_v5_fe_parms *parms, struct dvb_table_eit *eit);
+void dvb_time(const uint8_t data[5], struct tm *tm);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/header.h b/lib/include/libdvbv5/header.h
new file mode 100644
index 0000000..c8cd466
--- /dev/null
+++ b/lib/include/libdvbv5/header.h
@@ -0,0 +1,81 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _HEADER_H
+#define _HEADER_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_ts_packet_header {
+	uint8_t  sync_byte;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t pid:13;
+			uint16_t transport_priority:1;
+			uint16_t payload_unit_start_indicator:1;
+			uint16_t transport_error_indicator:1;
+		} __attribute__((packed));
+	};
+	uint8_t continuity_counter:4;
+	uint8_t adaptation_field_control:2;
+	uint8_t transport_scrambling_control:2;
+
+	/* Only if adaptation_field_control > 1 */
+	uint8_t adaptation_field_length;
+} __attribute__((packed));
+
+struct dvb_table_header {
+	uint8_t  table_id;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t section_length:10;
+			uint8_t  zero:2;
+			uint8_t  one:2;
+			uint8_t  zero2:1;
+			uint8_t  syntax:1;
+		} __attribute__((packed));
+	};
+	uint16_t id;
+	uint8_t  current_next:1;
+	uint8_t  version:5;
+	uint8_t  one2:2;
+
+	uint8_t  section_id;
+	uint8_t  last_section;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+int  dvb_table_header_init (struct dvb_table_header *t);
+void dvb_table_header_print(struct dvb_v5_fe_parms *parms, const struct dvb_table_header *t);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/mgt.h b/lib/include/libdvbv5/mgt.h
new file mode 100644
index 0000000..442150a
--- /dev/null
+++ b/lib/include/libdvbv5/mgt.h
@@ -0,0 +1,80 @@
+/*
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _MGT_H
+#define _MGT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#include <libdvbv5/atsc_header.h>
+#include <libdvbv5/descriptors.h>
+
+#define ATSC_TABLE_MGT 0xC7
+
+struct atsc_table_mgt_table {
+	uint16_t type;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t pid:13;
+			uint16_t one:3;
+		} __attribute__((packed));
+	} __attribute__((packed));
+        uint8_t type_version:5;
+        uint8_t one2:3;
+        uint32_t size;
+	union {
+		uint16_t bitfield2;
+		struct {
+			uint16_t desc_length:12;
+			uint16_t one3:4;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	struct dvb_desc *descriptor;
+	struct atsc_table_mgt_table *next;
+} __attribute__((packed));
+
+struct atsc_table_mgt {
+	struct atsc_table_header header;
+        uint16_t tables;
+        struct atsc_table_mgt_table *table;
+	struct dvb_desc *descriptor;
+} __attribute__((packed));
+
+
+#define atsc_mgt_table_foreach( _tran, _mgt ) \
+  for( struct atsc_table_mgt_table *_tran = _mgt->table; _tran; _tran = _tran->next ) \
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void atsc_table_mgt_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void atsc_table_mgt_free(struct atsc_table_mgt *mgt);
+void atsc_table_mgt_print(struct dvb_v5_fe_parms *parms, struct atsc_table_mgt *mgt);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/mpeg_es.h b/lib/include/libdvbv5/mpeg_es.h
new file mode 100644
index 0000000..4c6a862
--- /dev/null
+++ b/lib/include/libdvbv5/mpeg_es.h
@@ -0,0 +1,109 @@
+/*
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _MPEG_ES_H
+#define _MPEG_ES_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#define DVB_MPEG_ES_PIC_START  0x00
+#define DVB_MPEG_ES_USER_DATA  0xb2
+#define DVB_MPEG_ES_SEQ_START  0xb3
+#define DVB_MPEG_ES_SEQ_EXT    0xb5
+#define DVB_MPEG_ES_GOP        0xb8
+#define DVB_MPEG_ES_SLICES     0x01 ... 0xaf
+
+struct dvb_mpeg_es_seq_start {
+	union {
+		uint32_t bitfield;
+		struct {
+			uint32_t  type:8;
+			uint32_t  sync:24;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	union {
+		uint32_t bitfield2;
+		struct {
+			uint32_t framerate:4;
+			uint32_t aspect:4;
+			uint32_t height:12;
+			uint32_t width:12;
+		} __attribute__((packed));
+	};
+	union {
+		uint32_t bitfield3;
+		struct {
+			uint32_t qm_nonintra:1;
+			uint32_t qm_intra:1;
+			uint32_t constrained:1;
+			uint32_t vbv:10; // Size of video buffer verifier = 16*1024*vbv buf size
+			uint32_t one:1;
+			uint32_t bitrate:18;
+		} __attribute__((packed));
+	};
+} __attribute__((packed));
+
+struct dvb_mpeg_es_pic_start {
+	union {
+		uint32_t bitfield;
+		struct {
+			uint32_t  type:8;
+			uint32_t  sync:24;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	union {
+		uint32_t bitfield2;
+		struct {
+			uint32_t dummy:3;
+			uint32_t vbv_delay:16;
+			uint32_t coding_type:3;
+			uint32_t temporal_ref:10;
+		} __attribute__((packed));
+	};
+} __attribute__((packed));
+
+enum dvb_mpeg_es_frame_t
+{
+	DVB_MPEG_ES_FRAME_UNKNOWN,
+	DVB_MPEG_ES_FRAME_I,
+	DVB_MPEG_ES_FRAME_P,
+	DVB_MPEG_ES_FRAME_B,
+	DVB_MPEG_ES_FRAME_D
+};
+extern const char *dvb_mpeg_es_frame_names[5];
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+int  dvb_mpeg_es_seq_start_init (const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_es_seq_start *seq_start);
+void dvb_mpeg_es_seq_start_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_es_seq_start *seq_start);
+
+int  dvb_mpeg_es_pic_start_init (const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_es_pic_start *pic_start);
+void dvb_mpeg_es_pic_start_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_es_pic_start *pic_start);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/mpeg_pes.h b/lib/include/libdvbv5/mpeg_pes.h
new file mode 100644
index 0000000..3a3f8e4
--- /dev/null
+++ b/lib/include/libdvbv5/mpeg_pes.h
@@ -0,0 +1,111 @@
+/*
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _MPEG_PES_H
+#define _MPEG_PES_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#define DVB_MPEG_PES  0x00001
+#define DVB_MPEG_PES_VIDEO  0xe0 ... 0xef
+
+#define DVB_MPEG_STREAM_MAP       0xBC
+#define DVB_MPEG_STREAM_PADDING   0xBE
+#define DVB_MPEG_STREAM_PRIVATE_2 0x5F
+#define DVB_MPEG_STREAM_ECM       0x70
+#define DVB_MPEG_STREAM_EMM       0x71
+#define DVB_MPEG_STREAM_DIRECTORY 0xFF
+#define DVB_MPEG_STREAM_DSMCC     0x7A
+#define DVB_MPEG_STREAM_H222E     0xF8
+
+struct ts_t {
+	uint8_t  one:1;
+	uint8_t  bits30:3;
+	uint8_t  tag:4;
+
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t  one1:1;
+			uint16_t  bits15:15;
+		} __attribute__((packed));
+	} __attribute__((packed));
+
+	union {
+		uint16_t bitfield2;
+		struct {
+			uint16_t  one2:1;
+			uint16_t  bits00:15;
+		} __attribute__((packed));
+	} __attribute__((packed));
+} __attribute__((packed));
+
+struct dvb_mpeg_pes_optional {
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t PES_extension:1;
+			uint16_t PES_CRC:1;
+			uint16_t additional_copy_info:1;
+			uint16_t DSM_trick_mode:1;
+			uint16_t ES_rate:1;
+			uint16_t ESCR:1;
+			uint16_t PTS_DTS:2;
+			uint16_t original_or_copy:1;
+			uint16_t copyright:1;
+			uint16_t data_alignment_indicator:1;
+			uint16_t PES_priority:1;
+			uint16_t PES_scrambling_control:2;
+			uint16_t two:2;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	uint8_t length;
+	uint64_t pts;
+	uint64_t dts;
+} __attribute__((packed));
+
+struct dvb_mpeg_pes {
+	union {
+		uint32_t bitfield;
+		struct {
+			uint32_t  stream_id:8;
+			uint32_t  sync:24;
+		} __attribute__((packed));
+	} __attribute__((packed));
+	uint16_t length;
+	struct dvb_mpeg_pes_optional optional[];
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_mpeg_pes_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void dvb_mpeg_pes_free(struct dvb_mpeg_pes *ts);
+void dvb_mpeg_pes_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_pes *ts);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/mpeg_ts.h b/lib/include/libdvbv5/mpeg_ts.h
new file mode 100644
index 0000000..de4fc3f
--- /dev/null
+++ b/lib/include/libdvbv5/mpeg_ts.h
@@ -0,0 +1,78 @@
+/*
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _MPEG_TS_H
+#define _MPEG_TS_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#define DVB_MPEG_TS  0x47
+
+struct dvb_mpeg_ts_adaption {
+	uint8_t length;
+	struct {
+		uint8_t extension:1;
+		uint8_t private_data:1;
+		uint8_t splicing_point:1;
+		uint8_t OPCR:1;
+		uint8_t PCR:1;
+		uint8_t priority:1;
+		uint8_t random_access:1;
+		uint8_t discontinued:1;
+	} __attribute__((packed));
+	uint8_t data[];
+} __attribute__((packed));
+
+struct dvb_mpeg_ts {
+	uint8_t sync_byte; // DVB_MPEG_TS
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t pid:13;
+			uint16_t priority:1;
+			uint16_t payload_start:1;
+			uint16_t tei:1;
+		} __attribute__((packed));
+	};
+	struct {
+		uint8_t continuity_counter:4;
+		uint8_t adaptation_field:2;
+		uint8_t scrambling:2;
+	} __attribute__((packed));
+	struct dvb_mpeg_ts_adaption adaption[];
+
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+ssize_t dvb_mpeg_ts_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void dvb_mpeg_ts_free(struct dvb_mpeg_ts *ts);
+void dvb_mpeg_ts_print(struct dvb_v5_fe_parms *parms, struct dvb_mpeg_ts *ts);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/nit.h b/lib/include/libdvbv5/nit.h
new file mode 100644
index 0000000..09fe596
--- /dev/null
+++ b/lib/include/libdvbv5/nit.h
@@ -0,0 +1,103 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _NIT_H
+#define _NIT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#include <libdvbv5/header.h>
+#include <libdvbv5/descriptors.h>
+
+#define DVB_TABLE_NIT      0x40
+#define DVB_TABLE_NIT2     0x41
+#define DVB_TABLE_NIT_PID  0x10
+
+union dvb_table_nit_transport_header {
+	uint16_t bitfield;
+	struct {
+		uint16_t transport_length:12;
+		uint16_t reserved:4;
+	} __attribute__((packed));
+} __attribute__((packed));
+
+struct dvb_table_nit_transport {
+	uint16_t transport_id;
+	uint16_t network_id;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t section_length:12;
+			uint16_t reserved:4;
+		} __attribute__((packed));
+	};
+	struct dvb_desc *descriptor;
+	struct dvb_table_nit_transport *next;
+} __attribute__((packed));
+
+struct dvb_table_nit {
+	struct dvb_table_header header;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t desc_length:12;
+			uint16_t reserved:4;
+		} __attribute__((packed));
+	};
+	struct dvb_desc *descriptor;
+	struct dvb_table_nit_transport *transport;
+} __attribute__((packed));
+
+typedef void nit_handler_callback_t(struct dvb_table_nit *nit,
+				    struct dvb_desc *desc,
+				    void *priv);
+
+typedef void nit_tran_handler_callback_t(struct dvb_table_nit *nit,
+					 struct dvb_table_nit_transport *tran,
+					 struct dvb_desc *desc,
+					 void *priv);
+
+#define dvb_nit_transport_foreach( _tran, _nit ) \
+  for (struct dvb_table_nit_transport *_tran = _nit->transport; _tran; _tran = _tran->next) \
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_table_nit_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void dvb_table_nit_free(struct dvb_table_nit *nit);
+void dvb_table_nit_print(struct dvb_v5_fe_parms *parms, struct dvb_table_nit *nit);
+
+void nit_descriptor_handler(struct dvb_v5_fe_parms *parms,
+			    struct dvb_table_nit *nit,
+			    enum descriptors descriptor,
+			    nit_handler_callback_t *call_nit,
+			    nit_tran_handler_callback_t *call_tran,
+			    void *priv);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/pat.h b/lib/include/libdvbv5/pat.h
new file mode 100644
index 0000000..899815c
--- /dev/null
+++ b/lib/include/libdvbv5/pat.h
@@ -0,0 +1,68 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _PAT_H
+#define _PAT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#include <libdvbv5/header.h>
+
+#define DVB_TABLE_PAT      0
+#define DVB_TABLE_PAT_PID  0
+
+struct dvb_table_pat_program {
+	uint16_t service_id;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t pid:13;
+			uint8_t  reserved:3;
+		} __attribute__((packed));
+	};
+	struct dvb_table_pat_program *next;
+} __attribute__((packed));
+
+struct dvb_table_pat {
+	struct dvb_table_header header;
+	uint16_t programs;
+	struct dvb_table_pat_program *program;
+} __attribute__((packed));
+
+#define dvb_pat_program_foreach(_pgm, _pat) \
+	for (struct dvb_table_pat_program *_pgm = _pat->program; _pgm; _pgm = _pgm->next) \
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_table_pat_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void dvb_table_pat_free(struct dvb_table_pat *pat);
+void dvb_table_pat_print(struct dvb_v5_fe_parms *parms, struct dvb_table_pat *t);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/pmt.h b/lib/include/libdvbv5/pmt.h
new file mode 100644
index 0000000..e1d44cb
--- /dev/null
+++ b/lib/include/libdvbv5/pmt.h
@@ -0,0 +1,119 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _PMT_H
+#define _PMT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#include <libdvbv5/header.h>
+
+#define DVB_TABLE_PMT      2
+
+enum dvb_streams {
+	stream_reserved0	= 0x00, // ITU-T | ISO/IEC Reserved
+	stream_video		= 0x01, // ISO/IEC 11172 Video
+	stream_video_h262	= 0x02, // ITU-T Rec. H.262 | ISO/IEC 13818-2 Video or ISO/IEC 11172-2 constrained parameter video stream
+	stream_audio		= 0x03, // ISO/IEC 11172 Audio
+	stream_audio_13818_3	= 0x04, // ISO/IEC 13818-3 Audio
+	stream_private_sections	= 0x05, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 private_sections
+	stream_private_data	= 0x06, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 PES packets containing private data
+	stream_mheg		= 0x07, // ISO/IEC 13522 MHEG
+	stream_h222		= 0x08, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 Annex A DSM-CC
+	stream_h222_1		= 0x09, // ITU-T Rec. H.222.1
+	stream_13818_6_A	= 0x0A, // ISO/IEC 13818-6 type A
+	stream_13818_6_B	= 0x0B, // ISO/IEC 13818-6 type B
+	stream_13818_6_C	= 0x0C, // ISO/IEC 13818-6 type C
+	stream_13818_6_D	= 0x0D, // ISO/IEC 13818-6 type D
+	stream_h222_aux		= 0x0E, // ITU-T Rec. H.222.0 | ISO/IEC 13818-1 auxiliary
+	stream_audio_adts	= 0x0F, // ISO/IEC 13818-7 Audio with ADTS transport syntax
+	stream_video_14496_2	= 0x10, // ISO/IEC 14496-2 Visual
+	stream_audio_latm	= 0x11, // ISO/IEC 14496-3 Audio with the LATM transport syntax as defined in ISO/IEC 14496-3 / AMD 1
+	stream_14496_1_pes	= 0x12, // ISO/IEC 14496-1 SL-packetized stream or FlexMux stream carried in PES packets
+	stream_14496_1_iso	= 0x13, // ISO/IEC 14496-1 SL-packetized stream or FlexMux stream carried in ISO/IEC14496_sections.
+	stream_download		= 0x14, // ISO/IEC 13818-6 Synchronized Download Protocol
+	stream_reserved		= 0x15, // - 0x7F, ITU-T Rec. H.222.0 | ISO/IEC 13818-1 Reserved
+	stream_private		= 0x80  // - 0xFF, User Private
+};
+
+extern const char *pmt_stream_name[];
+
+struct dvb_table_pmt_stream {
+	uint8_t type;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t elementary_pid:13;
+			uint16_t reserved:3;
+		};
+	};
+	union {
+		uint16_t bitfield2;
+		struct {
+			uint16_t section_length:10;
+			uint16_t zero:2;
+			uint16_t reserved2:4;
+		};
+	};
+	struct dvb_desc *descriptor;
+	struct dvb_table_pmt_stream *next;
+} __attribute__((packed));
+
+struct dvb_table_pmt {
+	struct dvb_table_header header;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t pcr_pid:13;
+			uint16_t reserved2:3;
+		};
+	};
+
+	union {
+		uint16_t bitfield2;
+		struct {
+			uint16_t prog_length:10;
+			uint16_t zero3:2;
+			uint16_t reserved3:4;
+		};
+	};
+	struct dvb_table_pmt_stream *stream;
+} __attribute__((packed));
+
+#define dvb_pmt_stream_foreach(_stream, _pmt) \
+  for (struct dvb_table_pmt_stream *_stream = _pmt->stream; _stream; _stream = _stream->next) \
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_table_pmt_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void dvb_table_pmt_free(struct dvb_table_pmt *pmt);
+void dvb_table_pmt_print(struct dvb_v5_fe_parms *parms, const struct dvb_table_pmt *pmt);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/sdt.h b/lib/include/libdvbv5/sdt.h
new file mode 100644
index 0000000..77ec5b1
--- /dev/null
+++ b/lib/include/libdvbv5/sdt.h
@@ -0,0 +1,76 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _SDT_H
+#define _SDT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#include <libdvbv5/header.h>
+#include <libdvbv5/descriptors.h>
+
+#define DVB_TABLE_SDT      0x42
+#define DVB_TABLE_SDT2     0x46
+#define DVB_TABLE_SDT_PID  0x11
+
+struct dvb_table_sdt_service {
+	uint16_t service_id;
+	uint8_t EIT_present_following:1;
+	uint8_t EIT_schedule:1;
+	uint8_t reserved:6;
+	union {
+		uint16_t bitfield;
+		struct {
+			uint16_t section_length:12;
+			uint16_t free_CA_mode:1;
+			uint16_t running_status:3;
+		} __attribute__((packed));
+	};
+	struct dvb_desc *descriptor;
+	struct dvb_table_sdt_service *next;
+} __attribute__((packed));
+
+struct dvb_table_sdt {
+	struct dvb_table_header header;
+	uint16_t network_id;
+	uint8_t  reserved;
+	struct dvb_table_sdt_service *service;
+} __attribute__((packed));
+
+#define dvb_sdt_service_foreach(_service, _sdt) \
+	for (struct dvb_table_sdt_service *_service = _sdt->service; _service; _service = _service->next ) \
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void dvb_table_sdt_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void dvb_table_sdt_free(struct dvb_table_sdt *sdt);
+void dvb_table_sdt_print(struct dvb_v5_fe_parms *parms, struct dvb_table_sdt *sdt);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/libdvbv5/vct.h b/lib/include/libdvbv5/vct.h
new file mode 100644
index 0000000..6935f30
--- /dev/null
+++ b/lib/include/libdvbv5/vct.h
@@ -0,0 +1,127 @@
+/*
+ * Copyright (c) 2013 - Mauro Carvalho Chehab <m.chehab@samsung.com>
+ * Copyright (c) 2013 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _VCT_H
+#define _VCT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+#include <libdvbv5/atsc_header.h>
+#include <libdvbv5/descriptors.h>
+
+#define ATSC_TABLE_TVCT     0xc8
+#define ATSC_TABLE_CVCT     0xc9
+#define ATSC_TABLE_VCT_PID  0x1ffb
+
+struct atsc_table_vct_channel {
+	uint16_t	__short_name[7];
+
+	union {
+		uint32_t bitfield1;
+		struct {
+			uint32_t	modulation_mode:8;
+			uint32_t	minor_channel_number:10;
+			uint32_t	major_channel_number:10;
+			uint32_t	reserved1:4;
+		} __attribute__((packed));
+	} __attribute__((packed));
+
+	uint32_t	carrier_frequency;
+	uint16_t	channel_tsid;
+	uint16_t	program_number;
+	union {
+		uint16_t bitfield2;
+		struct {
+			uint16_t	service_type:6;
+			uint16_t	reserved2:3;
+			uint16_t	hide_guide:1;
+			uint16_t	out_of_band:1;	/* CVCT only */
+			uint16_t	path_select:1;	/* CVCT only */
+			uint16_t	hidden:1;
+			uint16_t	access_controlled:1;
+			uint16_t	ETM_location:2;
+
+		} __attribute__((packed));
+	} __attribute__((packed));
+
+	uint16_t source_id;
+	union {
+		uint16_t bitfield3;
+		struct {
+			uint16_t descriptors_length:10;
+			uint16_t reserved3:6;
+		} __attribute__((packed));
+	} __attribute__((packed));
+
+	/*
+	 * Everything after descriptor (including it) won't be bit-mapped
+	 * to the data parsed from the MPEG TS. So, metadata are added there
+	 */
+	struct dvb_desc *descriptor;
+	struct atsc_table_vct_channel *next;
+
+	/* The channel_short_name is converted to locale charset by vct.c */
+
+	char short_name[32];
+} __attribute__((packed));
+
+struct atsc_table_vct {
+	struct atsc_table_header header;
+
+	uint8_t ATSC_protocol_version;
+	uint8_t num_channels_in_section;
+
+	/*
+	 * Everything after descriptor (including it) won't be bit-mapped
+	 * to the data parsed from the MPEG TS. So, metadata are added there
+	 */
+	struct atsc_table_vct_channel *channel;
+	struct dvb_desc *descriptor;
+} __attribute__((packed));
+
+
+union atsc_table_vct_descriptor_length {
+	uint16_t bitfield;
+	struct {
+		uint16_t descriptor_length:10;
+		uint16_t reserved:6;
+	};
+};
+
+#define atsc_vct_channel_foreach(_channel, _vct) \
+	for (struct atsc_table_vct_channel *_channel = _vct->channel; _channel; _channel = _channel->next) \
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void atsc_table_vct_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length);
+void atsc_table_vct_free(struct atsc_table_vct *vct);
+void atsc_table_vct_print(struct dvb_v5_fe_parms *parms, struct atsc_table_vct *vct);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/libdvbv5/Makefile.am b/lib/libdvbv5/Makefile.am
index 6771d24..ddf9ea1 100644
--- a/lib/libdvbv5/Makefile.am
+++ b/lib/libdvbv5/Makefile.am
@@ -1,8 +1,50 @@
 if WITH_LIBDVBV5
 lib_LTLIBRARIES = libdvbv5.la
-include_HEADERS = ../include/dvb-demux.h ../include/dvb-v5-std.h \
-  ../include/dvb-file.h ../include/dvb-frontend.h ../include/dvb-fe.h \
-  ../include/dvb-sat.h ../include/dvb-scan.h
+
+otherincludedir = $(includedir)/libdvbv5
+otherinclude_HEADERS = \
+	../include/libdvbv5/dvb-demux.h \
+	../include/libdvbv5/dvb-v5-std.h \
+	../include/libdvbv5/dvb-file.h \
+	../include/libdvbv5/dvb-frontend.h \
+	../include/libdvbv5/dvb-fe.h \
+	../include/libdvbv5/dvb-sat.h \
+	../include/libdvbv5/dvb-scan.h \
+	../include/libdvbv5/dvb-log.h \
+	../include/libdvbv5/descriptors.h \
+	../include/libdvbv5/header.h \
+	../include/libdvbv5/pat.h \
+	../include/libdvbv5/pmt.h \
+	../include/libdvbv5/desc_language.h \
+	../include/libdvbv5/desc_network_name.h \
+	../include/libdvbv5/desc_cable_delivery.h \
+	../include/libdvbv5/desc_sat.h \
+	../include/libdvbv5/desc_terrestrial_delivery.h \
+	../include/libdvbv5/desc_t2_delivery.h \
+	../include/libdvbv5/desc_service.h \
+	../include/libdvbv5/desc_frequency_list.h \
+	../include/libdvbv5/desc_service_list.h \
+	../include/libdvbv5/desc_event_short.h \
+	../include/libdvbv5/desc_event_extended.h \
+	../include/libdvbv5/desc_atsc_service_location.h \
+	../include/libdvbv5/desc_hierarchy.h \
+	../include/libdvbv5/desc_extension.h \
+	../include/libdvbv5/desc_isdbt_delivery.h \
+	../include/libdvbv5/desc_logical_channel.h \
+	../include/libdvbv5/desc_ts_info.h \
+	../include/libdvbv5/desc_partial_reception.h \
+	../include/libdvbv5/nit.h \
+	../include/libdvbv5/sdt.h \
+	../include/libdvbv5/vct.h \
+	../include/libdvbv5/atsc_header.h \
+	../include/libdvbv5/mgt.h \
+	../include/libdvbv5/eit.h \
+	../include/libdvbv5/atsc_eit.h \
+	../include/libdvbv5/desc_service_location.h \
+	../include/libdvbv5/mpeg_ts.h \
+	../include/libdvbv5/mpeg_pes.h \
+	../include/libdvbv5/mpeg_es.h
+
 pkgconfig_DATA = libdvbv5.pc
 LIBDVBV5_VERSION = -version-info 0
 else
@@ -10,54 +52,54 @@ noinst_LTLIBRARIES = libdvbv5.la
 endif
 
 libdvbv5_la_SOURCES = \
-  dvb-demux.c ../include/dvb-demux.h \
-  dvb-fe.c ../include/dvb-fe.h \
-  dvb-log.c ../include/dvb-log.h \
-  dvb-file.c ../include/dvb-file.h \
-  ../include/dvb-frontend.h \
-  dvb-v5.h dvb-v5.c \
-  ../include/dvb-v5-std.h dvb-v5-std.c \
-  dvb-legacy-channel-format.c \
-  dvb-zap-format.c \
-  dvb-sat.c ../include/dvb-sat.h \
-  dvb-scan.c ../include/dvb-scan.h \
-  parse_string.c parse_string.h \
-  crc32.c crc32.h \
-  descriptors.c ../include/descriptors.h \
-  descriptors/header.c ../include/descriptors/header.h \
-  descriptors/pat.c  ../include/descriptors/pat.h \
-  descriptors/pmt.c  ../include/descriptors/pmt.h \
-  descriptors/desc_language.c  ../include/descriptors/desc_language.h \
-  descriptors/desc_network_name.c  ../include/descriptors/desc_network_name.h \
-  descriptors/desc_cable_delivery.c  ../include/descriptors/desc_cable_delivery.h \
-  descriptors/desc_sat.c  ../include/descriptors/desc_sat.h \
-  descriptors/desc_terrestrial_delivery.c  ../include/descriptors/desc_terrestrial_delivery.h \
-  descriptors/desc_t2_delivery.c  ../include/descriptors/desc_t2_delivery.h \
-  descriptors/desc_service.c  ../include/descriptors/desc_service.h \
-  descriptors/desc_frequency_list.c  ../include/descriptors/desc_frequency_list.h \
-  descriptors/desc_service_list.c  ../include/descriptors/desc_service_list.h \
-  descriptors/desc_event_short.c  ../include/descriptors/desc_event_short.h \
-  descriptors/desc_event_extended.c  ../include/descriptors/desc_event_extended.h \
-  descriptors/desc_atsc_service_location.c ../include/descriptors/desc_atsc_service_location.h \
-  descriptors/desc_hierarchy.c  ../include/descriptors/desc_hierarchy.h \
-  descriptors/desc_extension.c  ../include/descriptors/desc_extension.h \
-  descriptors/desc_isdbt_delivery.c  ../include/descriptors/desc_isdbt_delivery.h \
-  descriptors/desc_logical_channel.c  ../include/descriptors/desc_logical_channel.h \
-  descriptors/desc_ts_info.c  ../include/descriptors/desc_ts_info.h \
-  descriptors/desc_partial_reception.c  ../include/descriptors/desc_partial_reception.h \
-  descriptors/nit.c  ../include/descriptors/nit.h \
-  descriptors/sdt.c  ../include/descriptors/sdt.h \
-  descriptors/vct.c  ../include/descriptors/vct.h \
-  descriptors/atsc_header.c ../include/descriptors/atsc_header.h \
-  descriptors/mgt.c  ../include/descriptors/mgt.h \
-  descriptors/eit.c  ../include/descriptors/eit.h \
-  descriptors/atsc_eit.c  ../include/descriptors/atsc_eit.h \
-  descriptors/desc_service_location.c  ../include/descriptors/desc_service_location.h \
-  descriptors/mpeg_ts.c  ../include/descriptors/mpeg_ts.h \
-  descriptors/mpeg_pes.c  ../include/descriptors/mpeg_pes.h \
-  descriptors/mpeg_es.c  ../include/descriptors/mpeg_es.h
+	crc32.c crc32.h \
+	../include/dvb-frontend.h \
+	dvb-legacy-channel-format.c \
+	dvb-zap-format.c \
+	dvb-v5.c	dvb-v5.h \
+	parse_string.c	parse_string.h \
+	dvb-demux.c	../include/dvb-demux.h \
+	dvb-fe.c	../include/dvb-fe.h \
+	dvb-log.c	../include/dvb-log.h \
+	dvb-file.c	../include/dvb-file.h \
+	dvb-v5-std.c	../include/dvb-v5-std.h \
+	dvb-sat.c	../include/dvb-sat.h \
+	dvb-scan.c	../include/dvb-scan.h \
+	descriptors.c	../include/descriptors.h \
+	descriptors/header.c		../include/libdvbv5/header.h \
+	descriptors/atsc_header.c	../include/libdvbv5/atsc_header.h \
+	descriptors/pat.c		../include/libdvbv5/pat.h \
+	descriptors/pmt.c		../include/libdvbv5/pmt.h \
+	descriptors/nit.c		../include/libdvbv5/nit.h \
+	descriptors/sdt.c		../include/libdvbv5/sdt.h \
+	descriptors/vct.c		../include/libdvbv5/vct.h \
+	descriptors/mgt.c		../include/libdvbv5/mgt.h \
+	descriptors/eit.c		../include/libdvbv5/eit.h \
+	descriptors/atsc_eit.c		../include/libdvbv5/atsc_eit.h \
+	descriptors/desc_language.c		../include/libdvbv5/desc_language.h \
+	descriptors/desc_network_name.c		../include/libdvbv5/desc_network_name.h \
+	descriptors/desc_cable_delivery.c	../include/libdvbv5/desc_cable_delivery.h \
+	descriptors/desc_sat.c			../include/libdvbv5/desc_sat.h \
+	descriptors/desc_terrestrial_delivery.c  ../include/libdvbv5/desc_terrestrial_delivery.h \
+	descriptors/desc_t2_delivery.c		../include/libdvbv5/desc_t2_delivery.h \
+	descriptors/desc_service.c		../include/libdvbv5/desc_service.h \
+	descriptors/desc_frequency_list.c	../include/libdvbv5/desc_frequency_list.h \
+	descriptors/desc_service_list.c		../include/libdvbv5/desc_service_list.h \
+	descriptors/desc_event_short.c		../include/libdvbv5/desc_event_short.h \
+	descriptors/desc_event_extended.c	../include/libdvbv5/desc_event_extended.h \
+	descriptors/desc_atsc_service_location.c ../include/libdvbv5/desc_atsc_service_location.h \
+	descriptors/desc_hierarchy.c		../include/libdvbv5/desc_hierarchy.h \
+	descriptors/desc_extension.c		../include/libdvbv5/desc_extension.h \
+	descriptors/desc_isdbt_delivery.c	../include/libdvbv5/desc_isdbt_delivery.h \
+	descriptors/desc_logical_channel.c	../include/libdvbv5/desc_logical_channel.h \
+	descriptors/desc_ts_info.c		../include/libdvbv5/desc_ts_info.h \
+	descriptors/desc_partial_reception.c	../include/libdvbv5/desc_partial_reception.h \
+	descriptors/desc_service_location.c	../include/libdvbv5/desc_service_location.h \
+	descriptors/mpeg_ts.c		../include/libdvbv5/mpeg_ts.h \
+	descriptors/mpeg_pes.c		../include/libdvbv5/mpeg_pes.h \
+	descriptors/mpeg_es.c		../include/libdvbv5/mpeg_es.h
 
-libdvbv5_la_CPPFLAGS = $(ENFORCE_LIBDVBV5_STATIC)
+libdvbv5_la_CPPFLAGS = -I../.. $(ENFORCE_LIBDVBV5_STATIC)
 libdvbv5_la_LDFLAGS = $(LIBDVBV5_VERSION) $(ENFORCE_LIBDVBV5_STATIC) -lm
 libdvbv5_la_LIBADD = $(LTLIBICONV)
 
diff --git a/lib/libdvbv5/descriptors.c b/lib/libdvbv5/descriptors.c
index f46aa4a..a2176b4 100644
--- a/lib/libdvbv5/descriptors.c
+++ b/lib/libdvbv5/descriptors.c
@@ -22,39 +22,39 @@
 #include <stdlib.h>
 #include <stdio.h>
 
-#include "descriptors.h"
-#include "dvb-fe.h"
-#include "dvb-scan.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
+#include <libdvbv5/dvb-scan.h>
 #include "parse_string.h"
-#include "dvb-frontend.h"
-#include "dvb-v5-std.h"
-#include "dvb-log.h"
+#include <libdvbv5/dvb-frontend.h>
+#include <libdvbv5/dvb-v5-std.h>
+#include <libdvbv5/dvb-log.h>
 
-#include "descriptors/pat.h"
-#include "descriptors/pmt.h"
-#include "descriptors/nit.h"
-#include "descriptors/sdt.h"
-#include "descriptors/eit.h"
-#include "descriptors/vct.h"
-#include "descriptors/mgt.h"
-#include "descriptors/atsc_eit.h"
-#include "descriptors/desc_language.h"
-#include "descriptors/desc_network_name.h"
-#include "descriptors/desc_cable_delivery.h"
-#include "descriptors/desc_sat.h"
-#include "descriptors/desc_terrestrial_delivery.h"
-#include "descriptors/desc_isdbt_delivery.h"
-#include "descriptors/desc_service.h"
-#include "descriptors/desc_service_list.h"
-#include "descriptors/desc_frequency_list.h"
-#include "descriptors/desc_event_short.h"
-#include "descriptors/desc_event_extended.h"
-#include "descriptors/desc_atsc_service_location.h"
-#include "descriptors/desc_hierarchy.h"
-#include "descriptors/desc_ts_info.h"
-#include "descriptors/desc_logical_channel.h"
-#include "descriptors/desc_partial_reception.h"
-#include "descriptors/desc_extension.h"
+#include <libdvbv5/pat.h>
+#include <libdvbv5/pmt.h>
+#include <libdvbv5/nit.h>
+#include <libdvbv5/sdt.h>
+#include <libdvbv5/eit.h>
+#include <libdvbv5/vct.h>
+#include <libdvbv5/mgt.h>
+#include <libdvbv5/atsc_eit.h>
+#include <libdvbv5/desc_language.h>
+#include <libdvbv5/desc_network_name.h>
+#include <libdvbv5/desc_cable_delivery.h>
+#include <libdvbv5/desc_sat.h>
+#include <libdvbv5/desc_terrestrial_delivery.h>
+#include <libdvbv5/desc_isdbt_delivery.h>
+#include <libdvbv5/desc_service.h>
+#include <libdvbv5/desc_service_list.h>
+#include <libdvbv5/desc_frequency_list.h>
+#include <libdvbv5/desc_event_short.h>
+#include <libdvbv5/desc_event_extended.h>
+#include <libdvbv5/desc_atsc_service_location.h>
+#include <libdvbv5/desc_hierarchy.h>
+#include <libdvbv5/desc_ts_info.h>
+#include <libdvbv5/desc_logical_channel.h>
+#include <libdvbv5/desc_partial_reception.h>
+#include <libdvbv5/desc_extension.h>
 
 ssize_t dvb_desc_init(const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/atsc_eit.c b/lib/libdvbv5/descriptors/atsc_eit.c
index 8d3791d..d0225f4 100644
--- a/lib/libdvbv5/descriptors/atsc_eit.c
+++ b/lib/libdvbv5/descriptors/atsc_eit.c
@@ -18,8 +18,8 @@
  *
  */
 
-#include "descriptors/atsc_eit.h"
-#include "dvb-fe.h"
+#include <libdvbv5/atsc_eit.h>
+#include <libdvbv5/dvb-fe.h>
 
 void atsc_table_eit_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length)
 {
diff --git a/lib/libdvbv5/descriptors/atsc_header.c b/lib/libdvbv5/descriptors/atsc_header.c
index ed152ce..06d1bb1 100644
--- a/lib/libdvbv5/descriptors/atsc_header.c
+++ b/lib/libdvbv5/descriptors/atsc_header.c
@@ -18,9 +18,9 @@
  *
  */
 
-#include "descriptors/atsc_header.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/atsc_header.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 int atsc_table_header_init(struct atsc_table_header *t)
 {
diff --git a/lib/libdvbv5/descriptors/desc_atsc_service_location.c b/lib/libdvbv5/descriptors/desc_atsc_service_location.c
index 5779ff0..5e3f461 100644
--- a/lib/libdvbv5/descriptors/desc_atsc_service_location.c
+++ b/lib/libdvbv5/descriptors/desc_atsc_service_location.c
@@ -18,9 +18,9 @@
  *
  */
 
-#include "descriptors.h"
-#include "descriptors/desc_atsc_service_location.h"
-#include "dvb-fe.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/desc_atsc_service_location.h>
+#include <libdvbv5/dvb-fe.h>
 
 void atsc_desc_service_location_init(struct dvb_v5_fe_parms *parms,
 				     const uint8_t *buf, struct dvb_desc *desc)
@@ -84,4 +84,4 @@ void atsc_desc_service_location_free(struct dvb_desc *desc)
 
 	if (s_loc->elementary)
 		free(s_loc->elementary);
-}
\ No newline at end of file
+}
diff --git a/lib/libdvbv5/descriptors/desc_cable_delivery.c b/lib/libdvbv5/descriptors/desc_cable_delivery.c
index 18c5774..0aa7719 100644
--- a/lib/libdvbv5/descriptors/desc_cable_delivery.c
+++ b/lib/libdvbv5/descriptors/desc_cable_delivery.c
@@ -20,9 +20,9 @@
  * Described at ETSI EN 300 468 V1.11.1 (2010-04)
  */
 
-#include "descriptors/desc_cable_delivery.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_cable_delivery.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_cable_delivery_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_event_extended.c b/lib/libdvbv5/descriptors/desc_event_extended.c
index 0a92b3c..bb05951 100644
--- a/lib/libdvbv5/descriptors/desc_event_extended.c
+++ b/lib/libdvbv5/descriptors/desc_event_extended.c
@@ -19,10 +19,10 @@
  *
  */
 
-#include "descriptors/desc_event_extended.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
-#include "parse_string.h"
+#include <libdvbv5/desc_event_extended.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
+#include <parse_string.h>
 
 void dvb_desc_event_extended_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_event_short.c b/lib/libdvbv5/descriptors/desc_event_short.c
index 26f42e9..1978beb 100644
--- a/lib/libdvbv5/descriptors/desc_event_short.c
+++ b/lib/libdvbv5/descriptors/desc_event_short.c
@@ -19,10 +19,10 @@
  *
  */
 
-#include "descriptors/desc_event_short.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
-#include "parse_string.h"
+#include <libdvbv5/desc_event_short.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
+#include <parse_string.h>
 
 void dvb_desc_event_short_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_extension.c b/lib/libdvbv5/descriptors/desc_extension.c
index 63715aa..400372f 100644
--- a/lib/libdvbv5/descriptors/desc_extension.c
+++ b/lib/libdvbv5/descriptors/desc_extension.c
@@ -18,10 +18,10 @@
  *
  */
 
-#include "descriptors.h"
-#include "descriptors/desc_extension.h"
-#include "descriptors/desc_t2_delivery.h"
-#include "dvb-fe.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/desc_extension.h>
+#include <libdvbv5/desc_t2_delivery.h>
+#include <libdvbv5/dvb-fe.h>
 
 const struct dvb_ext_descriptor dvb_ext_descriptors[] = {
 	[0 ...255 ] = {
diff --git a/lib/libdvbv5/descriptors/desc_frequency_list.c b/lib/libdvbv5/descriptors/desc_frequency_list.c
index 824b172..447e412 100644
--- a/lib/libdvbv5/descriptors/desc_frequency_list.c
+++ b/lib/libdvbv5/descriptors/desc_frequency_list.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/desc_frequency_list.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_frequency_list.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_frequency_list_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_hierarchy.c b/lib/libdvbv5/descriptors/desc_hierarchy.c
index 1de9806..a591ed8 100644
--- a/lib/libdvbv5/descriptors/desc_hierarchy.c
+++ b/lib/libdvbv5/descriptors/desc_hierarchy.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/desc_hierarchy.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_hierarchy.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_hierarchy_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_isdbt_delivery.c b/lib/libdvbv5/descriptors/desc_isdbt_delivery.c
index 4257e79..df04580 100644
--- a/lib/libdvbv5/descriptors/desc_isdbt_delivery.c
+++ b/lib/libdvbv5/descriptors/desc_isdbt_delivery.c
@@ -18,9 +18,9 @@
  *
  */
 
-#include "descriptors.h"
-#include "descriptors/desc_isdbt_delivery.h"
-#include "dvb-fe.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/desc_isdbt_delivery.h>
+#include <libdvbv5/dvb-fe.h>
 
 void isdbt_desc_delivery_init(struct dvb_v5_fe_parms *parms,
 			      const uint8_t *buf, struct dvb_desc *desc)
@@ -100,4 +100,4 @@ void isdbt_desc_delivery_free(struct dvb_desc *desc)
 	const struct isdbt_desc_terrestrial_delivery_system *d = (const void *) desc;
 
 	free(d->frequency);
-}
\ No newline at end of file
+}
diff --git a/lib/libdvbv5/descriptors/desc_language.c b/lib/libdvbv5/descriptors/desc_language.c
index d0c8acc..0b47371 100644
--- a/lib/libdvbv5/descriptors/desc_language.c
+++ b/lib/libdvbv5/descriptors/desc_language.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/desc_language.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_language.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_language_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_logical_channel.c b/lib/libdvbv5/descriptors/desc_logical_channel.c
index 5eb5855..d3edbd9 100644
--- a/lib/libdvbv5/descriptors/desc_logical_channel.c
+++ b/lib/libdvbv5/descriptors/desc_logical_channel.c
@@ -22,10 +22,10 @@
  *	http://tdt.telecom.pt/recursos/apresentacoes/Signalling Specifications for DTT deployment in Portugal.pdf
  */
 
-#include "descriptors.h"
-#include "descriptors/desc_logical_channel.h"
-#include "dvb-fe.h"
-#include "parse_string.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/desc_logical_channel.h>
+#include <libdvbv5/dvb-fe.h>
+#include <parse_string.h>
 
 void dvb_desc_logical_channel_init(struct dvb_v5_fe_parms *parms,
 			      const uint8_t *buf, struct dvb_desc *desc)
diff --git a/lib/libdvbv5/descriptors/desc_network_name.c b/lib/libdvbv5/descriptors/desc_network_name.c
index 8b907d7..260856e 100644
--- a/lib/libdvbv5/descriptors/desc_network_name.c
+++ b/lib/libdvbv5/descriptors/desc_network_name.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/desc_network_name.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_network_name.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 #include "parse_string.h"
 
 void dvb_desc_network_name_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
diff --git a/lib/libdvbv5/descriptors/desc_partial_reception.c b/lib/libdvbv5/descriptors/desc_partial_reception.c
index 614a256..58d3fe6 100644
--- a/lib/libdvbv5/descriptors/desc_partial_reception.c
+++ b/lib/libdvbv5/descriptors/desc_partial_reception.c
@@ -19,10 +19,10 @@
  * Described on ARIB STD-B10 as Partial reception descriptor
  */
 
-#include "descriptors.h"
-#include "descriptors/desc_partial_reception.h"
-#include "dvb-fe.h"
-#include "parse_string.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/desc_partial_reception.h>
+#include <libdvbv5/dvb-fe.h>
+#include <parse_string.h>
 
 void isdb_desc_partial_reception_init(struct dvb_v5_fe_parms *parms,
 			      const uint8_t *buf, struct dvb_desc *desc)
diff --git a/lib/libdvbv5/descriptors/desc_sat.c b/lib/libdvbv5/descriptors/desc_sat.c
index d45d130..b38ab5f 100644
--- a/lib/libdvbv5/descriptors/desc_sat.c
+++ b/lib/libdvbv5/descriptors/desc_sat.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/desc_sat.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_sat.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_sat_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_service.c b/lib/libdvbv5/descriptors/desc_service.c
index e4f8ec0..2f1b6ef 100644
--- a/lib/libdvbv5/descriptors/desc_service.c
+++ b/lib/libdvbv5/descriptors/desc_service.c
@@ -19,10 +19,10 @@
  *
  */
 
-#include "descriptors/desc_service.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
-#include "parse_string.h"
+#include <libdvbv5/desc_service.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
+#include <parse_string.h>
 
 void dvb_desc_service_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_service_list.c b/lib/libdvbv5/descriptors/desc_service_list.c
index 18aa313..b81f961 100644
--- a/lib/libdvbv5/descriptors/desc_service_list.c
+++ b/lib/libdvbv5/descriptors/desc_service_list.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/desc_service_list.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_service_list.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 /* FIXME: implement */
 
diff --git a/lib/libdvbv5/descriptors/desc_service_location.c b/lib/libdvbv5/descriptors/desc_service_location.c
index b205428..c636862 100644
--- a/lib/libdvbv5/descriptors/desc_service_location.c
+++ b/lib/libdvbv5/descriptors/desc_service_location.c
@@ -18,9 +18,9 @@
  *
  */
 
-#include "descriptors/desc_service_location.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_service_location.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_service_location_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_t2_delivery.c b/lib/libdvbv5/descriptors/desc_t2_delivery.c
index ab4361d..a563164 100644
--- a/lib/libdvbv5/descriptors/desc_t2_delivery.c
+++ b/lib/libdvbv5/descriptors/desc_t2_delivery.c
@@ -19,10 +19,10 @@
  * Based on ETSI EN 300 468 V1.11.1 (2010-04)
  */
 
-#include "descriptors.h"
-#include "descriptors/desc_extension.h"
-#include "descriptors/desc_t2_delivery.h"
-#include "dvb-fe.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/desc_extension.h>
+#include <libdvbv5/desc_t2_delivery.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_t2_delivery_init(struct dvb_v5_fe_parms *parms,
 			       const uint8_t *buf,
diff --git a/lib/libdvbv5/descriptors/desc_terrestrial_delivery.c b/lib/libdvbv5/descriptors/desc_terrestrial_delivery.c
index ce3fefe..745813f 100644
--- a/lib/libdvbv5/descriptors/desc_terrestrial_delivery.c
+++ b/lib/libdvbv5/descriptors/desc_terrestrial_delivery.c
@@ -21,9 +21,9 @@
  *
  */
 
-#include "descriptors/desc_terrestrial_delivery.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/desc_terrestrial_delivery.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_desc_terrestrial_delivery_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, struct dvb_desc *desc)
 {
diff --git a/lib/libdvbv5/descriptors/desc_ts_info.c b/lib/libdvbv5/descriptors/desc_ts_info.c
index 0efb5f7..02fcb82 100644
--- a/lib/libdvbv5/descriptors/desc_ts_info.c
+++ b/lib/libdvbv5/descriptors/desc_ts_info.c
@@ -19,10 +19,10 @@
  * Described on ARIB STD-B10 as TS information descriptor
  */
 
-#include "descriptors.h"
-#include "descriptors/desc_ts_info.h"
-#include "dvb-fe.h"
-#include "parse_string.h"
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/desc_ts_info.h>
+#include <libdvbv5/dvb-fe.h>
+#include <parse_string.h>
 
 void dvb_desc_ts_info_init(struct dvb_v5_fe_parms *parms,
 			      const uint8_t *buf, struct dvb_desc *desc)
diff --git a/lib/libdvbv5/descriptors/eit.c b/lib/libdvbv5/descriptors/eit.c
index c2d01c3..e19d332 100644
--- a/lib/libdvbv5/descriptors/eit.c
+++ b/lib/libdvbv5/descriptors/eit.c
@@ -19,8 +19,8 @@
  *
  */
 
-#include "descriptors/eit.h"
-#include "dvb-fe.h"
+#include <libdvbv5/eit.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_table_eit_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length)
 {
diff --git a/lib/libdvbv5/descriptors/header.c b/lib/libdvbv5/descriptors/header.c
index d371eec..66f8424 100644
--- a/lib/libdvbv5/descriptors/header.c
+++ b/lib/libdvbv5/descriptors/header.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/header.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/header.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 int dvb_table_header_init(struct dvb_table_header *t)
 {
diff --git a/lib/libdvbv5/descriptors/mgt.c b/lib/libdvbv5/descriptors/mgt.c
index 09d1cf2..672e7f5 100644
--- a/lib/libdvbv5/descriptors/mgt.c
+++ b/lib/libdvbv5/descriptors/mgt.c
@@ -18,8 +18,8 @@
  *
  */
 
-#include "descriptors/mgt.h"
-#include "dvb-fe.h"
+#include <libdvbv5/mgt.h>
+#include <libdvbv5/dvb-fe.h>
 
 void atsc_table_mgt_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length)
 {
diff --git a/lib/libdvbv5/descriptors/mpeg_es.c b/lib/libdvbv5/descriptors/mpeg_es.c
index 9fcb5ca..92bbea5 100644
--- a/lib/libdvbv5/descriptors/mpeg_es.c
+++ b/lib/libdvbv5/descriptors/mpeg_es.c
@@ -18,9 +18,9 @@
  *
  */
 
-#include "descriptors/mpeg_es.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/mpeg_es.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 int dvb_mpeg_es_seq_start_init(const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_es_seq_start *seq_start)
 {
diff --git a/lib/libdvbv5/descriptors/mpeg_pes.c b/lib/libdvbv5/descriptors/mpeg_pes.c
index 98364a3..ab1cadf 100644
--- a/lib/libdvbv5/descriptors/mpeg_pes.c
+++ b/lib/libdvbv5/descriptors/mpeg_pes.c
@@ -18,9 +18,9 @@
  *
  */
 
-#include "descriptors/mpeg_pes.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/mpeg_pes.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length)
 {
diff --git a/lib/libdvbv5/descriptors/mpeg_ts.c b/lib/libdvbv5/descriptors/mpeg_ts.c
index b06cdf7..83e983a 100644
--- a/lib/libdvbv5/descriptors/mpeg_ts.c
+++ b/lib/libdvbv5/descriptors/mpeg_ts.c
@@ -18,9 +18,9 @@
  *
  */
 
-#include "descriptors/mpeg_ts.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/mpeg_ts.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 ssize_t dvb_mpeg_ts_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length)
 {
diff --git a/lib/libdvbv5/descriptors/nit.c b/lib/libdvbv5/descriptors/nit.c
index f0f6d73..ca565dd 100644
--- a/lib/libdvbv5/descriptors/nit.c
+++ b/lib/libdvbv5/descriptors/nit.c
@@ -19,8 +19,8 @@
  *
  */
 
-#include "descriptors/nit.h"
-#include "dvb-fe.h"
+#include <libdvbv5/nit.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_table_nit_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf,
 			ssize_t buflen, uint8_t *table, ssize_t *table_length)
diff --git a/lib/libdvbv5/descriptors/pat.c b/lib/libdvbv5/descriptors/pat.c
index dec0eba..67d267b 100644
--- a/lib/libdvbv5/descriptors/pat.c
+++ b/lib/libdvbv5/descriptors/pat.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/pat.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/pat.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_table_pat_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf,
 			ssize_t buflen, uint8_t *table, ssize_t *table_length)
diff --git a/lib/libdvbv5/descriptors/pmt.c b/lib/libdvbv5/descriptors/pmt.c
index 308a910..3915414 100644
--- a/lib/libdvbv5/descriptors/pmt.c
+++ b/lib/libdvbv5/descriptors/pmt.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/pmt.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
+#include <libdvbv5/pmt.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/dvb-fe.h>
 
 #include <string.h> /* memcpy */
 
diff --git a/lib/libdvbv5/descriptors/sdt.c b/lib/libdvbv5/descriptors/sdt.c
index 3650080..c15512f 100644
--- a/lib/libdvbv5/descriptors/sdt.c
+++ b/lib/libdvbv5/descriptors/sdt.c
@@ -19,8 +19,8 @@
  *
  */
 
-#include "descriptors/sdt.h"
-#include "dvb-fe.h"
+#include <libdvbv5/sdt.h>
+#include <libdvbv5/dvb-fe.h>
 
 void dvb_table_sdt_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf,
 			ssize_t buflen, uint8_t *table, ssize_t *table_length)
diff --git a/lib/libdvbv5/descriptors/vct.c b/lib/libdvbv5/descriptors/vct.c
index 493f184..5078991 100644
--- a/lib/libdvbv5/descriptors/vct.c
+++ b/lib/libdvbv5/descriptors/vct.c
@@ -19,9 +19,9 @@
  *
  */
 
-#include "descriptors/vct.h"
-#include "dvb-fe.h"
-#include "parse_string.h"
+#include <libdvbv5/vct.h>
+#include <libdvbv5/dvb-fe.h>
+#include <parse_string.h>
 
 void atsc_table_vct_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf,
 			ssize_t buflen, uint8_t *table, ssize_t *table_length)
diff --git a/lib/libdvbv5/dvb-demux.c b/lib/libdvbv5/dvb-demux.c
index bd4331f..8421a49 100644
--- a/lib/libdvbv5/dvb-demux.c
+++ b/lib/libdvbv5/dvb-demux.c
@@ -38,7 +38,7 @@
 #include <fcntl.h>
 #include <stdlib.h> /* free */
 
-#include "dvb-demux.h"
+#include <libdvbv5/dvb-demux.h>
 
 int dvb_dmx_open(int adapter, int demux)
 {
diff --git a/lib/libdvbv5/dvb-fe.c b/lib/libdvbv5/dvb-fe.c
index 4672267..1072d29 100644
--- a/lib/libdvbv5/dvb-fe.c
+++ b/lib/libdvbv5/dvb-fe.c
@@ -19,8 +19,8 @@
 #include <sys/types.h>
 
 #include "dvb-v5.h"
-#include "dvb-v5-std.h"
-#include "dvb-fe.h"
+#include <libdvbv5/dvb-v5-std.h>
+#include <libdvbv5/dvb-fe.h>
 
 #include <inttypes.h>
 #include <math.h>
diff --git a/lib/libdvbv5/dvb-file.c b/lib/libdvbv5/dvb-file.c
index de19dc5..9a06411 100644
--- a/lib/libdvbv5/dvb-file.c
+++ b/lib/libdvbv5/dvb-file.c
@@ -24,30 +24,30 @@
 #include <strings.h> /* strcasecmp */
 #include <unistd.h>
 
-#include "dvb-file.h"
-#include "dvb-v5-std.h"
-#include "dvb-scan.h"
-#include "dvb-log.h"
-#include "descriptors.h"
-#include "descriptors/nit.h"
-#include "descriptors/sdt.h"
-#include "descriptors/pat.h"
-#include "descriptors/pmt.h"
-#include "descriptors/vct.h"
-#include "descriptors/desc_ts_info.h"
-#include "descriptors/desc_logical_channel.h"
-#include "descriptors/desc_language.h"
-#include "descriptors/desc_network_name.h"
-#include "descriptors/desc_cable_delivery.h"
-#include "descriptors/desc_sat.h"
-#include "descriptors/desc_terrestrial_delivery.h"
-#include "descriptors/desc_service.h"
-#include "descriptors/desc_service_list.h"
-#include "descriptors/desc_frequency_list.h"
-#include "descriptors/desc_event_short.h"
-#include "descriptors/desc_event_extended.h"
-#include "descriptors/desc_atsc_service_location.h"
-#include "descriptors/desc_hierarchy.h"
+#include <libdvbv5/dvb-file.h>
+#include <libdvbv5/dvb-v5-std.h>
+#include <libdvbv5/dvb-scan.h>
+#include <libdvbv5/dvb-log.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/nit.h>
+#include <libdvbv5/sdt.h>
+#include <libdvbv5/pat.h>
+#include <libdvbv5/pmt.h>
+#include <libdvbv5/vct.h>
+#include <libdvbv5/desc_ts_info.h>
+#include <libdvbv5/desc_logical_channel.h>
+#include <libdvbv5/desc_language.h>
+#include <libdvbv5/desc_network_name.h>
+#include <libdvbv5/desc_cable_delivery.h>
+#include <libdvbv5/desc_sat.h>
+#include <libdvbv5/desc_terrestrial_delivery.h>
+#include <libdvbv5/desc_service.h>
+#include <libdvbv5/desc_service_list.h>
+#include <libdvbv5/desc_frequency_list.h>
+#include <libdvbv5/desc_event_short.h>
+#include <libdvbv5/desc_event_extended.h>
+#include <libdvbv5/desc_atsc_service_location.h>
+#include <libdvbv5/desc_hierarchy.h>
 
 /*
  * Generic parse function for all formats each channel is contained into
diff --git a/lib/libdvbv5/dvb-legacy-channel-format.c b/lib/libdvbv5/dvb-legacy-channel-format.c
index d05e3d2..a8a9ad0 100644
--- a/lib/libdvbv5/dvb-legacy-channel-format.c
+++ b/lib/libdvbv5/dvb-legacy-channel-format.c
@@ -21,8 +21,8 @@
 #include <stdlib.h>
 #include <string.h>
 
-#include "dvb-file.h"
-#include "dvb-v5-std.h"
+#include <libdvbv5/dvb-file.h>
+#include <libdvbv5/dvb-v5-std.h>
 
 /*
  * Standard channel.conf format for DVB-T, DVB-C, DVB-S and ATSC
diff --git a/lib/libdvbv5/dvb-log.c b/lib/libdvbv5/dvb-log.c
index 2be056a..5bb7d44 100644
--- a/lib/libdvbv5/dvb-log.c
+++ b/lib/libdvbv5/dvb-log.c
@@ -19,7 +19,7 @@
  *
  */
 
-#include "dvb-log.h"
+#include <libdvbv5/dvb-log.h>
 
 #include <stdio.h>
 #include <unistd.h>
diff --git a/lib/libdvbv5/dvb-sat.c b/lib/libdvbv5/dvb-sat.c
index ea3e2c1..9b3f73c 100644
--- a/lib/libdvbv5/dvb-sat.c
+++ b/lib/libdvbv5/dvb-sat.c
@@ -23,8 +23,8 @@
 #include <unistd.h>
 #include <strings.h> /* strcasecmp */
 
-#include "dvb-fe.h"
-#include "dvb-v5-std.h"
+#include <libdvbv5/dvb-fe.h>
+#include <libdvbv5/dvb-v5-std.h>
 
 static const struct dvb_sat_lnb lnb[] = {
 	{
diff --git a/lib/libdvbv5/dvb-scan.c b/lib/libdvbv5/dvb-scan.c
index 5f8596e..640f190 100644
--- a/lib/libdvbv5/dvb-scan.c
+++ b/lib/libdvbv5/dvb-scan.c
@@ -37,30 +37,30 @@
 #include <stdlib.h>
 #include <sys/time.h>
 
-#include "dvb-scan.h"
-#include "dvb-frontend.h"
-#include "descriptors.h"
+#include <libdvbv5/dvb-scan.h>
+#include <libdvbv5/dvb-frontend.h>
+#include <libdvbv5/descriptors.h>
 #include "parse_string.h"
 #include "crc32.h"
-#include "dvb-fe.h"
-#include "dvb-file.h"
-#include "dvb-scan.h"
-#include "dvb-log.h"
-#include "dvb-demux.h"
-#include "descriptors.h"
-#include "descriptors/header.h"
-#include "descriptors/pat.h"
-#include "descriptors/pmt.h"
-#include "descriptors/nit.h"
-#include "descriptors/sdt.h"
-#include "descriptors/vct.h"
-#include "descriptors/desc_extension.h"
-#include "descriptors/desc_cable_delivery.h"
-#include "descriptors/desc_isdbt_delivery.h"
-#include "descriptors/desc_partial_reception.h"
-#include "descriptors/desc_terrestrial_delivery.h"
-#include "descriptors/desc_t2_delivery.h"
-#include "descriptors/desc_sat.h"
+#include <libdvbv5/dvb-fe.h>
+#include <libdvbv5/dvb-file.h>
+#include <libdvbv5/dvb-scan.h>
+#include <libdvbv5/dvb-log.h>
+#include <libdvbv5/dvb-demux.h>
+#include <libdvbv5/descriptors.h>
+#include <libdvbv5/header.h>
+#include <libdvbv5/pat.h>
+#include <libdvbv5/pmt.h>
+#include <libdvbv5/nit.h>
+#include <libdvbv5/sdt.h>
+#include <libdvbv5/vct.h>
+#include <libdvbv5/desc_extension.h>
+#include <libdvbv5/desc_cable_delivery.h>
+#include <libdvbv5/desc_isdbt_delivery.h>
+#include <libdvbv5/desc_partial_reception.h>
+#include <libdvbv5/desc_terrestrial_delivery.h>
+#include <libdvbv5/desc_t2_delivery.h>
+#include <libdvbv5/desc_sat.h>
 
 static int poll(struct dvb_v5_fe_parms *parms, int fd, unsigned int seconds)
 {
diff --git a/lib/libdvbv5/dvb-v5-std.c b/lib/libdvbv5/dvb-v5-std.c
index 574ae1e..3a5802a 100644
--- a/lib/libdvbv5/dvb-v5-std.c
+++ b/lib/libdvbv5/dvb-v5-std.c
@@ -21,7 +21,7 @@
  */
 #include <stddef.h>
 
-#include "dvb-v5-std.h"
+#include <libdvbv5/dvb-v5-std.h>
 #include "dvb-v5.h"
 
 const unsigned int sys_dvbt_props[] = {
diff --git a/lib/libdvbv5/dvb-v5.h b/lib/libdvbv5/dvb-v5.h
index 1d920ce..bf2f550 100644
--- a/lib/libdvbv5/dvb-v5.h
+++ b/lib/libdvbv5/dvb-v5.h
@@ -3,7 +3,7 @@
  */
 #ifndef _DVB_V5_CONSTS_H
 #define _DVB_V5_CONSTS_H
-#include "../include/dvb-frontend.h"
+#include <libdvbv5/dvb-frontend.h>
 struct fe_caps_name {
 	unsigned  idx;
 	char *name;
diff --git a/lib/libdvbv5/dvb-zap-format.c b/lib/libdvbv5/dvb-zap-format.c
index b087d76..49b73c8 100644
--- a/lib/libdvbv5/dvb-zap-format.c
+++ b/lib/libdvbv5/dvb-zap-format.c
@@ -22,8 +22,8 @@
 #include <stdlib.h>
 #include <string.h>
 
-#include "dvb-file.h"
-#include "dvb-v5-std.h"
+#include <libdvbv5/dvb-file.h>
+#include <libdvbv5/dvb-v5-std.h>
 
 /*
  * Standard channel.conf format for DVB-T, DVB-C, DVB-S and ATSC
diff --git a/lib/libdvbv5/gen_dvb_structs.pl b/lib/libdvbv5/gen_dvb_structs.pl
index 80e2642..df69700 100755
--- a/lib/libdvbv5/gen_dvb_structs.pl
+++ b/lib/libdvbv5/gen_dvb_structs.pl
@@ -481,7 +481,7 @@ print OUT <<EOF;
  */
 #ifndef _DVB_V5_CONSTS_H
 #define _DVB_V5_CONSTS_H
-#include "../include/dvb-frontend.h"
+#include <libdvbv5/dvb-frontend.h>
 EOF
 output_arrays ("fe_caps_name", \%fe_caps, "unsigned", 1, 1);
 output_arrays ("fe_status_name", \%fe_status, "unsigned", 1, 1);
@@ -510,7 +510,7 @@ print OUT <<EOF;
  */
 #include <stddef.h>
 
-#include "dvb-v5.h"
+#include <libdvbv5/dvb-v5.h>
 
 EOF
 output_arrays ("fe_caps_name", \%fe_caps, "unsigned", 1, 0);
diff --git a/lib/libdvbv5/parse_string.c b/lib/libdvbv5/parse_string.c
index 5ae5a18..a5d2623 100644
--- a/lib/libdvbv5/parse_string.c
+++ b/lib/libdvbv5/parse_string.c
@@ -30,8 +30,8 @@
 #include <strings.h> /* strcasecmp */
 
 #include "parse_string.h"
-#include "dvb-log.h"
-#include "dvb-fe.h"
+#include <libdvbv5/dvb-log.h>
+#include <libdvbv5/dvb-fe.h>
 
 #define CS_OPTIONS "//TRANSLIT"
 
diff --git a/utils/dvb/dvb-fe-tool.c b/utils/dvb/dvb-fe-tool.c
index 4c88afd..fe8ac6b 100644
--- a/utils/dvb/dvb-fe-tool.c
+++ b/utils/dvb/dvb-fe-tool.c
@@ -18,7 +18,7 @@
  *
  */
 
-#include "dvb-file.h"
+#include "libdvbv5/dvb-file.h"
 #include <config.h>
 #include <argp.h>
 #include <stdlib.h>
diff --git a/utils/dvb/dvb-format-convert.c b/utils/dvb/dvb-format-convert.c
index cad0f59..98ab260 100644
--- a/utils/dvb/dvb-format-convert.c
+++ b/utils/dvb/dvb-format-convert.c
@@ -31,9 +31,9 @@
 
 #include <config.h>
 
-#include "dvb-file.h"
-#include "dvb-demux.h"
-#include "dvb-scan.h"
+#include "libdvbv5/dvb-file.h"
+#include "libdvbv5/dvb-demux.h"
+#include "libdvbv5/dvb-scan.h"
 
 #define PROGRAM_NAME	"dvb-format-convert"
 
diff --git a/utils/dvb/dvbv5-scan.c b/utils/dvb/dvbv5-scan.c
index d54d3c2..a23091b 100644
--- a/utils/dvb/dvbv5-scan.c
+++ b/utils/dvb/dvbv5-scan.c
@@ -33,10 +33,10 @@
 #include <config.h>
 
 #include <linux/dvb/dmx.h>
-#include "dvb-file.h"
-#include "dvb-demux.h"
-#include "dvb-v5-std.h"
-#include "dvb-scan.h"
+#include "libdvbv5/dvb-file.h"
+#include "libdvbv5/dvb-demux.h"
+#include "libdvbv5/dvb-v5-std.h"
+#include "libdvbv5/dvb-scan.h"
 
 #define PROGRAM_NAME	"dvbv5-scan"
 #define DEFAULT_OUTPUT  "dvb_channel.conf"
diff --git a/utils/dvb/dvbv5-zap.c b/utils/dvb/dvbv5-zap.c
index 8399046..df5c1de 100644
--- a/utils/dvb/dvbv5-zap.c
+++ b/utils/dvb/dvbv5-zap.c
@@ -37,10 +37,10 @@
 #include <config.h>
 
 #include <linux/dvb/dmx.h>
-#include "dvb-file.h"
-#include "dvb-demux.h"
-#include "dvb-scan.h"
-#include "descriptors/header.h"
+#include "libdvbv5/dvb-file.h"
+#include "libdvbv5/dvb-demux.h"
+#include "libdvbv5/dvb-scan.h"
+#include "libdvbv5/header.h"
 
 #define CHANNEL_FILE	"channels.conf"
 #define PROGRAM_NAME	"dvbv5-zap"
-- 
1.8.3.2

