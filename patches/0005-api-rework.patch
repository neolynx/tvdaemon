From 5f6f2c8e64283a011b98a39ab24e491e10d6fdeb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Sun, 9 Nov 2014 19:10:59 +0100
Subject: [PATCH 5/5] api rework

---
 lib/include/libdvbv5/mpeg_pes.h |  2 +-
 lib/include/libdvbv5/mpeg_ts.h  |  4 ++--
 lib/libdvbv5/tables/mpeg_pes.c  | 23 ++++++++++++++++++-----
 lib/libdvbv5/tables/mpeg_ts.c   | 20 +++++++++++++++-----
 lib/libdvbv5/tables/sdt.c       |  2 ++
 5 files changed, 38 insertions(+), 13 deletions(-)

diff --git a/lib/include/libdvbv5/mpeg_pes.h b/lib/include/libdvbv5/mpeg_pes.h
index 1bf62d7..b43adad 100644
--- a/lib/include/libdvbv5/mpeg_pes.h
+++ b/lib/include/libdvbv5/mpeg_pes.h
@@ -218,7 +218,7 @@ extern "C" {
  * allocated on stack or dynamically.
  */
 ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen,
-		uint8_t *table);
+		struct dvb_mpeg_pes **table);
 
 /**
  * @brief Deallocate memory associated with a struct dvb_mpeg_pes
diff --git a/lib/include/libdvbv5/mpeg_ts.h b/lib/include/libdvbv5/mpeg_ts.h
index fbd46d6..f3a646c 100644
--- a/lib/include/libdvbv5/mpeg_ts.h
+++ b/lib/include/libdvbv5/mpeg_ts.h
@@ -116,7 +116,7 @@ struct dvb_mpeg_ts {
 		uint8_t adaptation_field:1;
 		uint8_t scrambling:2;
 	} __attribute__((packed));
-	struct dvb_mpeg_ts_adaption adaption[];
+	struct dvb_mpeg_ts_adaption *adaption;
 } __attribute__((packed));
 
 struct dvb_v5_fe_parms;
@@ -142,7 +142,7 @@ extern "C" {
  * on stack or dynamically.
  */
 ssize_t dvb_mpeg_ts_init (struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen,
-		uint8_t *table, ssize_t *table_length);
+		struct dvb_mpeg_ts **table);
 
 /**
  * @brief Deallocate memory associated with a struct dvb_mpeg_ts
diff --git a/lib/libdvbv5/tables/mpeg_pes.c b/lib/libdvbv5/tables/mpeg_pes.c
index 8ccbbab..0880f1a 100644
--- a/lib/libdvbv5/tables/mpeg_pes.c
+++ b/lib/libdvbv5/tables/mpeg_pes.c
@@ -23,13 +23,22 @@
 #include <libdvbv5/dvb-fe.h>
 #include <inttypes.h>
 
-ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table)
+ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_pes **table)
 {
-	struct dvb_mpeg_pes *pes = (struct dvb_mpeg_pes *) table;
 	const uint8_t *p = buf;
+	struct dvb_mpeg_pes *pes;
 	ssize_t bytes_read = 0;
 
-	memcpy(table, p, sizeof(struct dvb_mpeg_pes));
+	if (!*table) {
+		*table = calloc(sizeof(struct dvb_mpeg_pes), 1);
+		if (!*table) {
+			dvb_logerr("%s: out of memory", __func__);
+			return -1;
+		}
+	}
+
+	pes = *table;
+	memcpy(pes, p, sizeof(struct dvb_mpeg_pes));
 	p += sizeof(struct dvb_mpeg_pes);
 	bytes_read += sizeof(struct dvb_mpeg_pes);
 
@@ -38,7 +47,9 @@ ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssi
 
 	if (pes->sync != 0x000001) {
 		dvb_logerr("mpeg pes invalid, sync 0x%06x should be 0x000001", pes->sync);
-		return -1;
+		free( pes );
+		*table = NULL;
+		return -2;
 	}
 
 	if (pes->stream_id == DVB_MPEG_STREAM_PADDING) {
@@ -51,7 +62,9 @@ ssize_t dvb_mpeg_pes_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssi
 		   pes->stream_id == DVB_MPEG_STREAM_DSMCC ||
 		   pes->stream_id == DVB_MPEG_STREAM_H222E ) {
 		dvb_logerr("mpeg pes: unsupported stream type 0x%04x", pes->stream_id);
-		return -2;
+		free( pes );
+		*table = NULL;
+		return -3;
 	} else {
 		memcpy(pes->optional, p, sizeof(struct dvb_mpeg_pes_optional) -
 					 sizeof(pes->optional->pts) -
diff --git a/lib/libdvbv5/tables/mpeg_ts.c b/lib/libdvbv5/tables/mpeg_ts.c
index 73496b2..e30d41c 100644
--- a/lib/libdvbv5/tables/mpeg_ts.c
+++ b/lib/libdvbv5/tables/mpeg_ts.c
@@ -22,34 +22,44 @@
 #include <libdvbv5/descriptors.h>
 #include <libdvbv5/dvb-fe.h>
 
-ssize_t dvb_mpeg_ts_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, uint8_t *table, ssize_t *table_length)
+ssize_t dvb_mpeg_ts_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf, ssize_t buflen, struct dvb_mpeg_ts **table)
 {
-	struct dvb_mpeg_ts *ts = (struct dvb_mpeg_ts *) table;
 	const uint8_t *p = buf;
+	struct dvb_mpeg_ts *ts;
 
 	if (buf[0] != DVB_MPEG_TS) {
 		dvb_logerr("mpeg ts invalid marker 0x%02x, sould be 0x%02x", buf[0], DVB_MPEG_TS);
-		*table_length = 0;
 		return -1;
 	}
 
-	memcpy(table, p, sizeof(struct dvb_mpeg_ts));
+	if (!*table) {
+		*table = calloc(sizeof(struct dvb_mpeg_ts), 1);
+		if (!*table) {
+			dvb_logerr("%s: out of memory", __func__);
+			return -2;
+		}
+	}
+
+	memcpy(ts, p, sizeof(struct dvb_mpeg_ts));
 	p += sizeof(struct dvb_mpeg_ts);
 
 	bswap16(ts->bitfield);
 
+	ts->adaption = NULL;
 	if (ts->adaptation_field) {
+		ts->adaption = calloc(sizeof(struct dvb_mpeg_ts_adaption), 1);
 		memcpy(ts->adaption, p, sizeof(struct dvb_mpeg_ts_adaption));
 		p += ts->adaption->length + 1;
 		/* FIXME: copy adaption->lenght bytes */
 	}
 
-	*table_length = p - buf;
 	return p - buf;
 }
 
 void dvb_mpeg_ts_free(struct dvb_mpeg_ts *ts)
 {
+	if (ts->adaption)
+		free(ts->adaption);
 	free(ts);
 }
 
diff --git a/lib/libdvbv5/tables/sdt.c b/lib/libdvbv5/tables/sdt.c
index ddca97d..6eaf7bd 100644
--- a/lib/libdvbv5/tables/sdt.c
+++ b/lib/libdvbv5/tables/sdt.c
@@ -25,6 +25,8 @@
 #include <libdvbv5/mpeg_ts.h>
 #include <libdvbv5/crc32.h>
 
+#include <string.h> /* memcpy */
+
 ssize_t dvb_table_sdt_init(struct dvb_v5_fe_parms *parms, const uint8_t *buf,
 			ssize_t buflen, struct dvb_table_sdt **table)
 {
-- 
2.1.0

