From 62dfa3e7677422896f254678440b558bdb631f0b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Roth?= <neolynx@gmail.com>
Date: Fri, 8 Jun 2012 02:54:26 +0200
Subject: [PATCH] sat descriptors

---
 lib/include/descriptors.h                |    6 +++
 lib/include/descriptors/desc_language.h  |   49 +++++++++++++++++++++++
 lib/include/descriptors/desc_sat.h       |   62 ++++++++++++++++++++++++++++++
 lib/include/descriptors/language.h       |   49 -----------------------
 lib/libdvbv5/Makefile.am                 |    3 +-
 lib/libdvbv5/descriptors.c               |   18 +++++++-
 lib/libdvbv5/descriptors/desc_language.c |   44 +++++++++++++++++++++
 lib/libdvbv5/descriptors/desc_sat.c      |   58 ++++++++++++++++++++++++++++
 lib/libdvbv5/descriptors/language.c      |   44 ---------------------
 lib/libdvbv5/descriptors/nit.c           |   13 +-----
 10 files changed, 238 insertions(+), 108 deletions(-)
 create mode 100644 lib/include/descriptors/desc_language.h
 create mode 100644 lib/include/descriptors/desc_sat.h
 delete mode 100644 lib/include/descriptors/language.h
 create mode 100644 lib/libdvbv5/descriptors/desc_language.c
 create mode 100644 lib/libdvbv5/descriptors/desc_sat.c
 delete mode 100644 lib/libdvbv5/descriptors/language.c

diff --git a/lib/include/descriptors.h b/lib/include/descriptors.h
index 6d6ab0c..e37b8b0 100644
--- a/lib/include/descriptors.h
+++ b/lib/include/descriptors.h
@@ -46,6 +46,10 @@ extern const struct dvb_table_init dvb_table_initializers[];
 	b = be16toh(b); \
 } while (0)
 
+#define bswap32(b) do {\
+	b = be32toh(b); \
+} while (0)
+
 struct dvb_desc {
 	uint8_t type;
 	struct dvb_desc *next;
@@ -53,6 +57,8 @@ struct dvb_desc {
 } __attribute__((packed));
 
 void dvb_desc_init(const uint8_t **buf, struct dvb_desc *desc);
+int bcd_to_int(const unsigned char *bcd, int bits);
+uint32_t bcd(uint32_t bcd);
 
 ssize_t dvb_parse_descriptor(const uint8_t *buf, uint8_t *dest, uint16_t section_length, struct dvb_desc **head_desc);
 
diff --git a/lib/include/descriptors/desc_language.h b/lib/include/descriptors/desc_language.h
new file mode 100644
index 0000000..31af97e
--- /dev/null
+++ b/lib/include/descriptors/desc_language.h
@@ -0,0 +1,49 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _LANGUAGE_H
+#define _LANGUAGE_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_language {
+	uint8_t type;
+	struct dvb_desc *next;
+
+	unsigned char language[4];
+	uint8_t audio_type;
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+ssize_t dvb_desc_language_init(const uint8_t **buf, struct dvb_desc *desc);
+void dvb_desc_language_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/descriptors/desc_sat.h b/lib/include/descriptors/desc_sat.h
new file mode 100644
index 0000000..0beb588
--- /dev/null
+++ b/lib/include/descriptors/desc_sat.h
@@ -0,0 +1,62 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#ifndef _SAT_H
+#define _SAT_H
+
+#include <stdint.h>
+#include <unistd.h> /* ssize_t */
+
+struct dvb_desc_sat {
+	uint8_t type;
+	struct dvb_desc *next;
+
+	uint8_t length;
+	uint32_t frequency;
+	uint16_t orbit;
+	uint8_t modulation_type:2;
+	uint8_t modulation_system:1;
+	uint8_t roll_off:2;
+	uint8_t polarization:2;
+	uint8_t west_east:1;
+	union {
+		uint32_t bitfield;
+		struct {
+			uint32_t fec:4;
+			uint32_t symbol_rate:28;
+		};
+	};
+} __attribute__((packed));
+
+struct dvb_v5_fe_parms;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+ssize_t dvb_desc_sat_init(const uint8_t **buf, struct dvb_desc *desc);
+void dvb_desc_sat_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/lib/include/descriptors/language.h b/lib/include/descriptors/language.h
deleted file mode 100644
index 31af97e..0000000
--- a/lib/include/descriptors/language.h
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#ifndef _LANGUAGE_H
-#define _LANGUAGE_H
-
-#include <stdint.h>
-#include <unistd.h> /* ssize_t */
-
-struct dvb_desc_language {
-	uint8_t type;
-	struct dvb_desc *next;
-
-	unsigned char language[4];
-	uint8_t audio_type;
-} __attribute__((packed));
-
-struct dvb_v5_fe_parms;
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-ssize_t dvb_desc_language_init(const uint8_t **buf, struct dvb_desc *desc);
-void dvb_desc_language_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/lib/libdvbv5/Makefile.am b/lib/libdvbv5/Makefile.am
index f95d322..7fe0c22 100644
--- a/lib/libdvbv5/Makefile.am
+++ b/lib/libdvbv5/Makefile.am
@@ -26,8 +26,9 @@ libdvbv5_la_SOURCES = \
   descriptors/header.c ../include/descriptors/header.h \
   descriptors/pat.c  ../include/descriptors/pat.h \
   descriptors/pmt.c  ../include/descriptors/pmt.h \
-  descriptors/language.c  ../include/descriptors/language.h \
+  descriptors/desc_language.c  ../include/descriptors/desc_language.h \
   descriptors/desc_network_name.c  ../include/descriptors/desc_network_name.h \
+  descriptors/desc_sat.c  ../include/descriptors/desc_sat.h \
   descriptors/nit.c  ../include/descriptors/nit.h
 
 libdvbv5_la_CPPFLAGS = $(ENFORCE_LIBDVBV5_STATIC)
diff --git a/lib/libdvbv5/descriptors.c b/lib/libdvbv5/descriptors.c
index c333c7b..390bb27 100644
--- a/lib/libdvbv5/descriptors.c
+++ b/lib/libdvbv5/descriptors.c
@@ -31,8 +31,9 @@
 
 #include "descriptors/pat.h"
 #include "descriptors/pmt.h"
-#include "descriptors/language.h"
+#include "descriptors/desc_language.h"
 #include "descriptors/desc_network_name.h"
+#include "descriptors/desc_sat.h"
 #include "descriptors/nit.h"
 
 void dvb_desc_init(const uint8_t **buf, struct dvb_desc *desc)
@@ -117,7 +118,7 @@ const struct dvb_descriptor dvb_descriptors[] = {
 	[network_name_descriptor] = { "network_name_descriptor", dvb_desc_network_name_init, dvb_desc_network_name_print },
 	[service_list_descriptor] = { "service_list_descriptor", NULL, NULL },
 	[stuffing_descriptor] = { "stuffing_descriptor", NULL, NULL },
-	[satellite_delivery_system_descriptor] = { "satellite_delivery_system_descriptor", NULL, NULL },
+	[satellite_delivery_system_descriptor] = { "satellite_delivery_system_descriptor", dvb_desc_sat_init, dvb_desc_sat_print },
 	[cable_delivery_system_descriptor] = { "cable_delivery_system_descriptor", NULL, NULL },
 	[VBI_data_descriptor] = { "VBI_data_descriptor", NULL, NULL },
 	[VBI_teletext_descriptor] = { "VBI_teletext_descriptor", NULL, NULL },
@@ -245,7 +246,18 @@ static const char *extension_descriptors[] = {
 };
 
 
-static int bcd_to_int(const unsigned char *bcd, int bits)
+uint32_t bcd(uint32_t bcd)
+{
+	uint32_t ret = 0, mult = 1;
+	while (bcd) {
+		ret += (bcd & 0x0f) * mult;
+		bcd >>=4;
+		mult *= 10;
+	}
+	return ret;
+}
+
+int bcd_to_int(const unsigned char *bcd, int bits)
 {
 	int nibble = 0;
 	int ret = 0;
diff --git a/lib/libdvbv5/descriptors/desc_language.c b/lib/libdvbv5/descriptors/desc_language.c
new file mode 100644
index 0000000..7d42d68
--- /dev/null
+++ b/lib/libdvbv5/descriptors/desc_language.c
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#include "descriptors/desc_language.h"
+#include "descriptors.h"
+#include "dvb-fe.h"
+
+ssize_t dvb_desc_language_init(const uint8_t **buf, struct dvb_desc *desc)
+{
+	dvb_desc_init(buf, desc);
+	struct dvb_desc_language *lang = (struct dvb_desc_language *) desc;
+	lang->language[0] = (*buf)[2];
+	lang->language[1] = (*buf)[3];
+	lang->language[2] = (*buf)[4];
+	lang->language[3] = '\0';
+	lang->audio_type  = (*buf)[5];
+	*buf += 6;
+	return sizeof(struct dvb_desc_language);
+}
+
+void dvb_desc_language_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc)
+{
+	const struct dvb_desc_language *lang = (const struct dvb_desc_language *) desc;
+	dvb_log("|                   lang: %s (type: %d)", lang->language, lang->audio_type);
+}
+
diff --git a/lib/libdvbv5/descriptors/desc_sat.c b/lib/libdvbv5/descriptors/desc_sat.c
new file mode 100644
index 0000000..f7b0806
--- /dev/null
+++ b/lib/libdvbv5/descriptors/desc_sat.c
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
+ * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation version 2
+ * of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ *
+ */
+
+#include "descriptors/desc_sat.h"
+#include "descriptors.h"
+#include "dvb-fe.h"
+
+ssize_t dvb_desc_sat_init(const uint8_t **buf, struct dvb_desc *desc)
+{
+	dvb_desc_init(buf, desc);
+	struct dvb_desc_sat *sat = (struct dvb_desc_sat *) desc;
+	/* copy from .length */
+	memcpy(((uint8_t *) sat ) + sizeof(sat->type) + sizeof(sat->next),
+		(*buf) + sizeof(sat->type),
+		sizeof(struct dvb_desc_sat) - sizeof(sat->type) - sizeof(sat->next));
+	bswap16(sat->orbit);
+	bswap32(sat->bitfield);
+	bswap32(sat->frequency);
+	sat->frequency   = bcd(sat->frequency) * 10;
+	sat->symbol_rate = bcd(sat->symbol_rate) * 100;
+
+	*buf += sizeof(struct dvb_desc_sat) - sizeof(sat->next);
+	return sizeof(struct dvb_desc_sat);
+}
+
+void dvb_desc_sat_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc)
+{
+	const struct dvb_desc_sat *sat = (const struct dvb_desc_sat *) desc;
+	dvb_log("|           length            %d", sat->length);
+	dvb_log("|           frequency         %d", sat->frequency);
+	dvb_log("|           orbit             %d", sat->orbit);
+	dvb_log("|           modulation_type   %d", sat->modulation_type);
+	dvb_log("|           modulation_system %d", sat->modulation_system);
+	dvb_log("|           roll_off          %d", sat->roll_off);
+	dvb_log("|           polarization      %d", sat->polarization);
+	dvb_log("|           west_east         %d", sat->west_east);
+	dvb_log("|           fec               %d", sat->fec);
+	dvb_log("|           symbol_rate       %d", sat->symbol_rate);
+}
+
diff --git a/lib/libdvbv5/descriptors/language.c b/lib/libdvbv5/descriptors/language.c
deleted file mode 100644
index 1823a96..0000000
--- a/lib/libdvbv5/descriptors/language.c
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (c) 2011-2012 - Mauro Carvalho Chehab <mchehab@redhat.com>
- * Copyright (c) 2012 - Andre Roth <neolynx@gmail.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation version 2
- * of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- * Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
- *
- */
-
-#include "descriptors/language.h"
-#include "descriptors.h"
-#include "dvb-fe.h"
-
-ssize_t dvb_desc_language_init(const uint8_t **buf, struct dvb_desc *desc)
-{
-	dvb_desc_init(buf, desc);
-	struct dvb_desc_language *lang = (struct dvb_desc_language *) desc;
-	lang->language[0] = (*buf)[2];
-	lang->language[1] = (*buf)[3];
-	lang->language[2] = (*buf)[4];
-	lang->language[3] = '\0';
-	lang->audio_type  = (*buf)[5];
-	*buf += 6;
-	return sizeof(struct dvb_desc_language);
-}
-
-void dvb_desc_language_print(struct dvb_v5_fe_parms *parms, const struct dvb_desc *desc)
-{
-	const struct dvb_desc_language *lang = (const struct dvb_desc_language *) desc;
-	dvb_log("|                   lang: %s (type: %d)", lang->language, lang->audio_type);
-}
-
diff --git a/lib/libdvbv5/descriptors/nit.c b/lib/libdvbv5/descriptors/nit.c
index 8d1e431..1a322dd 100644
--- a/lib/libdvbv5/descriptors/nit.c
+++ b/lib/libdvbv5/descriptors/nit.c
@@ -38,16 +38,8 @@ void *dvb_table_nit_init(const uint8_t *buf, ssize_t size)
 	nit->transport = NULL;
 
 	d += dvb_parse_descriptor(p, d, nit->desc_length, &nit->descriptor);
-
 	p += nit->desc_length;
 
-	/*union dvb_table_nit_transport_header *h = (union dvb_table_nit_transport_header *)*/
-					  /*(buf + sizeof(struct dvb_table_nit) - sizeof(uint16_t) + nit->desc_length);*/
-	/*bswap16(h->bitfield);*/
-
-	/*printf("got transport len: %d\n", h->transport_length);*/
-
-	/*uint8_t *p = (uint8_t *) h;*/
 	p += sizeof(union dvb_table_nit_transport_header);
 
 	struct dvb_table_nit_transport *last = NULL;
@@ -69,7 +61,7 @@ void *dvb_table_nit_init(const uint8_t *buf, ssize_t size)
 		if(last)
 			last->next = transport;
 
-		/* get the descriptors for each program */
+		/* get the descriptors for each transport */
 		struct dvb_desc **head_desc = &transport->descriptor;
 		d += dvb_parse_descriptor(p, d, transport->section_length, head_desc);
 
@@ -90,11 +82,10 @@ void dvb_table_nit_print(struct dvb_v5_fe_parms *parms, struct dvb_table_nit *ni
 			dvb_descriptors[desc->type].print(parms, desc);
 		desc = desc->next;
 	}
-	dvb_log("|\\  transport_id  network_id");
 	const struct dvb_table_nit_transport *transport = nit->transport;
 	uint16_t transports = 0;
 	while(transport) {
-		dvb_log("|- %7d %7d", transport->transport_id, transport->network_id);
+		dvb_log("|- Transport: %-7d Network: %-7d", transport->transport_id, transport->network_id);
 		desc = transport->descriptor;
 		while (desc) {
 			if (dvb_descriptors[desc->type].print)
-- 
1.7.2.5

